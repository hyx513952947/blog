{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/猴猴.png","path":"images/猴猴.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"8a96770b864ba61dafbdb9a74ecea69e6311e156","modified":1526629990706},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1526867170876},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1526867170877},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1526867170879},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1526867170880},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1526867170879},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1526867170880},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1526867170880},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1526867170880},{"_id":"themes/next/_config.yml","hash":"f2bbc01cadee7c255e0b94020759cb25d7415ccc","modified":1526965582409},{"_id":"themes/next/bower.json","hash":"486ebd72068848c97def75f36b71cbec9bb359c5","modified":1526867170882},{"_id":"themes/next/README.cn.md","hash":"b764aae78ffa561a9a68fdee4c6f21c3ce260fbb","modified":1526867227116},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1526867170882},{"_id":"themes/next/README.md","hash":"4e276fb9a3c31f1259df3ea9a4b92f4a8d72714d","modified":1526867227117},{"_id":"themes/next/package.json","hash":"3963ad558a24c78a3fd4ef23cf5f73f421854627","modified":1526867170914},{"_id":"source/_drafts/draft.md","hash":"b472be5771163e18b109ee34e0cc62ba571bb40d","modified":1526872290586},{"_id":"source/_posts/hello-world.md","hash":"37c73607fd7c05d7614286d64dbf6be29edd9072","modified":1526879246869},{"_id":"source/_posts/java反射.md","hash":"4528005c3ce591a2bfbc37456e332fec0f1d6ad8","modified":1526890703296},{"_id":"source/_posts/妞妞照片.md","hash":"56d4e6306426b4fe6b1ead640c770d0fdceca2df","modified":1526889371195},{"_id":"source/_posts/post.md","hash":"e9477a6828b1ba2af7b661f79d06d15e3bf3ebd0","modified":1526879015609},{"_id":"source/_posts/我的妞妞.md","hash":"06176ad50febd5268ca2f72f43d2ad2dee7a7e69","modified":1526885811939},{"_id":"source/page/index.md","hash":"d462ca3fc8bb17a0046c26b8e7754526ce756895","modified":1526872276538},{"_id":"source/categories/index.md","hash":"9a642533cf618eb4893369b9d1476d9f7271ec5e","modified":1526871964957},{"_id":"source/_posts/模块模式设计.md","hash":"950cd661e2e639f5ddd276bd9b95474b6a6eac8e","modified":1526892827356},{"_id":"source/_posts/Android中的设计模式.md","hash":"09ff9f0df5f839054907b92a9eb0a8a54a4cd78e","modified":1526892986770},{"_id":"source/tags/index.md","hash":"8db41bfd497c89c30d423df35240018bc13633c0","modified":1526871989544},{"_id":"themes/next/layout/_layout.swig","hash":"2164570bb05db11ee4bcfbbb5d183a759afe9d07","modified":1526867170889},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1526867170912},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1526867170912},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1526867170913},{"_id":"themes/next/layout/page.swig","hash":"e8fcaa641d46930237675d2ad4b56964d9e262e9","modified":1526867170913},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1526867170914},{"_id":"themes/next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1526867170913},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1526867170914},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1526867170883},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1526867170883},{"_id":"themes/next/languages/en.yml","hash":"2f4b4776ca1a08cc266a19afb0d1350a3926f42c","modified":1526867170884},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1526867170884},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1526867170884},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1526867170885},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1526867170885},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1526867170885},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1526867170886},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1526867170886},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1526867170887},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1526867170886},{"_id":"themes/next/languages/vi.yml","hash":"a9b89ebd3e5933033d1386c7c56b66c44aca299a","modified":1526867170887},{"_id":"themes/next/languages/zh-Hans.yml","hash":"66b9b42f143c3cb2f782a94abd4c4cbd5fd7f55f","modified":1526867170887},{"_id":"themes/next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1526867170888},{"_id":"themes/next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1526867170888},{"_id":"themes/next/scripts/merge-configs.js","hash":"38d86aab4fc12fb741ae52099be475196b9db972","modified":1526867170915},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1526867170915},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1526867171026},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1526867171026},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1526867171026},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526867170956},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1526867170889},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1526867170889},{"_id":"themes/next/layout/_partials/footer.swig","hash":"26e93336dc57a39590ba8dc80564a1d2ad5ff93b","modified":1526867170892},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4adc65a602d1276615da3b887dcbf2ac68e7382b","modified":1526867170892},{"_id":"themes/next/layout/_partials/head.swig","hash":"f14a39dad1ddd98e6d3ceb25dda092ba80d391b5","modified":1526867170892},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1526867170894},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1526867170894},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1526867170895},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1526867170895},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1526867170890},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1526867170890},{"_id":"themes/next/layout/_macro/post.swig","hash":"f85b18a32e86473f76b2ed31e53da4a13ffb3f74","modified":1526889578752},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1526867170891},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9c7343fd470e0943ebd75f227a083a980816290b","modified":1526867170891},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1526867170891},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1526867170898},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1526867170899},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1526867170900},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1526867170907},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1526867170908},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1526867170908},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1526867170908},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1526867170909},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1526867170909},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1526867170909},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1526867170916},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1526867170916},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1526867170917},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1526867170917},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1526867170918},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1526867170918},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1526867170917},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1526867170919},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1526867170956},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1526867170956},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1526867170958},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1526867170957},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1526867170958},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1526867170959},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1526867170957},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1526867170959},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1526867170918},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1526867170959},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1526867170960},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1526867170960},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1526867170961},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1526867170960},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1526867170961},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1526867170961},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1526867170960},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1526867170961},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1526867170962},{"_id":"themes/next/source/images/猴猴.png","hash":"99e91ec406a671b58b952fa44ee3b491027d147c","modified":1526888968804},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1526867170962},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526867170900},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526867170900},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526867170944},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526867170945},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526867170945},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526867170954},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526867170955},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1526867170893},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1526867170893},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1526867170896},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1526867170896},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1526867170896},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1526867170897},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1526867170897},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1526867170898},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1526867170898},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1526867170899},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1526867170899},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1526867170900},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1526867170901},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1526867170901},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1526867170902},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1526867170902},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1526867170902},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1526867170903},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1526867170903},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1526867170903},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1526867170903},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1526867170904},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1526867170904},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1526867170904},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1526867170905},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1526867170905},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1526867170905},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1526867170906},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1526867170906},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1526867170906},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"493bd5999a1061b981922be92d8277a0f9152447","modified":1526867170906},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1526867170907},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1526867170907},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1526867170907},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1526867170911},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1526867170911},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1526867170911},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1526867170912},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1526867170944},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1526867170945},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1526867170945},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1526867170944},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1526867170954},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1526867170954},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4069f918ccc312da86db6c51205fc6c6eaabb116","modified":1526867170955},{"_id":"themes/next/source/css/_variables/base.styl","hash":"b1f6ea881a4938a54603d68282b0f8efb4d7915d","modified":1526867170955},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1526867170963},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1526867170963},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1526867170964},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1526867170964},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1526867170964},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1526867170965},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1526867170965},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1526867170966},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1526867170966},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1526867170967},{"_id":"themes/next/source/js/src/utils.js","hash":"b3e9eca64aba59403334f3fa821f100d98d40337","modified":1526867170967},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1526867170978},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1526867170977},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1526867170978},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1526867170978},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1526867170985},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1526867170985},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1526867170985},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1526867170986},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1526867171004},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1526867171005},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1526867171005},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1526867171005},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1526867171006},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1526867170987},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1526867171006},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1526867170988},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1526867170988},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1526867170988},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1526867170973},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1526867170988},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1526867171003},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"2ce5f3bf15c523b9bfc97720d8884bb22602a454","modified":1526867171008},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1526867171009},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1526867171007},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1526867171008},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1526867171009},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1526867171009},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1526867171010},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1526867171010},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1526867171010},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1526867171011},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1526867171011},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1526867171012},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1526867171013},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1526867171013},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1526867171014},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1526867171014},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1526867171007},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1526867171020},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1526867171012},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1526867171021},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1526867171024},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1526867171024},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1526867171024},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1526867171011},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1526867171011},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1526867171004},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1526867170910},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1526867170910},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1526867170920},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1526867170920},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1526867170920},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1526867170920},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1526867170921},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1526867170927},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1526867170935},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1526867170941},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1526867170942},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1526867170942},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1526867170942},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1526867170943},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1526867170943},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1526867170943},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1526867170946},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1526867170947},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1526867170947},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1526867170947},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1526867170947},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1526867170948},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1526867170948},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1526867170948},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1526867170950},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1526867170950},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"a98ad885ee4f48d85b2578a0b9c2bbf166e96733","modified":1526867227118},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1526867170951},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1526867170951},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1526867170952},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1526867170952},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1526867170952},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1526867170953},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"ad2dcedf393ed1f3f5afd2508d24969c916d02fc","modified":1526867170953},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1526867170953},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1526867170966},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1526867170973},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1526867170979},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1526867170979},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1526867170980},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1526867170980},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1526867170980},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1526867170981},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1526867170984},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1526867170984},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1526867170971},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1526867170986},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1526867170987},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1526867170972},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1526867170983},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1526867170990},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1526867171019},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1526867170990},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1526867170989},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1526867171020},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1526867170972},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1526867171002},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1526867171002},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1526867171024},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1526867170921},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1526867170923},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1526867170923},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1526867170923},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1526867170923},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1526867170924},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1526867170924},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1526867170924},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1526867170925},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1526867170925},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1526867170925},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1526867170926},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1526867170926},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1526867170926},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1526867170927},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1526867170927},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1526867170928},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1526867170928},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1526867170928},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1526867170929},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1526867170929},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1526867170930},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1526867170929},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1526867170930},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1526867170930},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1526867170930},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1526867170931},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"89d6c3b697efc63de42afd2e89194b1be14152af","modified":1526867170931},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1526867170931},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1526867170932},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1526867170932},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1526867170933},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1526867170932},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1526867170933},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1526867170934},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1526867170933},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"c8fe49a4bc014c24dead05b782a7082411a4abc5","modified":1526867170933},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1526867170934},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1526867170934},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1526867170935},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1526867170935},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"f825da191816eef69ea8efb498a7f756d5ebb498","modified":1526867170936},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1526867170936},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1526867170936},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1526867170937},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1526867170937},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1526867170937},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1526867170938},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1526867170938},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1526867170939},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1526867170939},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1526867170939},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1526867170939},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1526867170940},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1526867170940},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1526867170940},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1526867170940},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1526867170941},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1526867170949},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1526867170949},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1526867170951},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1526867170968},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1526867170969},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1526867170969},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1526867170970},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1526867170970},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1526867170981},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1526867170982},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1526867170982},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1526867170983},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1526867170981},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1526867170992},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1526867170983},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1526867170995},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1526867171001},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1526867170977},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1526867171018},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1526867170999},{"_id":"source/_posts/妞妞照片/001.jpg","hash":"5e9c7e8d918739b3aaaa161d4bcaf32021f25a76","modified":1514023942000},{"_id":"public/search.xml","hash":"9a6902c247297b671426fa7363d4d8d8c2750d4c","modified":1526965646044},{"_id":"public/categories/index.html","hash":"fe1f55e617471d86c97066cfc82e8dbd22e43a5e","modified":1526965646139},{"_id":"public/tags/index.html","hash":"221bbd8aa40da47eeec5e989360238686e75ebd6","modified":1526965646140},{"_id":"public/2018/05/21/Android中的设计模式/index.html","hash":"9d677550ae5f408ba73ac0037355427e7cb084a7","modified":1526965646140},{"_id":"public/2018/05/21/模块模式设计/index.html","hash":"c59c51fd3879fbf923b987e3be54460b2827f909","modified":1526965646140},{"_id":"public/2018/05/21/java反射/index.html","hash":"8e041bb2a1c62d8c0953d12ec6ad71c2893eb1d7","modified":1526965646140},{"_id":"public/2018/05/21/妞妞照片/index.html","hash":"b9eb65cd9ef26ea512a9f1b57410a1ffd0b939bc","modified":1526965646140},{"_id":"public/page/index.html","hash":"106514cb3b661da4277cabc6cf965bc01a37b1cd","modified":1526965094212},{"_id":"public/2018/05/21/我的妞妞/index.html","hash":"cfcfe5d613751cbde4fa157f1f0d19c63dcbbd47","modified":1526965646140},{"_id":"public/2018/05/21/post/index.html","hash":"ab582bae10abbc94eacdb27c19309be803d8acc5","modified":1526965646141},{"_id":"public/archives/index.html","hash":"f225646af743ac1577179ec5d565b3cf6b2bf8ac","modified":1526965646140},{"_id":"public/archives/2018/index.html","hash":"9922b4903e38ebd7cba030fdb2712ee18d38bbc4","modified":1526965646141},{"_id":"public/archives/2018/05/index.html","hash":"fad46bebfc6326315929be3dc94ba6f9d2620559","modified":1526965646141},{"_id":"public/categories/照片/index.html","hash":"59b6354ae3ef2322ccca58a1ae11daba443b59c4","modified":1526965646141},{"_id":"public/categories/java/index.html","hash":"78768cd75ae2c2e7d7aee2ae6202198dc6c2534f","modified":1526965646141},{"_id":"public/categories/通用/index.html","hash":"a3c497fb478ad6377ac2a4ee36b611e212be0de6","modified":1526965646141},{"_id":"public/categories/Android/index.html","hash":"a30aac77700b324ee34fb67cdc3f4609bbe37849","modified":1526965646141},{"_id":"public/index.html","hash":"0e01716d810b8f6d4915d32dd6ad7390f874b013","modified":1526965646141},{"_id":"public/tags/妞妞/index.html","hash":"3f5bf6fb34784c3961e55c747f3b3e15f3a5f20b","modified":1526965646141},{"_id":"public/tags/给自己/index.html","hash":"54a4ee74becf3b543f94f5eba9df436c6607d135","modified":1526965646141},{"_id":"public/tags/反射/index.html","hash":"af49f3a2ff0dae497051cb800b30cd1c570055f4","modified":1526965646141},{"_id":"public/tags/设计模式/index.html","hash":"1bd1f176df7597d056fb96647359009131401f50","modified":1526965646142},{"_id":"public/2018/05/22/hello-world/index.html","hash":"7e880fba56b7e0ec4bd721403bc88f289b7d61a7","modified":1526965646140},{"_id":"public/CNAME","hash":"8a96770b864ba61dafbdb9a74ecea69e6311e156","modified":1526954719102},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1526954719102},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1526954719102},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1526954719102},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1526954719102},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1526954719102},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1526954719103},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1526954719103},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1526954719103},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1526954719103},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1526954719103},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1526954719103},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1526954719103},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1526954719103},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1526954719103},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1526954719103},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1526954719103},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1526954719103},{"_id":"public/images/猴猴.png","hash":"99e91ec406a671b58b952fa44ee3b491027d147c","modified":1526954719103},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1526954719104},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1526954719104},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1526954719104},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1526954719737},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1526954719737},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1526954719742},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1526954719742},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1526954719742},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1526954719743},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1526954719743},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1526954719743},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1526954719743},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1526954719743},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1526954719743},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1526954719743},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1526954719743},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1526954719758},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1526954719758},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1526954719765},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1526954719766},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1526954719766},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1526954719766},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1526954719766},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1526954719766},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1526954719766},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1526954719766},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1526954719766},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1526954719766},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1526954719766},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1526954719766},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1526954719766},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1526954719767},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1526954719767},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1526954719767},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1526954719767},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1526954719767},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1526954719767},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1526954719768},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1526954719768},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1526954719768},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1526954719768},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1526954719768},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1526954719768},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1526954719768},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1526954719768},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1526954719768},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1526954719768},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1526954719769},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1526954719769},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1526954719769},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1526954719769},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1526954719769},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1526954719769},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1526954719769},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1526954719769},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1526954719769},{"_id":"public/css/main.css","hash":"73ed7549d6058ec11cd0dc028dc0072fc07fb6db","modified":1526954719769},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1526954719769},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1526954719769},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1526954719770},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1526954719770},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1526954719770},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1526954719770},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1526954719770},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1526954719771},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1526954719771},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1526954719771},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1526954719771},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1526954719777},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1526954719777},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1526954719777},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1526954719778},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1526954719778},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1526954719778},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1526954719778},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1526954719778},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1526954719778},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1526954719778},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1526954719778},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1526954719778},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1526954719778},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1526954719778},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1526954719778},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1526954719778},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1526954719778},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1526954719779},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1526954719779},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1526954719779},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1526954719779},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1526954719779},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1526954719780},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1526954719799},{"_id":"public/2018/05/21/妞妞照片/001.jpg","hash":"5e9c7e8d918739b3aaaa161d4bcaf32021f25a76","modified":1526954719822},{"_id":"source/_posts/markdown编辑器.md","hash":"7e865965162d19de9ca4a5c1e9e326fad0716d47","modified":1526959539964},{"_id":"public/categories/编辑器/index.html","hash":"0dceddeabd74a3223131e261bd6a40700ebc7bf7","modified":1526965646141},{"_id":"public/tags/markdown/index.html","hash":"ae42021e125fe7edb1fd021b10305df343880ddf","modified":1526965646142},{"_id":"public/2018/05/22/markdown编辑器/index.html","hash":"14f252b9ddb0674b9509efc5efa6339e3274e96d","modified":1526965646140},{"_id":"public/baidusitemap.xml","hash":"05fdaf5c48713126ae075dfcca53cf3445d92c8f","modified":1526965644503},{"_id":"source/schedules/index.md","hash":"9424e36a1955c3ae9a716e0ac3c28208a53bc2eb","modified":1526965383027},{"_id":"source/schedule/index.md","hash":"3cccca6c5146c8a762f1c6c3a5b79b22d3648f4d","modified":1526965636204},{"_id":"public/schedule/index.html","hash":"cdc258c2eb54d905e0c41eb692cf7713f9706689","modified":1526965646143}],"Category":[{"name":"照片","_id":"cjhh1ew7c0007wgw5e9qq6d8d"},{"name":"java","_id":"cjhh1ew7o000dwgw55fncwh7z"},{"name":"通用","_id":"cjhh1ew7t000iwgw5ohu8dfgg"},{"name":"Android","_id":"cjhh1ew7v000nwgw528j6pnav"},{"name":"编辑器","_id":"cjhh2ltb00001dkw5fzycr4oz"}],"Data":[],"Page":[{"title":"所有分类","date":"2018-05-21T03:02:24.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 所有分类\ndate: 2018-05-21 11:02:24\ntype: \"categories\"\n---\n","updated":"2018-05-21T03:06:04.957Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjhh1ew750003wgw55gqfu3ef","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"所有标签","date":"2018-05-21T03:01:30.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 所有标签\ndate: 2018-05-21 11:01:30\ntype: \"tags\"\n---\n","updated":"2018-05-21T03:06:29.544Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjhh1ew780005wgw5wsng5pqz","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"所有备忘录","date":"2018-05-21T03:01:30.000Z","type":"schedule","_content":"","source":"schedule/index.md","raw":"---\ntitle: 所有备忘录\ndate: 2018-05-21 11:01:30\ntype: \"schedule\"\n---\n","updated":"2018-05-22T05:07:16.204Z","path":"schedule/index.html","comments":1,"layout":"page","_id":"cjhh7x3eh0000iww551gk5uje","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hello World","_content":"既然是程序员，第一个文章当然就是一个：HELLO WORLD!!!\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\n既然是程序员，第一个文章当然就是一个：HELLO WORLD!!!\n","slug":"hello-world","published":1,"date":"2018-05-22T01:56:54.877Z","updated":"2018-05-21T05:07:26.869Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhh1ew6p0000wgw5zbxqsaxk","content":"<p>既然是程序员，第一个文章当然就是一个：HELLO WORLD!!!</p>\n","site":{"data":{}},"excerpt":"","more":"<p>既然是程序员，第一个文章当然就是一个：HELLO WORLD!!!</p>\n"},{"title":"draft","_content":"","source":"_drafts/draft.md","raw":"---\ntitle: draft\ntags:\n---\n","slug":"draft","published":0,"date":"2018-05-22T01:56:54.877Z","updated":"2018-05-21T03:11:30.586Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhh1ew730002wgw5z9rnpmoh","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"妞妞照片","date":"2018-05-21T07:08:38.000Z","_content":"{% asset_img 001.jpg 这个虎玩意就是妞妞 %}\n\n","source":"_posts/妞妞照片.md","raw":"---\ntitle: 妞妞照片\ndate: 2018-05-21 15:08:38\ntags: \"妞妞\"\ncategories: \"照片\"\n---\n{% asset_img 001.jpg 这个虎玩意就是妞妞 %}\n\n","slug":"妞妞照片","published":1,"updated":"2018-05-21T07:56:11.195Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhh1ew770004wgw5putvjkq8","content":"<img src=\"/2018/05/21/妞妞照片/001.jpg\" title=\"这个虎玩意就是妞妞\">\n","site":{"data":{}},"excerpt":"","more":"<img src=\"/2018/05/21/妞妞照片/001.jpg\" title=\"这个虎玩意就是妞妞\">\n"},{"title":"菜园子博客开始的地方","date":"2018-05-21T04:49:01.000Z","_content":"> 打今天开始打理自己菜园子，菜园子有三块地，笔记、生活照片、记事本\n没啥说的，希望能够坚持下去，早点给自己定个目标吧。","source":"_posts/post.md","raw":"---\ntitle: 菜园子博客开始的地方\ndate: 2018-05-21 12:49:01\ntags: \"给自己\"\n---\n> 打今天开始打理自己菜园子，菜园子有三块地，笔记、生活照片、记事本\n没啥说的，希望能够坚持下去，早点给自己定个目标吧。","slug":"post","published":1,"updated":"2018-05-21T05:03:35.609Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhh1ew7a0006wgw55a1o4udb","content":"<blockquote>\n<p>打今天开始打理自己菜园子，菜园子有三块地，笔记、生活照片、记事本<br>没啥说的，希望能够坚持下去，早点给自己定个目标吧。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>打今天开始打理自己菜园子，菜园子有三块地，笔记、生活照片、记事本<br>没啥说的，希望能够坚持下去，早点给自己定个目标吧。</p>\n</blockquote>\n"},{"title":"我的妞妞","date":"2018-05-21T05:29:47.000Z","_content":"\t我的妞妞长的好看！！！美！！！\n","source":"_posts/我的妞妞.md","raw":"---\ntitle: 我的妞妞\ndate: 2018-05-21 13:29:47\ntags: \"妞妞\"\n---\n\t我的妞妞长的好看！！！美！！！\n","slug":"我的妞妞","published":1,"updated":"2018-05-21T06:56:51.939Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhh1ew7f0009wgw5zz9i7uj6","content":"<pre><code>我的妞妞长的好看！！！美！！！\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<pre><code>我的妞妞长的好看！！！美！！！\n</code></pre>"},{"title":"java反射","date":"2018-05-21T08:04:46.000Z","_content":"### java反射实现方式 ###\n1. 实例化要反射的Class对象\nClass.forName(类名全路径); //通过Class的静态方法； \n对象.getClass() //通过对象.getClass方法；\nint.class //基本数据类型及基本数据类型的封装了，例如Integer；\n2. 获取父类\n Class<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法\n        Class<?> superclass = clazz.getSuperclass();\n3. 获取实现接口\n Class<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法\n        Class<?>[] interfaces = clazz.getInterfaces()\n4. 获取指定参数构造函数及实例化\nClass<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法\n        Constructor<?> constructor = clazz.getConstructor(Class<?>  ... class);//获取公共的\n        Constructor<?> constructor = clazz.getDeclaredConstructor()//获取私有的\n        constructor.newInstance(Object args);\n5. 获取所有构造函数及构造参数的类型\n Class<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法\n        Constructor<?>[] constructors = clazz.getConstructors();//公共的\n        Constructor<?>[] constructors = clazz.getDeclaredConstructors()//包括私有的\n\n         for (int i = 0; i < constructors.length; i++) {\n            Class<?> clazzs[] = constructors[i].getParameterTypes();//获取类型\n            System.out.print(\"constructors[\" + i + \"] (\");\n            for (int j = 0; j < clazzs.length; j++) {\n                if (j == clazzs.length - 1)\n                    System.out.print(clazzs[j].getName());\n                else\n                    System.out.print(clazzs[j].getName() + \",\");\n            }\n            System.out.println(\")\");\n        }\n6. 通过无参实例化对象\n Class<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法          \n        class.newInstance();\n7. 获取字段，修改字段\n Class<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法          \n\n        Field field = clazz.getField(String name);//获取公共字段\n        Field field = clazz.getDeclaredField(String name);//获取私有公共字段\n        Field[] field = clazz.getFields();//获取所有公共字段\n        Field[] field = clazz.getDeclaredFields();//获取包括私有所有字段\n\n        Field field = clazz.getDeclaredField(\"heihei\");\n        field.setAccessible(true);//设置java取消访问检查，也就是说如果是私有的也可以访问,\n        field.set(obj, \"Java反射机制\");\n8. 获取方法,运行方法\nClass<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法          \n\n        clazz.getMethod(String name ,Class<?> ... parame);//获取公共指定方法\n        clazz.getDeclaredMethod(String name ,Class<?> ... parame)//获取私有指定方法\n        clazz.getMethods()//获取公共所有方法\n        clazz.getDeclaredMethods();//获取包括私有全部方法\n\n        Method method = clazz.getMethod(\"add\");\n        method.invoke(clazz.newInstance());\n\n        method = clazz.getMethod(\"getInfo\", int.class, String.class);\n        method.setAccessible(true)//设置java取消访问检查，也就是说如果是私有的也可以访问,\n        method.invoke(clazz.newInstance(), 20, \"张三\");\n9. 获取数组或者list中的类型,如果不是数组或集合返回null\nClass<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法  \n        Class<?> componentType = clazz.getComponentType();\n","source":"_posts/java反射.md","raw":"---\ntitle: java反射\ndate: 2018-05-21 16:04:46\ntags: \"反射\"\ncategories: \"java\"\n---\n### java反射实现方式 ###\n1. 实例化要反射的Class对象\nClass.forName(类名全路径); //通过Class的静态方法； \n对象.getClass() //通过对象.getClass方法；\nint.class //基本数据类型及基本数据类型的封装了，例如Integer；\n2. 获取父类\n Class<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法\n        Class<?> superclass = clazz.getSuperclass();\n3. 获取实现接口\n Class<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法\n        Class<?>[] interfaces = clazz.getInterfaces()\n4. 获取指定参数构造函数及实例化\nClass<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法\n        Constructor<?> constructor = clazz.getConstructor(Class<?>  ... class);//获取公共的\n        Constructor<?> constructor = clazz.getDeclaredConstructor()//获取私有的\n        constructor.newInstance(Object args);\n5. 获取所有构造函数及构造参数的类型\n Class<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法\n        Constructor<?>[] constructors = clazz.getConstructors();//公共的\n        Constructor<?>[] constructors = clazz.getDeclaredConstructors()//包括私有的\n\n         for (int i = 0; i < constructors.length; i++) {\n            Class<?> clazzs[] = constructors[i].getParameterTypes();//获取类型\n            System.out.print(\"constructors[\" + i + \"] (\");\n            for (int j = 0; j < clazzs.length; j++) {\n                if (j == clazzs.length - 1)\n                    System.out.print(clazzs[j].getName());\n                else\n                    System.out.print(clazzs[j].getName() + \",\");\n            }\n            System.out.println(\")\");\n        }\n6. 通过无参实例化对象\n Class<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法          \n        class.newInstance();\n7. 获取字段，修改字段\n Class<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法          \n\n        Field field = clazz.getField(String name);//获取公共字段\n        Field field = clazz.getDeclaredField(String name);//获取私有公共字段\n        Field[] field = clazz.getFields();//获取所有公共字段\n        Field[] field = clazz.getDeclaredFields();//获取包括私有所有字段\n\n        Field field = clazz.getDeclaredField(\"heihei\");\n        field.setAccessible(true);//设置java取消访问检查，也就是说如果是私有的也可以访问,\n        field.set(obj, \"Java反射机制\");\n8. 获取方法,运行方法\nClass<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法          \n\n        clazz.getMethod(String name ,Class<?> ... parame);//获取公共指定方法\n        clazz.getDeclaredMethod(String name ,Class<?> ... parame)//获取私有指定方法\n        clazz.getMethods()//获取公共所有方法\n        clazz.getDeclaredMethods();//获取包括私有全部方法\n\n        Method method = clazz.getMethod(\"add\");\n        method.invoke(clazz.newInstance());\n\n        method = clazz.getMethod(\"getInfo\", int.class, String.class);\n        method.setAccessible(true)//设置java取消访问检查，也就是说如果是私有的也可以访问,\n        method.invoke(clazz.newInstance(), 20, \"张三\");\n9. 获取数组或者list中的类型,如果不是数组或集合返回null\nClass<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法  \n        Class<?> componentType = clazz.getComponentType();\n","slug":"java反射","published":1,"updated":"2018-05-21T08:18:23.296Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhh1ew7k000awgw51evww2bq","content":"<h3 id=\"java反射实现方式\"><a href=\"#java反射实现方式\" class=\"headerlink\" title=\"java反射实现方式\"></a>java反射实现方式</h3><ol>\n<li>实例化要反射的Class对象<br>Class.forName(类名全路径); //通过Class的静态方法；<br>对象.getClass() //通过对象.getClass方法；<br>int.class //基本数据类型及基本数据类型的封装了，例如Integer；</li>\n<li>获取父类<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法<pre><code>Class&lt;?&gt; superclass = clazz.getSuperclass();\n</code></pre></li>\n<li>获取实现接口<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法<pre><code>Class&lt;?&gt;[] interfaces = clazz.getInterfaces()\n</code></pre></li>\n<li>获取指定参数构造函数及实例化<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法<pre><code>Constructor&lt;?&gt; constructor = clazz.getConstructor(Class&lt;?&gt;  ... class);//获取公共的\nConstructor&lt;?&gt; constructor = clazz.getDeclaredConstructor()//获取私有的\nconstructor.newInstance(Object args);\n</code></pre></li>\n<li><p>获取所有构造函数及构造参数的类型<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法</p>\n<pre><code>Constructor&lt;?&gt;[] constructors = clazz.getConstructors();//公共的\nConstructor&lt;?&gt;[] constructors = clazz.getDeclaredConstructors()//包括私有的\n\n for (int i = 0; i &lt; constructors.length; i++) {\n    Class&lt;?&gt; clazzs[] = constructors[i].getParameterTypes();//获取类型\n    System.out.print(&quot;constructors[&quot; + i + &quot;] (&quot;);\n    for (int j = 0; j &lt; clazzs.length; j++) {\n        if (j == clazzs.length - 1)\n            System.out.print(clazzs[j].getName());\n        else\n            System.out.print(clazzs[j].getName() + &quot;,&quot;);\n    }\n    System.out.println(&quot;)&quot;);\n}\n</code></pre></li>\n<li>通过无参实例化对象<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法          <pre><code>class.newInstance();\n</code></pre></li>\n<li><p>获取字段，修改字段<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法          </p>\n<pre><code>Field field = clazz.getField(String name);//获取公共字段\nField field = clazz.getDeclaredField(String name);//获取私有公共字段\nField[] field = clazz.getFields();//获取所有公共字段\nField[] field = clazz.getDeclaredFields();//获取包括私有所有字段\n\nField field = clazz.getDeclaredField(&quot;heihei&quot;);\nfield.setAccessible(true);//设置java取消访问检查，也就是说如果是私有的也可以访问,\nfield.set(obj, &quot;Java反射机制&quot;);\n</code></pre></li>\n<li><p>获取方法,运行方法<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法          </p>\n<pre><code>clazz.getMethod(String name ,Class&lt;?&gt; ... parame);//获取公共指定方法\nclazz.getDeclaredMethod(String name ,Class&lt;?&gt; ... parame)//获取私有指定方法\nclazz.getMethods()//获取公共所有方法\nclazz.getDeclaredMethods();//获取包括私有全部方法\n\nMethod method = clazz.getMethod(&quot;add&quot;);\nmethod.invoke(clazz.newInstance());\n\nmethod = clazz.getMethod(&quot;getInfo&quot;, int.class, String.class);\nmethod.setAccessible(true)//设置java取消访问检查，也就是说如果是私有的也可以访问,\nmethod.invoke(clazz.newInstance(), 20, &quot;张三&quot;);\n</code></pre></li>\n<li>获取数组或者list中的类型,如果不是数组或集合返回null<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法  <pre><code>Class&lt;?&gt; componentType = clazz.getComponentType();\n</code></pre></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"java反射实现方式\"><a href=\"#java反射实现方式\" class=\"headerlink\" title=\"java反射实现方式\"></a>java反射实现方式</h3><ol>\n<li>实例化要反射的Class对象<br>Class.forName(类名全路径); //通过Class的静态方法；<br>对象.getClass() //通过对象.getClass方法；<br>int.class //基本数据类型及基本数据类型的封装了，例如Integer；</li>\n<li>获取父类<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法<pre><code>Class&lt;?&gt; superclass = clazz.getSuperclass();\n</code></pre></li>\n<li>获取实现接口<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法<pre><code>Class&lt;?&gt;[] interfaces = clazz.getInterfaces()\n</code></pre></li>\n<li>获取指定参数构造函数及实例化<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法<pre><code>Constructor&lt;?&gt; constructor = clazz.getConstructor(Class&lt;?&gt;  ... class);//获取公共的\nConstructor&lt;?&gt; constructor = clazz.getDeclaredConstructor()//获取私有的\nconstructor.newInstance(Object args);\n</code></pre></li>\n<li><p>获取所有构造函数及构造参数的类型<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法</p>\n<pre><code>Constructor&lt;?&gt;[] constructors = clazz.getConstructors();//公共的\nConstructor&lt;?&gt;[] constructors = clazz.getDeclaredConstructors()//包括私有的\n\n for (int i = 0; i &lt; constructors.length; i++) {\n    Class&lt;?&gt; clazzs[] = constructors[i].getParameterTypes();//获取类型\n    System.out.print(&quot;constructors[&quot; + i + &quot;] (&quot;);\n    for (int j = 0; j &lt; clazzs.length; j++) {\n        if (j == clazzs.length - 1)\n            System.out.print(clazzs[j].getName());\n        else\n            System.out.print(clazzs[j].getName() + &quot;,&quot;);\n    }\n    System.out.println(&quot;)&quot;);\n}\n</code></pre></li>\n<li>通过无参实例化对象<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法          <pre><code>class.newInstance();\n</code></pre></li>\n<li><p>获取字段，修改字段<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法          </p>\n<pre><code>Field field = clazz.getField(String name);//获取公共字段\nField field = clazz.getDeclaredField(String name);//获取私有公共字段\nField[] field = clazz.getFields();//获取所有公共字段\nField[] field = clazz.getDeclaredFields();//获取包括私有所有字段\n\nField field = clazz.getDeclaredField(&quot;heihei&quot;);\nfield.setAccessible(true);//设置java取消访问检查，也就是说如果是私有的也可以访问,\nfield.set(obj, &quot;Java反射机制&quot;);\n</code></pre></li>\n<li><p>获取方法,运行方法<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法          </p>\n<pre><code>clazz.getMethod(String name ,Class&lt;?&gt; ... parame);//获取公共指定方法\nclazz.getDeclaredMethod(String name ,Class&lt;?&gt; ... parame)//获取私有指定方法\nclazz.getMethods()//获取公共所有方法\nclazz.getDeclaredMethods();//获取包括私有全部方法\n\nMethod method = clazz.getMethod(&quot;add&quot;);\nmethod.invoke(clazz.newInstance());\n\nmethod = clazz.getMethod(&quot;getInfo&quot;, int.class, String.class);\nmethod.setAccessible(true)//设置java取消访问检查，也就是说如果是私有的也可以访问,\nmethod.invoke(clazz.newInstance(), 20, &quot;张三&quot;);\n</code></pre></li>\n<li>获取数组或者list中的类型,如果不是数组或集合返回null<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法  <pre><code>Class&lt;?&gt; componentType = clazz.getComponentType();\n</code></pre></li>\n</ol>\n"},{"title":"模块模式设计","date":"2018-05-21T08:22:13.000Z","_content":"## 什么是设计模式\n1. 定义\n基本定义：设计模式（Design pattern）是一套被反复使用的代码设计经验的总结。使用设计模式的目的是为了可重用代码、让代码更容易被他人理解。设计模式是是软件工程的基石脉络，如大厦的结构一样\nDesign pattern的四大要素：模式名称（Name），问题（Question），解决方案（Solution），效果（Efftive）。\nOO（面向对象）的六大原则：单一职责原则，开闭原则，里氏替换原则，依赖倒置原则，接口隔离原则，迪米特原则。\n\t\t\t单一职责原则：一个类中应该是一组相关性很高的函数，数据的封装。两个完全不一样的功能就不应该放在一个类中。\n\t\t\t开闭原则：对修改封闭，对扩展放开。\n\t\t\t里氏替换原则：抽象和继承；所有引用基类的地方必须能透明的使用其子类的对象。\n\t\t\t依赖倒置原则：抽象不应该依赖细节，细节应该依赖抽象。\n\t\t\t接口隔离原则：将大接口改成多个小接口。\n\t\t\t迪米特原则：也称为最少知识原则，一个对象应该对另一个对象有最少的了解。\n2. 分类\n设计模式分为三种类型：\n\t\t创建型模式5种：单例模式，抽象工厂模式，工厂模式，原型模式，建造者模式。（口诀：单原建造者，东西二厂）\n\t\t结构型模式7种：适配器模式，桥接模式，装饰模式，组合模式，外观模式，享元模式，代理模式。（口诀：一器一桥一元一代理；装饰组合外观）\n\t\t行为型模式11种：观察者模式，中介者模式，访问者模式，解释器模式，迭代器模式，备忘录模式，责任链模式，状态模式，策略模式，命令模式，模板模式。（口诀：三者两器、一录一链一模板，状态策略命令）\n## 功能模块设计原则 ##\n1. 单一职责原则（Single Responsibility Principle - SRP）\n\t\t原文：There should never be more than one reason for a class to change.\n\t\t译文：永远不应该有多于一个原因来改变某个类。\n\t\t理解：对于一个类而言，应该仅有一个引起它变化的原因。说白了就是，不同的类具备不同的职责，各施其责。这就好比一个团队，大家分工协作，互不影响，各做各的事情。\n\t\t应用：当我们做系统设计时，如果发现有一个类拥有了两种的职责，那就问自己一个问题：可以将这个类分成两个类吗？如果真的有必要，那就分吧。千万不要让一个类干的事情太多！\n2. 开放封闭原则（Open Closed Principle - OCP）\n\t\t原文：Software entities like classes, modules and functions should be open for extension but closed for modifications.\n\t\t译文：软件实体，如：类、模块与函数，对于扩展应该是开放的，但对于修改应该是封闭的。\n\t\t理解：简言之，对扩展开放，对修改封闭。换句话说，可以去扩展类，但不要去修改类。\n\t\t应用：当需求有改动，要修改代码了，此时您要做的是，尽量用继承或组合的方式来扩展类的功能，而不是直接修改类的代码。当然，如果能够确保对整体架构不会产生任何影响，那么也没必要搞得那么复杂了，直接改这个类吧。\n3. 里氏替换原则（Liskov Substitution Principle - LSP）\n\t\t原文：Functions that use pointers or references to base classes must be able to use objects of derived classes without knowing it.\n\t\t译文：使用基类的指针或引用的函数，必须是在不知情的情况下，能够使用派生类的对象。\n\t\t理解：父类能够替换子类，但子类不一定能替换父类。也就是说，在代码中可以将父类全部替换为子类，程序不会报错，也不会在运行时出现任何异常，但反过来却不一定成立。\n\t\t应用：在继承类时，务必重写（Override）父类中所有的方法，尤其需要注意父类的 protected 方法（它们往往是让您重写的），子类尽量不要暴露自己的 public 方法供外界调用。\n4. 最少知识原则（Least Knowledge Principle - LKP）\n\t\t原文：Only talk to you immediate friends.\n\t\t译文：只与你最直接的朋友交流。\n\t\t理解：尽量减少对象之间的交互，从而减小类之间的耦合。简言之，一定要做到：低耦合，高内聚。\n\t\t应用：在做系统设计时，不要让一个类依赖于太多的其他类，需尽量减小依赖关系，否则，您死都不知道自己怎么死的。\n5. 接口隔离原则（Interface Segregation Principle - ISP）\n\t\t原文：The dependency of one class to another one should depend on the smallest possible interface.\n\t\t译文：一个类与另一个类之间的依赖性，应该依赖于尽可能小的接口。、理解：不要对外暴露没有实际意义的接口。也就是说，接口是给别人调用的，那就不要去为难别人了，尽可能保证接口的实用性吧。她好，我也好。\n\t\t应用：当需要对外暴露接口时，需要再三斟酌，如果真的没有必要对外提供的，就删了吧。一旦您提供了，就意味着，您将来要多做一件事情，何苦要给自己找事做呢。\n6. 依赖倒置原则（Dependence Inversion Principle - DIP）\n\t\t原文：High level modules should not depends upon low level modules. Both should depend upon abstractions. Abstractions should not depend upon details. Details should depend upon abstractions.\n\t\t译文：高层模块不应该依赖于低层模块，它们应该依赖于抽象。抽象不应该依赖于细节，细节应该依赖于抽象。\n\t\t理解：应该面向接口编程，不应该面向实现类编程。面向实现类编程，相当于就是论事，那是正向依赖（正常人思维）；面向接口编程，相当于通过事物表象来看本质，那是反向依赖，即依赖倒置（程序员思维）。\n\t\t应用：并不是说，所有的类都要有一个对应的接口，而是说，如果有接口，那就尽量使用接口来编程吧。\n\t\t------>------>------>------>------>------>------>\n\t\t将以上六大原则的英文首字母拼在一起就是 SOLID（稳定的），所以也称之为 SOLID 原则。只有满足了这六大原则，才能设计出稳定的软件架构！但它们毕竟只是原则，只是四人帮给我们的建议，有些时候我们还是要学会灵活应变，千万不要生搬硬套，否则只会把简单问题复杂化\n补充设计原则\n\t1. 组合/聚合复用原则（Composition/Aggregation Reuse Principle - CARP）\n\t\t\t当要扩展类的功能时，优先考虑使用组合，而不是继承。这条原则在 23 种经典设计模式中频繁使用，如：代理模式、装饰模式、适配器模式等。可见江湖地位非常之高！\n\t2. 无环依赖原则（Acyclic Dependencies Principle - ADP）\n\t\t\t当 A 模块依赖于 B 模块，B 模块依赖于 C 模块，C 依赖于 A 模块，此时将出现循环依赖。在设计中应该避免这个问题，可通过引入“中介者模式”解决该问题。\n\t3. 共同封装原则（Common Closure Principle - CCP）\n\t\t\t应该将易变的类放在同一个包里，将变化隔离出来。该原则是“开放-封闭原则”的延生。\n\t4. 共同重用原则（Common Reuse Principle - CRP）\n\t\t\t如果重用了包中的一个类，那么也就相当于重用了包中的所有类，我们要尽可能减小包的大小。\n\t5. 好莱坞原则（Hollywood Principle - HP）\n\t\t\t好莱坞明星的经纪人一般都很忙，他们不想被打扰，往往会说：Don't call me, I'll call you. 翻译为：不要联系我，我会联系你。对应于软件设计而言，最著名的就是“控制反转”（或称为“依赖注入”），我们不需要在代码中主动的创建对象，而是由容器帮我们来创建并管理这些对象。\n\n其它设计原则\n1. 不要重复你自己（Don't repeat yourself - DRY）\n\t\t\t不要让重复的代码到处都是，要让它们足够的重用，所以要尽可能地封装。\n2. 保持它简单与傻瓜（Keep it simple and stupid - KISS）\n\t\t\t不要让系统变得复杂，界面简洁，功能实用，操作方便，要让它足够的简单，足够的傻瓜。\n3. 高内聚与低耦合（High Cohesion and Low Coupling - HCLC）\n\t\t\t模块内部需要做到内聚度高，模块之间需要做到耦合度低。\n4. 惯例优于配置（Convention over Configuration - COC）\n\t\t\t尽量让惯例来减少配置，这样才能提高开发效率，尽量做到“零配置”。很多开发框架都是这样做的。\n5. 命令查询分离（Command Query Separation - CQS）\n\t\t\t在定义接口时，要做到哪些是命令，哪些是查询，要将它们分离，而不要揉到一起。\n6. 关注点分离（Separation of Concerns - SOC）\n\t\t\t将一个复杂的问题分离为多个简单的问题，然后逐个解决这些简单的问题，那么这个复杂的问题就解决了。难就难在如何进行分离。\n7. 契约式设计（Design by Contract - DBC）\n\t\t\t模块或系统之间的交互，都是基于契约（接口或抽象）的，而不要依赖于具体实现。该原则建议我们要面向契约编程。\n8. 你不需要它（You aren't gonna need it - YAGNI）\n\t\t\t不要一开始就把系统设计得非常复杂，不要陷入“过度设计”的深渊。应该让系统足够的简单，而却又不失扩展性，这是其中的难点。","source":"_posts/模块模式设计.md","raw":"---\ntitle: 模块模式设计\ndate: 2018-05-21 16:22:13\ntags: \"设计模式\"\ncategories: \"通用\"\n---\n## 什么是设计模式\n1. 定义\n基本定义：设计模式（Design pattern）是一套被反复使用的代码设计经验的总结。使用设计模式的目的是为了可重用代码、让代码更容易被他人理解。设计模式是是软件工程的基石脉络，如大厦的结构一样\nDesign pattern的四大要素：模式名称（Name），问题（Question），解决方案（Solution），效果（Efftive）。\nOO（面向对象）的六大原则：单一职责原则，开闭原则，里氏替换原则，依赖倒置原则，接口隔离原则，迪米特原则。\n\t\t\t单一职责原则：一个类中应该是一组相关性很高的函数，数据的封装。两个完全不一样的功能就不应该放在一个类中。\n\t\t\t开闭原则：对修改封闭，对扩展放开。\n\t\t\t里氏替换原则：抽象和继承；所有引用基类的地方必须能透明的使用其子类的对象。\n\t\t\t依赖倒置原则：抽象不应该依赖细节，细节应该依赖抽象。\n\t\t\t接口隔离原则：将大接口改成多个小接口。\n\t\t\t迪米特原则：也称为最少知识原则，一个对象应该对另一个对象有最少的了解。\n2. 分类\n设计模式分为三种类型：\n\t\t创建型模式5种：单例模式，抽象工厂模式，工厂模式，原型模式，建造者模式。（口诀：单原建造者，东西二厂）\n\t\t结构型模式7种：适配器模式，桥接模式，装饰模式，组合模式，外观模式，享元模式，代理模式。（口诀：一器一桥一元一代理；装饰组合外观）\n\t\t行为型模式11种：观察者模式，中介者模式，访问者模式，解释器模式，迭代器模式，备忘录模式，责任链模式，状态模式，策略模式，命令模式，模板模式。（口诀：三者两器、一录一链一模板，状态策略命令）\n## 功能模块设计原则 ##\n1. 单一职责原则（Single Responsibility Principle - SRP）\n\t\t原文：There should never be more than one reason for a class to change.\n\t\t译文：永远不应该有多于一个原因来改变某个类。\n\t\t理解：对于一个类而言，应该仅有一个引起它变化的原因。说白了就是，不同的类具备不同的职责，各施其责。这就好比一个团队，大家分工协作，互不影响，各做各的事情。\n\t\t应用：当我们做系统设计时，如果发现有一个类拥有了两种的职责，那就问自己一个问题：可以将这个类分成两个类吗？如果真的有必要，那就分吧。千万不要让一个类干的事情太多！\n2. 开放封闭原则（Open Closed Principle - OCP）\n\t\t原文：Software entities like classes, modules and functions should be open for extension but closed for modifications.\n\t\t译文：软件实体，如：类、模块与函数，对于扩展应该是开放的，但对于修改应该是封闭的。\n\t\t理解：简言之，对扩展开放，对修改封闭。换句话说，可以去扩展类，但不要去修改类。\n\t\t应用：当需求有改动，要修改代码了，此时您要做的是，尽量用继承或组合的方式来扩展类的功能，而不是直接修改类的代码。当然，如果能够确保对整体架构不会产生任何影响，那么也没必要搞得那么复杂了，直接改这个类吧。\n3. 里氏替换原则（Liskov Substitution Principle - LSP）\n\t\t原文：Functions that use pointers or references to base classes must be able to use objects of derived classes without knowing it.\n\t\t译文：使用基类的指针或引用的函数，必须是在不知情的情况下，能够使用派生类的对象。\n\t\t理解：父类能够替换子类，但子类不一定能替换父类。也就是说，在代码中可以将父类全部替换为子类，程序不会报错，也不会在运行时出现任何异常，但反过来却不一定成立。\n\t\t应用：在继承类时，务必重写（Override）父类中所有的方法，尤其需要注意父类的 protected 方法（它们往往是让您重写的），子类尽量不要暴露自己的 public 方法供外界调用。\n4. 最少知识原则（Least Knowledge Principle - LKP）\n\t\t原文：Only talk to you immediate friends.\n\t\t译文：只与你最直接的朋友交流。\n\t\t理解：尽量减少对象之间的交互，从而减小类之间的耦合。简言之，一定要做到：低耦合，高内聚。\n\t\t应用：在做系统设计时，不要让一个类依赖于太多的其他类，需尽量减小依赖关系，否则，您死都不知道自己怎么死的。\n5. 接口隔离原则（Interface Segregation Principle - ISP）\n\t\t原文：The dependency of one class to another one should depend on the smallest possible interface.\n\t\t译文：一个类与另一个类之间的依赖性，应该依赖于尽可能小的接口。、理解：不要对外暴露没有实际意义的接口。也就是说，接口是给别人调用的，那就不要去为难别人了，尽可能保证接口的实用性吧。她好，我也好。\n\t\t应用：当需要对外暴露接口时，需要再三斟酌，如果真的没有必要对外提供的，就删了吧。一旦您提供了，就意味着，您将来要多做一件事情，何苦要给自己找事做呢。\n6. 依赖倒置原则（Dependence Inversion Principle - DIP）\n\t\t原文：High level modules should not depends upon low level modules. Both should depend upon abstractions. Abstractions should not depend upon details. Details should depend upon abstractions.\n\t\t译文：高层模块不应该依赖于低层模块，它们应该依赖于抽象。抽象不应该依赖于细节，细节应该依赖于抽象。\n\t\t理解：应该面向接口编程，不应该面向实现类编程。面向实现类编程，相当于就是论事，那是正向依赖（正常人思维）；面向接口编程，相当于通过事物表象来看本质，那是反向依赖，即依赖倒置（程序员思维）。\n\t\t应用：并不是说，所有的类都要有一个对应的接口，而是说，如果有接口，那就尽量使用接口来编程吧。\n\t\t------>------>------>------>------>------>------>\n\t\t将以上六大原则的英文首字母拼在一起就是 SOLID（稳定的），所以也称之为 SOLID 原则。只有满足了这六大原则，才能设计出稳定的软件架构！但它们毕竟只是原则，只是四人帮给我们的建议，有些时候我们还是要学会灵活应变，千万不要生搬硬套，否则只会把简单问题复杂化\n补充设计原则\n\t1. 组合/聚合复用原则（Composition/Aggregation Reuse Principle - CARP）\n\t\t\t当要扩展类的功能时，优先考虑使用组合，而不是继承。这条原则在 23 种经典设计模式中频繁使用，如：代理模式、装饰模式、适配器模式等。可见江湖地位非常之高！\n\t2. 无环依赖原则（Acyclic Dependencies Principle - ADP）\n\t\t\t当 A 模块依赖于 B 模块，B 模块依赖于 C 模块，C 依赖于 A 模块，此时将出现循环依赖。在设计中应该避免这个问题，可通过引入“中介者模式”解决该问题。\n\t3. 共同封装原则（Common Closure Principle - CCP）\n\t\t\t应该将易变的类放在同一个包里，将变化隔离出来。该原则是“开放-封闭原则”的延生。\n\t4. 共同重用原则（Common Reuse Principle - CRP）\n\t\t\t如果重用了包中的一个类，那么也就相当于重用了包中的所有类，我们要尽可能减小包的大小。\n\t5. 好莱坞原则（Hollywood Principle - HP）\n\t\t\t好莱坞明星的经纪人一般都很忙，他们不想被打扰，往往会说：Don't call me, I'll call you. 翻译为：不要联系我，我会联系你。对应于软件设计而言，最著名的就是“控制反转”（或称为“依赖注入”），我们不需要在代码中主动的创建对象，而是由容器帮我们来创建并管理这些对象。\n\n其它设计原则\n1. 不要重复你自己（Don't repeat yourself - DRY）\n\t\t\t不要让重复的代码到处都是，要让它们足够的重用，所以要尽可能地封装。\n2. 保持它简单与傻瓜（Keep it simple and stupid - KISS）\n\t\t\t不要让系统变得复杂，界面简洁，功能实用，操作方便，要让它足够的简单，足够的傻瓜。\n3. 高内聚与低耦合（High Cohesion and Low Coupling - HCLC）\n\t\t\t模块内部需要做到内聚度高，模块之间需要做到耦合度低。\n4. 惯例优于配置（Convention over Configuration - COC）\n\t\t\t尽量让惯例来减少配置，这样才能提高开发效率，尽量做到“零配置”。很多开发框架都是这样做的。\n5. 命令查询分离（Command Query Separation - CQS）\n\t\t\t在定义接口时，要做到哪些是命令，哪些是查询，要将它们分离，而不要揉到一起。\n6. 关注点分离（Separation of Concerns - SOC）\n\t\t\t将一个复杂的问题分离为多个简单的问题，然后逐个解决这些简单的问题，那么这个复杂的问题就解决了。难就难在如何进行分离。\n7. 契约式设计（Design by Contract - DBC）\n\t\t\t模块或系统之间的交互，都是基于契约（接口或抽象）的，而不要依赖于具体实现。该原则建议我们要面向契约编程。\n8. 你不需要它（You aren't gonna need it - YAGNI）\n\t\t\t不要一开始就把系统设计得非常复杂，不要陷入“过度设计”的深渊。应该让系统足够的简单，而却又不失扩展性，这是其中的难点。","slug":"模块模式设计","published":1,"updated":"2018-05-21T08:53:47.356Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhh1ew7m000bwgw5hj2byyz2","content":"<h2 id=\"什么是设计模式\"><a href=\"#什么是设计模式\" class=\"headerlink\" title=\"什么是设计模式\"></a>什么是设计模式</h2><ol>\n<li>定义<br>基本定义：设计模式（Design pattern）是一套被反复使用的代码设计经验的总结。使用设计模式的目的是为了可重用代码、让代码更容易被他人理解。设计模式是是软件工程的基石脉络，如大厦的结构一样<br>Design pattern的四大要素：模式名称（Name），问题（Question），解决方案（Solution），效果（Efftive）。<br>OO（面向对象）的六大原则：单一职责原则，开闭原则，里氏替换原则，依赖倒置原则，接口隔离原则，迪米特原则。<pre><code>单一职责原则：一个类中应该是一组相关性很高的函数，数据的封装。两个完全不一样的功能就不应该放在一个类中。\n开闭原则：对修改封闭，对扩展放开。\n里氏替换原则：抽象和继承；所有引用基类的地方必须能透明的使用其子类的对象。\n依赖倒置原则：抽象不应该依赖细节，细节应该依赖抽象。\n接口隔离原则：将大接口改成多个小接口。\n迪米特原则：也称为最少知识原则，一个对象应该对另一个对象有最少的了解。\n</code></pre></li>\n<li>分类<br>设计模式分为三种类型：<pre><code>创建型模式5种：单例模式，抽象工厂模式，工厂模式，原型模式，建造者模式。（口诀：单原建造者，东西二厂）\n结构型模式7种：适配器模式，桥接模式，装饰模式，组合模式，外观模式，享元模式，代理模式。（口诀：一器一桥一元一代理；装饰组合外观）\n行为型模式11种：观察者模式，中介者模式，访问者模式，解释器模式，迭代器模式，备忘录模式，责任链模式，状态模式，策略模式，命令模式，模板模式。（口诀：三者两器、一录一链一模板，状态策略命令）\n</code></pre><h2 id=\"功能模块设计原则\"><a href=\"#功能模块设计原则\" class=\"headerlink\" title=\"功能模块设计原则\"></a>功能模块设计原则</h2></li>\n<li>单一职责原则（Single Responsibility Principle - SRP）<pre><code>原文：There should never be more than one reason for a class to change.\n译文：永远不应该有多于一个原因来改变某个类。\n理解：对于一个类而言，应该仅有一个引起它变化的原因。说白了就是，不同的类具备不同的职责，各施其责。这就好比一个团队，大家分工协作，互不影响，各做各的事情。\n应用：当我们做系统设计时，如果发现有一个类拥有了两种的职责，那就问自己一个问题：可以将这个类分成两个类吗？如果真的有必要，那就分吧。千万不要让一个类干的事情太多！\n</code></pre></li>\n<li>开放封闭原则（Open Closed Principle - OCP）<pre><code>原文：Software entities like classes, modules and functions should be open for extension but closed for modifications.\n译文：软件实体，如：类、模块与函数，对于扩展应该是开放的，但对于修改应该是封闭的。\n理解：简言之，对扩展开放，对修改封闭。换句话说，可以去扩展类，但不要去修改类。\n应用：当需求有改动，要修改代码了，此时您要做的是，尽量用继承或组合的方式来扩展类的功能，而不是直接修改类的代码。当然，如果能够确保对整体架构不会产生任何影响，那么也没必要搞得那么复杂了，直接改这个类吧。\n</code></pre></li>\n<li>里氏替换原则（Liskov Substitution Principle - LSP）<pre><code>原文：Functions that use pointers or references to base classes must be able to use objects of derived classes without knowing it.\n译文：使用基类的指针或引用的函数，必须是在不知情的情况下，能够使用派生类的对象。\n理解：父类能够替换子类，但子类不一定能替换父类。也就是说，在代码中可以将父类全部替换为子类，程序不会报错，也不会在运行时出现任何异常，但反过来却不一定成立。\n应用：在继承类时，务必重写（Override）父类中所有的方法，尤其需要注意父类的 protected 方法（它们往往是让您重写的），子类尽量不要暴露自己的 public 方法供外界调用。\n</code></pre></li>\n<li>最少知识原则（Least Knowledge Principle - LKP）<pre><code>原文：Only talk to you immediate friends.\n译文：只与你最直接的朋友交流。\n理解：尽量减少对象之间的交互，从而减小类之间的耦合。简言之，一定要做到：低耦合，高内聚。\n应用：在做系统设计时，不要让一个类依赖于太多的其他类，需尽量减小依赖关系，否则，您死都不知道自己怎么死的。\n</code></pre></li>\n<li>接口隔离原则（Interface Segregation Principle - ISP）<pre><code>原文：The dependency of one class to another one should depend on the smallest possible interface.\n译文：一个类与另一个类之间的依赖性，应该依赖于尽可能小的接口。、理解：不要对外暴露没有实际意义的接口。也就是说，接口是给别人调用的，那就不要去为难别人了，尽可能保证接口的实用性吧。她好，我也好。\n应用：当需要对外暴露接口时，需要再三斟酌，如果真的没有必要对外提供的，就删了吧。一旦您提供了，就意味着，您将来要多做一件事情，何苦要给自己找事做呢。\n</code></pre></li>\n<li>依赖倒置原则（Dependence Inversion Principle - DIP）<pre><code>原文：High level modules should not depends upon low level modules. Both should depend upon abstractions. Abstractions should not depend upon details. Details should depend upon abstractions.\n译文：高层模块不应该依赖于低层模块，它们应该依赖于抽象。抽象不应该依赖于细节，细节应该依赖于抽象。\n理解：应该面向接口编程，不应该面向实现类编程。面向实现类编程，相当于就是论事，那是正向依赖（正常人思维）；面向接口编程，相当于通过事物表象来看本质，那是反向依赖，即依赖倒置（程序员思维）。\n应用：并不是说，所有的类都要有一个对应的接口，而是说，如果有接口，那就尽量使用接口来编程吧。\n------&gt;------&gt;------&gt;------&gt;------&gt;------&gt;------&gt;\n将以上六大原则的英文首字母拼在一起就是 SOLID（稳定的），所以也称之为 SOLID 原则。只有满足了这六大原则，才能设计出稳定的软件架构！但它们毕竟只是原则，只是四人帮给我们的建议，有些时候我们还是要学会灵活应变，千万不要生搬硬套，否则只会把简单问题复杂化\n</code></pre>补充设计原则<ol>\n<li>组合/聚合复用原则（Composition/Aggregation Reuse Principle - CARP）<pre><code>当要扩展类的功能时，优先考虑使用组合，而不是继承。这条原则在 23 种经典设计模式中频繁使用，如：代理模式、装饰模式、适配器模式等。可见江湖地位非常之高！\n</code></pre></li>\n<li>无环依赖原则（Acyclic Dependencies Principle - ADP）<pre><code>当 A 模块依赖于 B 模块，B 模块依赖于 C 模块，C 依赖于 A 模块，此时将出现循环依赖。在设计中应该避免这个问题，可通过引入“中介者模式”解决该问题。\n</code></pre></li>\n<li>共同封装原则（Common Closure Principle - CCP）<pre><code>应该将易变的类放在同一个包里，将变化隔离出来。该原则是“开放-封闭原则”的延生。\n</code></pre></li>\n<li>共同重用原则（Common Reuse Principle - CRP）<pre><code>如果重用了包中的一个类，那么也就相当于重用了包中的所有类，我们要尽可能减小包的大小。\n</code></pre></li>\n<li>好莱坞原则（Hollywood Principle - HP）<pre><code>好莱坞明星的经纪人一般都很忙，他们不想被打扰，往往会说：Don&apos;t call me, I&apos;ll call you. 翻译为：不要联系我，我会联系你。对应于软件设计而言，最著名的就是“控制反转”（或称为“依赖注入”），我们不需要在代码中主动的创建对象，而是由容器帮我们来创建并管理这些对象。\n</code></pre></li>\n</ol>\n</li>\n</ol>\n<p>其它设计原则</p>\n<ol>\n<li>不要重复你自己（Don’t repeat yourself - DRY）<pre><code>不要让重复的代码到处都是，要让它们足够的重用，所以要尽可能地封装。\n</code></pre></li>\n<li>保持它简单与傻瓜（Keep it simple and stupid - KISS）<pre><code>不要让系统变得复杂，界面简洁，功能实用，操作方便，要让它足够的简单，足够的傻瓜。\n</code></pre></li>\n<li>高内聚与低耦合（High Cohesion and Low Coupling - HCLC）<pre><code>模块内部需要做到内聚度高，模块之间需要做到耦合度低。\n</code></pre></li>\n<li>惯例优于配置（Convention over Configuration - COC）<pre><code>尽量让惯例来减少配置，这样才能提高开发效率，尽量做到“零配置”。很多开发框架都是这样做的。\n</code></pre></li>\n<li>命令查询分离（Command Query Separation - CQS）<pre><code>在定义接口时，要做到哪些是命令，哪些是查询，要将它们分离，而不要揉到一起。\n</code></pre></li>\n<li>关注点分离（Separation of Concerns - SOC）<pre><code>将一个复杂的问题分离为多个简单的问题，然后逐个解决这些简单的问题，那么这个复杂的问题就解决了。难就难在如何进行分离。\n</code></pre></li>\n<li>契约式设计（Design by Contract - DBC）<pre><code>模块或系统之间的交互，都是基于契约（接口或抽象）的，而不要依赖于具体实现。该原则建议我们要面向契约编程。\n</code></pre></li>\n<li>你不需要它（You aren’t gonna need it - YAGNI）<pre><code>不要一开始就把系统设计得非常复杂，不要陷入“过度设计”的深渊。应该让系统足够的简单，而却又不失扩展性，这是其中的难点。\n</code></pre></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"什么是设计模式\"><a href=\"#什么是设计模式\" class=\"headerlink\" title=\"什么是设计模式\"></a>什么是设计模式</h2><ol>\n<li>定义<br>基本定义：设计模式（Design pattern）是一套被反复使用的代码设计经验的总结。使用设计模式的目的是为了可重用代码、让代码更容易被他人理解。设计模式是是软件工程的基石脉络，如大厦的结构一样<br>Design pattern的四大要素：模式名称（Name），问题（Question），解决方案（Solution），效果（Efftive）。<br>OO（面向对象）的六大原则：单一职责原则，开闭原则，里氏替换原则，依赖倒置原则，接口隔离原则，迪米特原则。<pre><code>单一职责原则：一个类中应该是一组相关性很高的函数，数据的封装。两个完全不一样的功能就不应该放在一个类中。\n开闭原则：对修改封闭，对扩展放开。\n里氏替换原则：抽象和继承；所有引用基类的地方必须能透明的使用其子类的对象。\n依赖倒置原则：抽象不应该依赖细节，细节应该依赖抽象。\n接口隔离原则：将大接口改成多个小接口。\n迪米特原则：也称为最少知识原则，一个对象应该对另一个对象有最少的了解。\n</code></pre></li>\n<li>分类<br>设计模式分为三种类型：<pre><code>创建型模式5种：单例模式，抽象工厂模式，工厂模式，原型模式，建造者模式。（口诀：单原建造者，东西二厂）\n结构型模式7种：适配器模式，桥接模式，装饰模式，组合模式，外观模式，享元模式，代理模式。（口诀：一器一桥一元一代理；装饰组合外观）\n行为型模式11种：观察者模式，中介者模式，访问者模式，解释器模式，迭代器模式，备忘录模式，责任链模式，状态模式，策略模式，命令模式，模板模式。（口诀：三者两器、一录一链一模板，状态策略命令）\n</code></pre><h2 id=\"功能模块设计原则\"><a href=\"#功能模块设计原则\" class=\"headerlink\" title=\"功能模块设计原则\"></a>功能模块设计原则</h2></li>\n<li>单一职责原则（Single Responsibility Principle - SRP）<pre><code>原文：There should never be more than one reason for a class to change.\n译文：永远不应该有多于一个原因来改变某个类。\n理解：对于一个类而言，应该仅有一个引起它变化的原因。说白了就是，不同的类具备不同的职责，各施其责。这就好比一个团队，大家分工协作，互不影响，各做各的事情。\n应用：当我们做系统设计时，如果发现有一个类拥有了两种的职责，那就问自己一个问题：可以将这个类分成两个类吗？如果真的有必要，那就分吧。千万不要让一个类干的事情太多！\n</code></pre></li>\n<li>开放封闭原则（Open Closed Principle - OCP）<pre><code>原文：Software entities like classes, modules and functions should be open for extension but closed for modifications.\n译文：软件实体，如：类、模块与函数，对于扩展应该是开放的，但对于修改应该是封闭的。\n理解：简言之，对扩展开放，对修改封闭。换句话说，可以去扩展类，但不要去修改类。\n应用：当需求有改动，要修改代码了，此时您要做的是，尽量用继承或组合的方式来扩展类的功能，而不是直接修改类的代码。当然，如果能够确保对整体架构不会产生任何影响，那么也没必要搞得那么复杂了，直接改这个类吧。\n</code></pre></li>\n<li>里氏替换原则（Liskov Substitution Principle - LSP）<pre><code>原文：Functions that use pointers or references to base classes must be able to use objects of derived classes without knowing it.\n译文：使用基类的指针或引用的函数，必须是在不知情的情况下，能够使用派生类的对象。\n理解：父类能够替换子类，但子类不一定能替换父类。也就是说，在代码中可以将父类全部替换为子类，程序不会报错，也不会在运行时出现任何异常，但反过来却不一定成立。\n应用：在继承类时，务必重写（Override）父类中所有的方法，尤其需要注意父类的 protected 方法（它们往往是让您重写的），子类尽量不要暴露自己的 public 方法供外界调用。\n</code></pre></li>\n<li>最少知识原则（Least Knowledge Principle - LKP）<pre><code>原文：Only talk to you immediate friends.\n译文：只与你最直接的朋友交流。\n理解：尽量减少对象之间的交互，从而减小类之间的耦合。简言之，一定要做到：低耦合，高内聚。\n应用：在做系统设计时，不要让一个类依赖于太多的其他类，需尽量减小依赖关系，否则，您死都不知道自己怎么死的。\n</code></pre></li>\n<li>接口隔离原则（Interface Segregation Principle - ISP）<pre><code>原文：The dependency of one class to another one should depend on the smallest possible interface.\n译文：一个类与另一个类之间的依赖性，应该依赖于尽可能小的接口。、理解：不要对外暴露没有实际意义的接口。也就是说，接口是给别人调用的，那就不要去为难别人了，尽可能保证接口的实用性吧。她好，我也好。\n应用：当需要对外暴露接口时，需要再三斟酌，如果真的没有必要对外提供的，就删了吧。一旦您提供了，就意味着，您将来要多做一件事情，何苦要给自己找事做呢。\n</code></pre></li>\n<li>依赖倒置原则（Dependence Inversion Principle - DIP）<pre><code>原文：High level modules should not depends upon low level modules. Both should depend upon abstractions. Abstractions should not depend upon details. Details should depend upon abstractions.\n译文：高层模块不应该依赖于低层模块，它们应该依赖于抽象。抽象不应该依赖于细节，细节应该依赖于抽象。\n理解：应该面向接口编程，不应该面向实现类编程。面向实现类编程，相当于就是论事，那是正向依赖（正常人思维）；面向接口编程，相当于通过事物表象来看本质，那是反向依赖，即依赖倒置（程序员思维）。\n应用：并不是说，所有的类都要有一个对应的接口，而是说，如果有接口，那就尽量使用接口来编程吧。\n------&gt;------&gt;------&gt;------&gt;------&gt;------&gt;------&gt;\n将以上六大原则的英文首字母拼在一起就是 SOLID（稳定的），所以也称之为 SOLID 原则。只有满足了这六大原则，才能设计出稳定的软件架构！但它们毕竟只是原则，只是四人帮给我们的建议，有些时候我们还是要学会灵活应变，千万不要生搬硬套，否则只会把简单问题复杂化\n</code></pre>补充设计原则<ol>\n<li>组合/聚合复用原则（Composition/Aggregation Reuse Principle - CARP）<pre><code>当要扩展类的功能时，优先考虑使用组合，而不是继承。这条原则在 23 种经典设计模式中频繁使用，如：代理模式、装饰模式、适配器模式等。可见江湖地位非常之高！\n</code></pre></li>\n<li>无环依赖原则（Acyclic Dependencies Principle - ADP）<pre><code>当 A 模块依赖于 B 模块，B 模块依赖于 C 模块，C 依赖于 A 模块，此时将出现循环依赖。在设计中应该避免这个问题，可通过引入“中介者模式”解决该问题。\n</code></pre></li>\n<li>共同封装原则（Common Closure Principle - CCP）<pre><code>应该将易变的类放在同一个包里，将变化隔离出来。该原则是“开放-封闭原则”的延生。\n</code></pre></li>\n<li>共同重用原则（Common Reuse Principle - CRP）<pre><code>如果重用了包中的一个类，那么也就相当于重用了包中的所有类，我们要尽可能减小包的大小。\n</code></pre></li>\n<li>好莱坞原则（Hollywood Principle - HP）<pre><code>好莱坞明星的经纪人一般都很忙，他们不想被打扰，往往会说：Don&apos;t call me, I&apos;ll call you. 翻译为：不要联系我，我会联系你。对应于软件设计而言，最著名的就是“控制反转”（或称为“依赖注入”），我们不需要在代码中主动的创建对象，而是由容器帮我们来创建并管理这些对象。\n</code></pre></li>\n</ol>\n</li>\n</ol>\n<p>其它设计原则</p>\n<ol>\n<li>不要重复你自己（Don’t repeat yourself - DRY）<pre><code>不要让重复的代码到处都是，要让它们足够的重用，所以要尽可能地封装。\n</code></pre></li>\n<li>保持它简单与傻瓜（Keep it simple and stupid - KISS）<pre><code>不要让系统变得复杂，界面简洁，功能实用，操作方便，要让它足够的简单，足够的傻瓜。\n</code></pre></li>\n<li>高内聚与低耦合（High Cohesion and Low Coupling - HCLC）<pre><code>模块内部需要做到内聚度高，模块之间需要做到耦合度低。\n</code></pre></li>\n<li>惯例优于配置（Convention over Configuration - COC）<pre><code>尽量让惯例来减少配置，这样才能提高开发效率，尽量做到“零配置”。很多开发框架都是这样做的。\n</code></pre></li>\n<li>命令查询分离（Command Query Separation - CQS）<pre><code>在定义接口时，要做到哪些是命令，哪些是查询，要将它们分离，而不要揉到一起。\n</code></pre></li>\n<li>关注点分离（Separation of Concerns - SOC）<pre><code>将一个复杂的问题分离为多个简单的问题，然后逐个解决这些简单的问题，那么这个复杂的问题就解决了。难就难在如何进行分离。\n</code></pre></li>\n<li>契约式设计（Design by Contract - DBC）<pre><code>模块或系统之间的交互，都是基于契约（接口或抽象）的，而不要依赖于具体实现。该原则建议我们要面向契约编程。\n</code></pre></li>\n<li>你不需要它（You aren’t gonna need it - YAGNI）<pre><code>不要一开始就把系统设计得非常复杂，不要陷入“过度设计”的深渊。应该让系统足够的简单，而却又不失扩展性，这是其中的难点。\n</code></pre></li>\n</ol>\n"},{"title":"Android中的设计模式","date":"2018-05-21T08:54:16.000Z","_content":"（1）单例模式：\n\t\t\t简介：保证一个类仅有一个实例，并提供一个访问它的全局访问点。\n\t\t\t示例：Android中的系统级服务都是通过容器的单例模式实现方式，以单例形式存在，减少了资源消耗。\n\t\t\t比如LayoutInflater Service，将这些服务以键值对的形式存储在一个HashMap容器中，用户使用时只需要根据key来获取到对应的ServiceFetcher，然后通过ServcieFetcher对象的getService函数来获取到具体的服务对象，第一次获取时会调用ServcieFetcher的createService函数创建服务对象，然后将该对象缓存到一个列表中，下次再取时直接从缓存中获取，避免重复创建对象，从而达到单例的效果。\n（2）抽象工厂模式：\n\t\t\t简介：提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。\n\t\t\t示例：Android底层对MediaPlayer的创建。MediaPlayerFactory是Android底层为了创建不同的MediaPlayer所定义的一个类。\n（3）工厂模式：\n\t\t\t简介：定义一个用于创建对象的接口，让子类决定将哪一个类实例化。\n\t\t\t示例：BitmapFactory位图工厂，专门用来将指定的图片转换为指定的位图Bitmap。\n（4）原型模式：\n\t\t\t简介：用原型实例指定创建对象的种类，并且通过拷贝这个原型来创建新的对象。\n\t\t\t示例：比如我们需要一张Bitmap的几种不同格式：ARGB_8888、RGB_565、ARGB_4444、ALAPHA_8等。那我们就可以先创建一个ARGB_8888的Bitmap作为原型，在它的基础上，通过调用Bitmap.copy(Config)来创建出其它几种格式的Bitmap。另外一个例子就是Java中所有对象都有的一个名字叫clone的方法，已经原型模式的代名词了。在系统中要创建大量的对象，这些对象之间具有几乎完全相同的功能，只是在细节上有一点儿差别。\n（5）建造者模式：\n\t\t\t简介：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。\n\t\t\t示例：AlertDialog.Builder   ImageLoader的初始配置。\n（6）适配器模式：\n\t\t\t简介：将一个类的接口转换成客户希望的另外一个接口。\n\t\t\t示例：不同的数据提供者使用一个适配器来向一个相同的客户提供服务。\n\t\t\tListView或GridView的Adapter。\n（7）桥接模式：\n\t\t\t简介：将抽象部分与它的实现部分分离，使它们都可以独立地变化。\n\t\t\t示例：Window和WindowManager之间的关系。\n\t\t\t在FrameWork中Window和PhoneWindow构成窗口的抽象部分，其中Window类为该抽象部分的抽象接口，PhoneWindow为抽象部分具体的实现及扩展。而WindowManager则为实现部分的基类，WindowManagerImpl则为实现部分具体的逻辑实现。\n（8）装饰模式：\n\t\t\t简介：动态地给一个对象添加一些额外的职责。就扩展功能而言， 它比生成子类方式更为灵活。\n\t\t\t示例：Activity继承自ContextThemeWrapper，ContextThemeWrapper继承自ContextWrapper，ContextWrapper才是继承自Context。ContextWrapper就是我们找的装饰者。\n（9）组合模式：\n\t\t\t简介：将对象组合成树形结构以表示“部分-整体”的层次结构。\n\t\t\t示例：View和ViewGroup的组合\n（10）外观模式\n\t\t\t简介：为子系统中的一组接口提供一个一致的界面，Facade模式定义了一个高层接口，统一编程接口。\n\t\t\t示例：ContextImpl\n（11）享元模式：\n\t\t\t简介：运用共享技术有效地支持大量细粒度的对象。\n\t\t\t示例：Message.obtainMessage通过重用Message对象来避免大量的Message对象被频繁的创建和销毁。\n（12）代理模式：\n\t\t\t简介：为其他对象提供一个代理以控制对这个对象的访问。\n\t\t\t示例：所有的AIDL都一个代理模式的例子。假设一个Activity A去绑定一个Service S，那么A调用S中的每一个方法其实都是通过系统的Binder机制的中转，然后调用S中的对应方法来做到的。Binder机制就起到了代理的作用。\n（13）观察者模式：\n\t\t\t简介：一个对象发生改变时，所有信赖于它的对象自动做相应改变。\n\t\t\t示例：我们可以通过BaseAdapter.registerDataSetObserver和BaseAdapter.unregisterDataSetObserver两方法来向BaseAdater注册、注销一个DataSetObserver。这个过程中，DataSetObserver就是一个观察者，它一旦发现BaseAdapter内部数据有变量，就会通过回调方法DataSetObserver.onChanged和DataSetObserver.onInvalidated来通知DataSetObserver的实现类。事件通知也是观察者模式。\n（14）中介者模式：\n\t\t\t简介：用一个中介对象来封装一系列的对象交互。中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。\n\t\t\t示例：Binder机制。\n(15)访问者模式:\n\t\t\t简介：表示一个作用于某对象结构中的各元素的操作。它使你可以在不改变各元素的类的前提下定义作用于这些元素的新操作。\n\t\t\t示例：编译时注解中的ElementVisitor中定义多个Visit接口，每个接口处理一种数据类型，这就是典型的访问者模式，访问者模式正好解决了数据结构和数据操作分离的问题，避免某些操作污染了数据对象类。\n（16） 解释器模式：\n\t\t\t简介：给定一个语言，定义它的文法的一种表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子。\n\t\t\t示例：PackageParser这个类对AndroidManifest.xml这个配置文件的解析过程，\n（17）迭代器模式\n\t\t\t简介：提供一种方法顺序访问一个聚合对象中各个元素, 而又不需暴露该对象的内部表示。\n\t\t\t示例：在Android中除了各种数据结构体，如List，Map，等包含的迭代器以外，Android源码中也提供了迭代器遍历模式，比如数据库查询使用Cursor，当我们使用SQLiteDataBase的query方法查询数据库时，会返回一个Cursor游标对象，该游标对象实际上就是一个具体的迭代器。\n（18）备忘录模式\n\t\t\t简介：不需要了解对象的内部结构的情况下备份对象的状态，方便以后恢复。\n\t\t\t示例：Activity的onSaveInstanceState和onRestoreInstanceState就是通过Bundle这种序列化的数据结构来存储Activity的状态，至于其中存储的数据结构，这两个方法不用关心。\n（19）责任链模式\n\t\t\t简介：有多个的对象可以处理一个请求，哪个对象处理该请求运行时刻自动确定。\n\t\t\t示例:  责任链模式在Android源码中比较类似的实现莫过于对事件的分发处理，每当用户接触屏幕时候，Android都会将对应的事件包装成一个事件对象从ViewTree的顶部至上而下的分发传递。ViewGroup事件投递的递归调用就类似一条责任链，一旦寻找到责任者，那么就由责任者持有并消费该次事件，具体的体现在View的onTouchEvent方法中的返回值，如果OnTouchEvent返回false，那么意味着当前View不会是该次事件的责任人，将不会对该事件持有。\n（20）状态模式：\n\t\t\t简介：状态发生改变时，行为改变。\n\t\t\t示例：View.onVisibilityChanged方法，就是提供了一个状态模式的实现，允许在View的visibility发生改变时，引发执行onVisibilityChanged方法中的动作。\n（21）策略模式\n\t\t\t简介：定义了一系列封装了算法、行为的对象，他们可以相互替换。\n\t\t\t示例：Java.util.List就是定义了一个增（add）、删（remove）、改（set）、查（indexOf）策略，至于实现这个策略的ArrayList、LinkedList等类，只是在具体实现时采用了不同的算法。但因为它们策略一样，不考虑速度的情况下，使用时完全可以互相替换使用。\n（22）命令模式\n\t\t\t简介：把请求封装成一个对象发送出去，方便定制、排队、取消。\n\t\t\t示例：Handler.post后Handler.handleMessage。\n（23）享元模式\n\t\t\t简介：运用共享技术有效地支持大量细粒度的对象。\n\t\t\t示例：Message.obtainMessage通过重用Message对象来避免大量的Message对象被频繁的创建和销毁。","source":"_posts/Android中的设计模式.md","raw":"---\ntitle: Android中的设计模式\ndate: 2018-05-21 16:54:16\ntags: \"设计模式\"\ncategories: \"Android\"\n---\n（1）单例模式：\n\t\t\t简介：保证一个类仅有一个实例，并提供一个访问它的全局访问点。\n\t\t\t示例：Android中的系统级服务都是通过容器的单例模式实现方式，以单例形式存在，减少了资源消耗。\n\t\t\t比如LayoutInflater Service，将这些服务以键值对的形式存储在一个HashMap容器中，用户使用时只需要根据key来获取到对应的ServiceFetcher，然后通过ServcieFetcher对象的getService函数来获取到具体的服务对象，第一次获取时会调用ServcieFetcher的createService函数创建服务对象，然后将该对象缓存到一个列表中，下次再取时直接从缓存中获取，避免重复创建对象，从而达到单例的效果。\n（2）抽象工厂模式：\n\t\t\t简介：提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。\n\t\t\t示例：Android底层对MediaPlayer的创建。MediaPlayerFactory是Android底层为了创建不同的MediaPlayer所定义的一个类。\n（3）工厂模式：\n\t\t\t简介：定义一个用于创建对象的接口，让子类决定将哪一个类实例化。\n\t\t\t示例：BitmapFactory位图工厂，专门用来将指定的图片转换为指定的位图Bitmap。\n（4）原型模式：\n\t\t\t简介：用原型实例指定创建对象的种类，并且通过拷贝这个原型来创建新的对象。\n\t\t\t示例：比如我们需要一张Bitmap的几种不同格式：ARGB_8888、RGB_565、ARGB_4444、ALAPHA_8等。那我们就可以先创建一个ARGB_8888的Bitmap作为原型，在它的基础上，通过调用Bitmap.copy(Config)来创建出其它几种格式的Bitmap。另外一个例子就是Java中所有对象都有的一个名字叫clone的方法，已经原型模式的代名词了。在系统中要创建大量的对象，这些对象之间具有几乎完全相同的功能，只是在细节上有一点儿差别。\n（5）建造者模式：\n\t\t\t简介：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。\n\t\t\t示例：AlertDialog.Builder   ImageLoader的初始配置。\n（6）适配器模式：\n\t\t\t简介：将一个类的接口转换成客户希望的另外一个接口。\n\t\t\t示例：不同的数据提供者使用一个适配器来向一个相同的客户提供服务。\n\t\t\tListView或GridView的Adapter。\n（7）桥接模式：\n\t\t\t简介：将抽象部分与它的实现部分分离，使它们都可以独立地变化。\n\t\t\t示例：Window和WindowManager之间的关系。\n\t\t\t在FrameWork中Window和PhoneWindow构成窗口的抽象部分，其中Window类为该抽象部分的抽象接口，PhoneWindow为抽象部分具体的实现及扩展。而WindowManager则为实现部分的基类，WindowManagerImpl则为实现部分具体的逻辑实现。\n（8）装饰模式：\n\t\t\t简介：动态地给一个对象添加一些额外的职责。就扩展功能而言， 它比生成子类方式更为灵活。\n\t\t\t示例：Activity继承自ContextThemeWrapper，ContextThemeWrapper继承自ContextWrapper，ContextWrapper才是继承自Context。ContextWrapper就是我们找的装饰者。\n（9）组合模式：\n\t\t\t简介：将对象组合成树形结构以表示“部分-整体”的层次结构。\n\t\t\t示例：View和ViewGroup的组合\n（10）外观模式\n\t\t\t简介：为子系统中的一组接口提供一个一致的界面，Facade模式定义了一个高层接口，统一编程接口。\n\t\t\t示例：ContextImpl\n（11）享元模式：\n\t\t\t简介：运用共享技术有效地支持大量细粒度的对象。\n\t\t\t示例：Message.obtainMessage通过重用Message对象来避免大量的Message对象被频繁的创建和销毁。\n（12）代理模式：\n\t\t\t简介：为其他对象提供一个代理以控制对这个对象的访问。\n\t\t\t示例：所有的AIDL都一个代理模式的例子。假设一个Activity A去绑定一个Service S，那么A调用S中的每一个方法其实都是通过系统的Binder机制的中转，然后调用S中的对应方法来做到的。Binder机制就起到了代理的作用。\n（13）观察者模式：\n\t\t\t简介：一个对象发生改变时，所有信赖于它的对象自动做相应改变。\n\t\t\t示例：我们可以通过BaseAdapter.registerDataSetObserver和BaseAdapter.unregisterDataSetObserver两方法来向BaseAdater注册、注销一个DataSetObserver。这个过程中，DataSetObserver就是一个观察者，它一旦发现BaseAdapter内部数据有变量，就会通过回调方法DataSetObserver.onChanged和DataSetObserver.onInvalidated来通知DataSetObserver的实现类。事件通知也是观察者模式。\n（14）中介者模式：\n\t\t\t简介：用一个中介对象来封装一系列的对象交互。中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。\n\t\t\t示例：Binder机制。\n(15)访问者模式:\n\t\t\t简介：表示一个作用于某对象结构中的各元素的操作。它使你可以在不改变各元素的类的前提下定义作用于这些元素的新操作。\n\t\t\t示例：编译时注解中的ElementVisitor中定义多个Visit接口，每个接口处理一种数据类型，这就是典型的访问者模式，访问者模式正好解决了数据结构和数据操作分离的问题，避免某些操作污染了数据对象类。\n（16） 解释器模式：\n\t\t\t简介：给定一个语言，定义它的文法的一种表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子。\n\t\t\t示例：PackageParser这个类对AndroidManifest.xml这个配置文件的解析过程，\n（17）迭代器模式\n\t\t\t简介：提供一种方法顺序访问一个聚合对象中各个元素, 而又不需暴露该对象的内部表示。\n\t\t\t示例：在Android中除了各种数据结构体，如List，Map，等包含的迭代器以外，Android源码中也提供了迭代器遍历模式，比如数据库查询使用Cursor，当我们使用SQLiteDataBase的query方法查询数据库时，会返回一个Cursor游标对象，该游标对象实际上就是一个具体的迭代器。\n（18）备忘录模式\n\t\t\t简介：不需要了解对象的内部结构的情况下备份对象的状态，方便以后恢复。\n\t\t\t示例：Activity的onSaveInstanceState和onRestoreInstanceState就是通过Bundle这种序列化的数据结构来存储Activity的状态，至于其中存储的数据结构，这两个方法不用关心。\n（19）责任链模式\n\t\t\t简介：有多个的对象可以处理一个请求，哪个对象处理该请求运行时刻自动确定。\n\t\t\t示例:  责任链模式在Android源码中比较类似的实现莫过于对事件的分发处理，每当用户接触屏幕时候，Android都会将对应的事件包装成一个事件对象从ViewTree的顶部至上而下的分发传递。ViewGroup事件投递的递归调用就类似一条责任链，一旦寻找到责任者，那么就由责任者持有并消费该次事件，具体的体现在View的onTouchEvent方法中的返回值，如果OnTouchEvent返回false，那么意味着当前View不会是该次事件的责任人，将不会对该事件持有。\n（20）状态模式：\n\t\t\t简介：状态发生改变时，行为改变。\n\t\t\t示例：View.onVisibilityChanged方法，就是提供了一个状态模式的实现，允许在View的visibility发生改变时，引发执行onVisibilityChanged方法中的动作。\n（21）策略模式\n\t\t\t简介：定义了一系列封装了算法、行为的对象，他们可以相互替换。\n\t\t\t示例：Java.util.List就是定义了一个增（add）、删（remove）、改（set）、查（indexOf）策略，至于实现这个策略的ArrayList、LinkedList等类，只是在具体实现时采用了不同的算法。但因为它们策略一样，不考虑速度的情况下，使用时完全可以互相替换使用。\n（22）命令模式\n\t\t\t简介：把请求封装成一个对象发送出去，方便定制、排队、取消。\n\t\t\t示例：Handler.post后Handler.handleMessage。\n（23）享元模式\n\t\t\t简介：运用共享技术有效地支持大量细粒度的对象。\n\t\t\t示例：Message.obtainMessage通过重用Message对象来避免大量的Message对象被频繁的创建和销毁。","slug":"Android中的设计模式","published":1,"updated":"2018-05-21T08:56:26.770Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhh1ew7o000fwgw5thcdhwuk","content":"<p>（1）单例模式：<br>            简介：保证一个类仅有一个实例，并提供一个访问它的全局访问点。<br>            示例：Android中的系统级服务都是通过容器的单例模式实现方式，以单例形式存在，减少了资源消耗。<br>            比如LayoutInflater Service，将这些服务以键值对的形式存储在一个HashMap容器中，用户使用时只需要根据key来获取到对应的ServiceFetcher，然后通过ServcieFetcher对象的getService函数来获取到具体的服务对象，第一次获取时会调用ServcieFetcher的createService函数创建服务对象，然后将该对象缓存到一个列表中，下次再取时直接从缓存中获取，避免重复创建对象，从而达到单例的效果。<br>（2）抽象工厂模式：<br>            简介：提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。<br>            示例：Android底层对MediaPlayer的创建。MediaPlayerFactory是Android底层为了创建不同的MediaPlayer所定义的一个类。<br>（3）工厂模式：<br>            简介：定义一个用于创建对象的接口，让子类决定将哪一个类实例化。<br>            示例：BitmapFactory位图工厂，专门用来将指定的图片转换为指定的位图Bitmap。<br>（4）原型模式：<br>            简介：用原型实例指定创建对象的种类，并且通过拷贝这个原型来创建新的对象。<br>            示例：比如我们需要一张Bitmap的几种不同格式：ARGB_8888、RGB_565、ARGB_4444、ALAPHA_8等。那我们就可以先创建一个ARGB_8888的Bitmap作为原型，在它的基础上，通过调用Bitmap.copy(Config)来创建出其它几种格式的Bitmap。另外一个例子就是Java中所有对象都有的一个名字叫clone的方法，已经原型模式的代名词了。在系统中要创建大量的对象，这些对象之间具有几乎完全相同的功能，只是在细节上有一点儿差别。<br>（5）建造者模式：<br>            简介：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。<br>            示例：AlertDialog.Builder   ImageLoader的初始配置。<br>（6）适配器模式：<br>            简介：将一个类的接口转换成客户希望的另外一个接口。<br>            示例：不同的数据提供者使用一个适配器来向一个相同的客户提供服务。<br>            ListView或GridView的Adapter。<br>（7）桥接模式：<br>            简介：将抽象部分与它的实现部分分离，使它们都可以独立地变化。<br>            示例：Window和WindowManager之间的关系。<br>            在FrameWork中Window和PhoneWindow构成窗口的抽象部分，其中Window类为该抽象部分的抽象接口，PhoneWindow为抽象部分具体的实现及扩展。而WindowManager则为实现部分的基类，WindowManagerImpl则为实现部分具体的逻辑实现。<br>（8）装饰模式：<br>            简介：动态地给一个对象添加一些额外的职责。就扩展功能而言， 它比生成子类方式更为灵活。<br>            示例：Activity继承自ContextThemeWrapper，ContextThemeWrapper继承自ContextWrapper，ContextWrapper才是继承自Context。ContextWrapper就是我们找的装饰者。<br>（9）组合模式：<br>            简介：将对象组合成树形结构以表示“部分-整体”的层次结构。<br>            示例：View和ViewGroup的组合<br>（10）外观模式<br>            简介：为子系统中的一组接口提供一个一致的界面，Facade模式定义了一个高层接口，统一编程接口。<br>            示例：ContextImpl<br>（11）享元模式：<br>            简介：运用共享技术有效地支持大量细粒度的对象。<br>            示例：Message.obtainMessage通过重用Message对象来避免大量的Message对象被频繁的创建和销毁。<br>（12）代理模式：<br>            简介：为其他对象提供一个代理以控制对这个对象的访问。<br>            示例：所有的AIDL都一个代理模式的例子。假设一个Activity A去绑定一个Service S，那么A调用S中的每一个方法其实都是通过系统的Binder机制的中转，然后调用S中的对应方法来做到的。Binder机制就起到了代理的作用。<br>（13）观察者模式：<br>            简介：一个对象发生改变时，所有信赖于它的对象自动做相应改变。<br>            示例：我们可以通过BaseAdapter.registerDataSetObserver和BaseAdapter.unregisterDataSetObserver两方法来向BaseAdater注册、注销一个DataSetObserver。这个过程中，DataSetObserver就是一个观察者，它一旦发现BaseAdapter内部数据有变量，就会通过回调方法DataSetObserver.onChanged和DataSetObserver.onInvalidated来通知DataSetObserver的实现类。事件通知也是观察者模式。<br>（14）中介者模式：<br>            简介：用一个中介对象来封装一系列的对象交互。中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。<br>            示例：Binder机制。<br>(15)访问者模式:<br>            简介：表示一个作用于某对象结构中的各元素的操作。它使你可以在不改变各元素的类的前提下定义作用于这些元素的新操作。<br>            示例：编译时注解中的ElementVisitor中定义多个Visit接口，每个接口处理一种数据类型，这就是典型的访问者模式，访问者模式正好解决了数据结构和数据操作分离的问题，避免某些操作污染了数据对象类。<br>（16） 解释器模式：<br>            简介：给定一个语言，定义它的文法的一种表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子。<br>            示例：PackageParser这个类对AndroidManifest.xml这个配置文件的解析过程，<br>（17）迭代器模式<br>            简介：提供一种方法顺序访问一个聚合对象中各个元素, 而又不需暴露该对象的内部表示。<br>            示例：在Android中除了各种数据结构体，如List，Map，等包含的迭代器以外，Android源码中也提供了迭代器遍历模式，比如数据库查询使用Cursor，当我们使用SQLiteDataBase的query方法查询数据库时，会返回一个Cursor游标对象，该游标对象实际上就是一个具体的迭代器。<br>（18）备忘录模式<br>            简介：不需要了解对象的内部结构的情况下备份对象的状态，方便以后恢复。<br>            示例：Activity的onSaveInstanceState和onRestoreInstanceState就是通过Bundle这种序列化的数据结构来存储Activity的状态，至于其中存储的数据结构，这两个方法不用关心。<br>（19）责任链模式<br>            简介：有多个的对象可以处理一个请求，哪个对象处理该请求运行时刻自动确定。<br>            示例:  责任链模式在Android源码中比较类似的实现莫过于对事件的分发处理，每当用户接触屏幕时候，Android都会将对应的事件包装成一个事件对象从ViewTree的顶部至上而下的分发传递。ViewGroup事件投递的递归调用就类似一条责任链，一旦寻找到责任者，那么就由责任者持有并消费该次事件，具体的体现在View的onTouchEvent方法中的返回值，如果OnTouchEvent返回false，那么意味着当前View不会是该次事件的责任人，将不会对该事件持有。<br>（20）状态模式：<br>            简介：状态发生改变时，行为改变。<br>            示例：View.onVisibilityChanged方法，就是提供了一个状态模式的实现，允许在View的visibility发生改变时，引发执行onVisibilityChanged方法中的动作。<br>（21）策略模式<br>            简介：定义了一系列封装了算法、行为的对象，他们可以相互替换。<br>            示例：Java.util.List就是定义了一个增（add）、删（remove）、改（set）、查（indexOf）策略，至于实现这个策略的ArrayList、LinkedList等类，只是在具体实现时采用了不同的算法。但因为它们策略一样，不考虑速度的情况下，使用时完全可以互相替换使用。<br>（22）命令模式<br>            简介：把请求封装成一个对象发送出去，方便定制、排队、取消。<br>            示例：Handler.post后Handler.handleMessage。<br>（23）享元模式<br>            简介：运用共享技术有效地支持大量细粒度的对象。<br>            示例：Message.obtainMessage通过重用Message对象来避免大量的Message对象被频繁的创建和销毁。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>（1）单例模式：<br>            简介：保证一个类仅有一个实例，并提供一个访问它的全局访问点。<br>            示例：Android中的系统级服务都是通过容器的单例模式实现方式，以单例形式存在，减少了资源消耗。<br>            比如LayoutInflater Service，将这些服务以键值对的形式存储在一个HashMap容器中，用户使用时只需要根据key来获取到对应的ServiceFetcher，然后通过ServcieFetcher对象的getService函数来获取到具体的服务对象，第一次获取时会调用ServcieFetcher的createService函数创建服务对象，然后将该对象缓存到一个列表中，下次再取时直接从缓存中获取，避免重复创建对象，从而达到单例的效果。<br>（2）抽象工厂模式：<br>            简介：提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。<br>            示例：Android底层对MediaPlayer的创建。MediaPlayerFactory是Android底层为了创建不同的MediaPlayer所定义的一个类。<br>（3）工厂模式：<br>            简介：定义一个用于创建对象的接口，让子类决定将哪一个类实例化。<br>            示例：BitmapFactory位图工厂，专门用来将指定的图片转换为指定的位图Bitmap。<br>（4）原型模式：<br>            简介：用原型实例指定创建对象的种类，并且通过拷贝这个原型来创建新的对象。<br>            示例：比如我们需要一张Bitmap的几种不同格式：ARGB_8888、RGB_565、ARGB_4444、ALAPHA_8等。那我们就可以先创建一个ARGB_8888的Bitmap作为原型，在它的基础上，通过调用Bitmap.copy(Config)来创建出其它几种格式的Bitmap。另外一个例子就是Java中所有对象都有的一个名字叫clone的方法，已经原型模式的代名词了。在系统中要创建大量的对象，这些对象之间具有几乎完全相同的功能，只是在细节上有一点儿差别。<br>（5）建造者模式：<br>            简介：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。<br>            示例：AlertDialog.Builder   ImageLoader的初始配置。<br>（6）适配器模式：<br>            简介：将一个类的接口转换成客户希望的另外一个接口。<br>            示例：不同的数据提供者使用一个适配器来向一个相同的客户提供服务。<br>            ListView或GridView的Adapter。<br>（7）桥接模式：<br>            简介：将抽象部分与它的实现部分分离，使它们都可以独立地变化。<br>            示例：Window和WindowManager之间的关系。<br>            在FrameWork中Window和PhoneWindow构成窗口的抽象部分，其中Window类为该抽象部分的抽象接口，PhoneWindow为抽象部分具体的实现及扩展。而WindowManager则为实现部分的基类，WindowManagerImpl则为实现部分具体的逻辑实现。<br>（8）装饰模式：<br>            简介：动态地给一个对象添加一些额外的职责。就扩展功能而言， 它比生成子类方式更为灵活。<br>            示例：Activity继承自ContextThemeWrapper，ContextThemeWrapper继承自ContextWrapper，ContextWrapper才是继承自Context。ContextWrapper就是我们找的装饰者。<br>（9）组合模式：<br>            简介：将对象组合成树形结构以表示“部分-整体”的层次结构。<br>            示例：View和ViewGroup的组合<br>（10）外观模式<br>            简介：为子系统中的一组接口提供一个一致的界面，Facade模式定义了一个高层接口，统一编程接口。<br>            示例：ContextImpl<br>（11）享元模式：<br>            简介：运用共享技术有效地支持大量细粒度的对象。<br>            示例：Message.obtainMessage通过重用Message对象来避免大量的Message对象被频繁的创建和销毁。<br>（12）代理模式：<br>            简介：为其他对象提供一个代理以控制对这个对象的访问。<br>            示例：所有的AIDL都一个代理模式的例子。假设一个Activity A去绑定一个Service S，那么A调用S中的每一个方法其实都是通过系统的Binder机制的中转，然后调用S中的对应方法来做到的。Binder机制就起到了代理的作用。<br>（13）观察者模式：<br>            简介：一个对象发生改变时，所有信赖于它的对象自动做相应改变。<br>            示例：我们可以通过BaseAdapter.registerDataSetObserver和BaseAdapter.unregisterDataSetObserver两方法来向BaseAdater注册、注销一个DataSetObserver。这个过程中，DataSetObserver就是一个观察者，它一旦发现BaseAdapter内部数据有变量，就会通过回调方法DataSetObserver.onChanged和DataSetObserver.onInvalidated来通知DataSetObserver的实现类。事件通知也是观察者模式。<br>（14）中介者模式：<br>            简介：用一个中介对象来封装一系列的对象交互。中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。<br>            示例：Binder机制。<br>(15)访问者模式:<br>            简介：表示一个作用于某对象结构中的各元素的操作。它使你可以在不改变各元素的类的前提下定义作用于这些元素的新操作。<br>            示例：编译时注解中的ElementVisitor中定义多个Visit接口，每个接口处理一种数据类型，这就是典型的访问者模式，访问者模式正好解决了数据结构和数据操作分离的问题，避免某些操作污染了数据对象类。<br>（16） 解释器模式：<br>            简介：给定一个语言，定义它的文法的一种表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子。<br>            示例：PackageParser这个类对AndroidManifest.xml这个配置文件的解析过程，<br>（17）迭代器模式<br>            简介：提供一种方法顺序访问一个聚合对象中各个元素, 而又不需暴露该对象的内部表示。<br>            示例：在Android中除了各种数据结构体，如List，Map，等包含的迭代器以外，Android源码中也提供了迭代器遍历模式，比如数据库查询使用Cursor，当我们使用SQLiteDataBase的query方法查询数据库时，会返回一个Cursor游标对象，该游标对象实际上就是一个具体的迭代器。<br>（18）备忘录模式<br>            简介：不需要了解对象的内部结构的情况下备份对象的状态，方便以后恢复。<br>            示例：Activity的onSaveInstanceState和onRestoreInstanceState就是通过Bundle这种序列化的数据结构来存储Activity的状态，至于其中存储的数据结构，这两个方法不用关心。<br>（19）责任链模式<br>            简介：有多个的对象可以处理一个请求，哪个对象处理该请求运行时刻自动确定。<br>            示例:  责任链模式在Android源码中比较类似的实现莫过于对事件的分发处理，每当用户接触屏幕时候，Android都会将对应的事件包装成一个事件对象从ViewTree的顶部至上而下的分发传递。ViewGroup事件投递的递归调用就类似一条责任链，一旦寻找到责任者，那么就由责任者持有并消费该次事件，具体的体现在View的onTouchEvent方法中的返回值，如果OnTouchEvent返回false，那么意味着当前View不会是该次事件的责任人，将不会对该事件持有。<br>（20）状态模式：<br>            简介：状态发生改变时，行为改变。<br>            示例：View.onVisibilityChanged方法，就是提供了一个状态模式的实现，允许在View的visibility发生改变时，引发执行onVisibilityChanged方法中的动作。<br>（21）策略模式<br>            简介：定义了一系列封装了算法、行为的对象，他们可以相互替换。<br>            示例：Java.util.List就是定义了一个增（add）、删（remove）、改（set）、查（indexOf）策略，至于实现这个策略的ArrayList、LinkedList等类，只是在具体实现时采用了不同的算法。但因为它们策略一样，不考虑速度的情况下，使用时完全可以互相替换使用。<br>（22）命令模式<br>            简介：把请求封装成一个对象发送出去，方便定制、排队、取消。<br>            示例：Handler.post后Handler.handleMessage。<br>（23）享元模式<br>            简介：运用共享技术有效地支持大量细粒度的对象。<br>            示例：Message.obtainMessage通过重用Message对象来避免大量的Message对象被频繁的创建和销毁。</p>\n"},{"title":"markdown编辑器","date":"2018-05-22T02:23:08.000Z","_content":"小书匠 [下载地址](http://soft.xiaoshujiang.com/download.html)\n能够将数据保存到github、云存贮等；\n","source":"_posts/markdown编辑器.md","raw":"---\ntitle: markdown编辑器\ndate: 2018-05-22 10:23:08\ntags: \n- markdown\ncategories:\n- 编辑器\n---\n小书匠 [下载地址](http://soft.xiaoshujiang.com/download.html)\n能够将数据保存到github、云存贮等；\n","slug":"markdown编辑器","published":1,"updated":"2018-05-22T03:25:39.964Z","_id":"cjhh21vbk0000dkw51jvfkx5q","comments":1,"layout":"post","photos":[],"link":"","content":"<p>小书匠 <a href=\"http://soft.xiaoshujiang.com/download.html\" target=\"_blank\" rel=\"noopener\">下载地址</a><br>能够将数据保存到github、云存贮等；</p>\n","site":{"data":{}},"excerpt":"","more":"<p>小书匠 <a href=\"http://soft.xiaoshujiang.com/download.html\" target=\"_blank\" rel=\"noopener\">下载地址</a><br>能够将数据保存到github、云存贮等；</p>\n"}],"PostAsset":[{"_id":"source/_posts/妞妞照片/001.jpg","slug":"001.jpg","post":"cjhh1ew770004wgw5putvjkq8","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cjhh1ew770004wgw5putvjkq8","category_id":"cjhh1ew7c0007wgw5e9qq6d8d","_id":"cjhh1ew7r000gwgw5qgslseco"},{"post_id":"cjhh1ew7k000awgw51evww2bq","category_id":"cjhh1ew7o000dwgw55fncwh7z","_id":"cjhh1ew7v000lwgw53e813l6w"},{"post_id":"cjhh1ew7m000bwgw5hj2byyz2","category_id":"cjhh1ew7t000iwgw5ohu8dfgg","_id":"cjhh1ew7w000pwgw51ugww4af"},{"post_id":"cjhh1ew7o000fwgw5thcdhwuk","category_id":"cjhh1ew7v000nwgw528j6pnav","_id":"cjhh1ew7z000swgw5q52286v1"},{"post_id":"cjhh21vbk0000dkw51jvfkx5q","category_id":"cjhh2ltb00001dkw5fzycr4oz","_id":"cjhh2ltb10004dkw5antw9wd1"}],"PostTag":[{"post_id":"cjhh1ew770004wgw5putvjkq8","tag_id":"cjhh1ew7e0008wgw51l8j5ur1","_id":"cjhh1ew7o000ewgw5cyzunvda"},{"post_id":"cjhh1ew7a0006wgw55a1o4udb","tag_id":"cjhh1ew7n000cwgw5zdzktgwv","_id":"cjhh1ew7t000jwgw5imuh5aio"},{"post_id":"cjhh1ew7f0009wgw5zz9i7uj6","tag_id":"cjhh1ew7e0008wgw51l8j5ur1","_id":"cjhh1ew7v000mwgw54ehu6c7i"},{"post_id":"cjhh1ew7k000awgw51evww2bq","tag_id":"cjhh1ew7u000kwgw5qgppcvt7","_id":"cjhh1ew7w000qwgw5a1a89ai5"},{"post_id":"cjhh1ew7m000bwgw5hj2byyz2","tag_id":"cjhh1ew7w000owgw5ejvsrwsk","_id":"cjhh1ew7z000twgw5l7ug4xap"},{"post_id":"cjhh1ew7o000fwgw5thcdhwuk","tag_id":"cjhh1ew7w000owgw5ejvsrwsk","_id":"cjhh1ew80000uwgw58mzk7tiq"},{"post_id":"cjhh21vbk0000dkw51jvfkx5q","tag_id":"cjhh2ltb00002dkw51w74ccpu","_id":"cjhh2ltb10003dkw5yr2nh1hm"}],"Tag":[{"name":"妞妞","_id":"cjhh1ew7e0008wgw51l8j5ur1"},{"name":"给自己","_id":"cjhh1ew7n000cwgw5zdzktgwv"},{"name":"反射","_id":"cjhh1ew7u000kwgw5qgppcvt7"},{"name":"设计模式","_id":"cjhh1ew7w000owgw5ejvsrwsk"},{"name":"markdown","_id":"cjhh2ltb00002dkw51w74ccpu"}]}}