{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/猴猴.png","path":"images/猴猴.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"8a96770b864ba61dafbdb9a74ecea69e6311e156","modified":1526629990706},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1526995780884},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1526995780884},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1526995780884},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1526995780884},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1526995780884},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1526995780884},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1526995780884},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1526995780884},{"_id":"themes/next/_config.yml","hash":"2cace697ec3e5fca6805e9c0232a07e83e6af1e2","modified":1526996253005},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1526995780884},{"_id":"themes/next/README.cn.md","hash":"58ffe752bc4b7f0069fcd6304bbc2d5ff7b80f89","modified":1526995780884},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1526995780884},{"_id":"themes/next/README.md","hash":"898213e66d34a46c3cf8446bf693bd50db0d3269","modified":1526995780884},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1526995780892},{"_id":"source/_drafts/draft.md","hash":"b472be5771163e18b109ee34e0cc62ba571bb40d","modified":1526872290586},{"_id":"source/_posts/hello-world.md","hash":"776c768ae176c48bba40e5d9317e6fa921aed0e6","modified":1526995780880},{"_id":"source/_posts/java反射.md","hash":"7edd8eb47dffb5240f1ec0b4f3b519ff9ac3fc28","modified":1526995780880},{"_id":"source/_posts/妞妞照片.md","hash":"56d4e6306426b4fe6b1ead640c770d0fdceca2df","modified":1526889371195},{"_id":"source/_posts/post.md","hash":"1827564f724c94fbd777dc76ef03e58f49143004","modified":1526995780880},{"_id":"source/_posts/我的妞妞.md","hash":"06176ad50febd5268ca2f72f43d2ad2dee7a7e69","modified":1526885811939},{"_id":"source/page/index.md","hash":"d462ca3fc8bb17a0046c26b8e7754526ce756895","modified":1526872276538},{"_id":"source/categories/index.md","hash":"9a642533cf618eb4893369b9d1476d9f7271ec5e","modified":1526871964957},{"_id":"source/_posts/模块模式设计.md","hash":"87b17666e2a9e7717f2f652b81e2d1743964021b","modified":1526995780884},{"_id":"source/_posts/Android中的设计模式.md","hash":"09ff9f0df5f839054907b92a9eb0a8a54a4cd78e","modified":1526892986770},{"_id":"source/tags/index.md","hash":"8db41bfd497c89c30d423df35240018bc13633c0","modified":1526871989544},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1526995780888},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1526995780892},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1526995780892},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1526995780892},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1526995780892},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1526995780892},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1526995780892},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1526995780892},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1526995780884},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1526995780884},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1526995780884},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1526995780884},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1526995780884},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1526995780884},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1526995780884},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1526995780884},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1526995780884},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1526995780884},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1526995780884},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1526995780884},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1526995780888},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1526995780888},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1526995780888},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1526995780888},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1526995780892},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1526995780892},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1526995780920},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1526995780920},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1526995780920},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526867170956},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1526995780888},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1526995780888},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1526995780888},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1526995780888},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1526995780888},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1526995780888},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1526995780888},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1526995780888},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1526995780888},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1526995780888},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1526995780888},{"_id":"themes/next/layout/_macro/post.swig","hash":"55085644167f3e62bae234ef853542168b63bc55","modified":1526995780888},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1526995780888},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1526995780888},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1526995780888},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1526995780888},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1526995780888},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1526995780888},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1526995780888},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1526995780888},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1526995780892},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1526995780892},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1526995780892},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1526995780892},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1526995780892},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1526995780892},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1526995780892},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1526995780892},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1526995780892},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1526995780892},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1526995780892},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1526995780892},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1526995780892},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1526995780904},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1526995780904},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1526995780904},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1526867170957},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1526995780904},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1526995780904},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1526867170957},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1526995780904},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1526995780892},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1526995780904},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1526995780904},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1526995780904},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1526867170961},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1526867170960},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1526995780904},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1526995780904},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1526867170960},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1526867170961},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1526995780904},{"_id":"themes/next/source/images/猴猴.png","hash":"99e91ec406a671b58b952fa44ee3b491027d147c","modified":1526888968804},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1526867170962},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526867170900},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526867170900},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526867170944},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526867170945},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526867170945},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526867170954},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526867170955},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1526995780888},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1526995780888},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1526995780888},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1526995780888},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1526995780888},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1526995780888},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1526995780888},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1526995780888},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1526995780888},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1526995780888},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1526995780888},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1526995780888},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1526995780888},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1526995780888},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1526995780888},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1526995780888},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1526995780888},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1526995780888},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1526995780888},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1526995780888},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1526995780888},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1526995780888},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1526995780888},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1526995780888},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1526995780888},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1526995780888},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1526995780888},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1526995780888},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1526995780888},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1526995780888},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1526995780888},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1526995780888},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1526995780888},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1526995780888},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1526995780892},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1526995780892},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1526995780892},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1526995780892},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1526995780900},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1526995780900},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1526995780900},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1526995780900},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1526995780900},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1526995780900},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1526995780904},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1526995780904},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1526995780904},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1526995780904},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1526995780904},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1526995780904},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1526995780904},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1526995780904},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1526995780904},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1526995780904},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1526995780904},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1526995780904},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1526995780904},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1526995780904},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1526867170977},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1526995780904},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1526995780904},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1526995780908},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1526995780908},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1526995780908},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1526995780908},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1526995780912},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1526995780912},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1526995780916},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1526995780912},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1526995780916},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1526995780908},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1526995780916},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1526995780908},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1526995780908},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1526995780908},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1526867170973},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1526995780908},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1526995780912},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1526995780916},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1526867171009},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1526995780916},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1526867171008},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1526867171009},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1526867171009},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1526867171010},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1526867171010},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1526867171010},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1526867171011},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1526867171011},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1526867171012},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1526995780916},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1526995780916},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1526995780920},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1526995780916},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1526995780916},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1526995780920},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1526867171012},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1526995780920},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1526995780920},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1526995780920},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1526995780920},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1526867171011},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1526867171011},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1526995780912},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1526995780892},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1526995780896},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1526995780900},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1526995780900},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1526995780900},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1526995780900},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1526995780900},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1526995780900},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1526995780900},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1526995780900},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1526995780900},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1526995780900},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1526995780900},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1526995780900},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1526995780900},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1526995780900},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1526995780900},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1526995780900},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1526995780900},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"02fb8fa6b6c252b6bed469539cd057716606a787","modified":1526995780900},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1526995780900},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1526995780900},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1526995780900},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1526995780900},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1526995780900},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1526995780900},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1526995780900},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1526995780900},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1526995780904},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1526995780904},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1526867170979},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1526867170979},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1526867170980},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1526867170980},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1526867170980},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1526867170981},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1526995780908},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1526995780908},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1526995780904},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1526995780908},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1526867170987},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1526995780904},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1526995780908},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1526995780912},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1526995780920},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1526995780912},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1526995780912},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1526995780920},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1526995780904},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1526867171002},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1526867171002},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1526995780920},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1526995780892},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1526995780896},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1526995780896},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1526995780900},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1526995780900},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1526995780900},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1526867170968},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1526867170969},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1526867170969},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1526867170970},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1526867170970},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1526867170981},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1526995780908},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1526995780908},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1526995780908},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1526995780908},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1526867170992},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1526995780908},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1526867170995},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1526867171001},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1526995780908},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1526995780920},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1526995780912},{"_id":"source/_posts/妞妞照片/001.jpg","hash":"5e9c7e8d918739b3aaaa161d4bcaf32021f25a76","modified":1514023942000},{"_id":"public/search.xml","hash":"fed523c66297fa5edb6ed3f3dbc24dcdba9bc161","modified":1526996334539},{"_id":"public/categories/index.html","hash":"fecb526501cb949561a18d2360b2f97fdff4bd49","modified":1526996334542},{"_id":"public/tags/index.html","hash":"ec64555aa46bfcb843b00eeac03ccc530a8b4f77","modified":1526996334542},{"_id":"public/2018/05/21/Android中的设计模式/index.html","hash":"1724a7ef31cc430d49096766c92f5f4ba2fe48ad","modified":1526996334543},{"_id":"public/2018/05/21/模块模式设计/index.html","hash":"4347e6bfc04eaf5f863821ae47ff5d165c4aef4a","modified":1526996334543},{"_id":"public/2018/05/21/java反射/index.html","hash":"80b110d92751cb8115f6e599f1d60fc65a696404","modified":1526996334543},{"_id":"public/2018/05/21/妞妞照片/index.html","hash":"2b6b4365a53a4846c749a15f3a01399e42e1a8cd","modified":1526996334543},{"_id":"public/page/index.html","hash":"106514cb3b661da4277cabc6cf965bc01a37b1cd","modified":1526965094212},{"_id":"public/2018/05/21/我的妞妞/index.html","hash":"3ed9cfab0da2a1030d4ba6896c317b01a9be90e9","modified":1526996334543},{"_id":"public/2018/05/21/post/index.html","hash":"668f5d230c055b5a63d97e7bfed95150fe634369","modified":1526996334543},{"_id":"public/archives/index.html","hash":"9843f1e2cd6828275900f4b4a413faa6a5fbc243","modified":1526996334543},{"_id":"public/archives/2018/index.html","hash":"5148e5fe13d9a908888f82cd1302f1ee1e642f3a","modified":1526996334543},{"_id":"public/archives/2018/05/index.html","hash":"7d2157ab1e2a088cde61bf75c6d7d6d8a2da1c28","modified":1526996334543},{"_id":"public/categories/照片/index.html","hash":"b172d394e6943c3261a9fa6980bb42477a919db1","modified":1526996334544},{"_id":"public/categories/java/index.html","hash":"c35d16f27e06362127e97555afd30da7fcdf150f","modified":1526996334544},{"_id":"public/categories/通用/index.html","hash":"a1bec774d0fabbe9963c0b3aef9765e779cb31a5","modified":1526996334544},{"_id":"public/categories/Android/index.html","hash":"b8b3ffee8de81b918f1d58da1bd15d6564ba2aaa","modified":1526996334544},{"_id":"public/index.html","hash":"51761dc84c06cd24287d0db00505493a9675dea1","modified":1526996334544},{"_id":"public/tags/妞妞/index.html","hash":"7fc051e234117f4988fa2578da4ba95854c473c0","modified":1526996334544},{"_id":"public/tags/给自己/index.html","hash":"899cff7a37e0dcb21d9535e1955af5267bda14e2","modified":1526996334544},{"_id":"public/tags/反射/index.html","hash":"590d038e74761dedec7ae45d939060ff75f99cbf","modified":1526996334544},{"_id":"public/tags/设计模式/index.html","hash":"1fd748bd745afc3cd98363c7ac7dcc0cb2e367d8","modified":1526996334544},{"_id":"public/2018/05/22/hello-world/index.html","hash":"932573e5020967436016d3098bc376fbb4e85895","modified":1526996334543},{"_id":"public/CNAME","hash":"8a96770b864ba61dafbdb9a74ecea69e6311e156","modified":1526954719102},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1526996334550},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1526954719102},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1526996334550},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1526996334550},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1526996334550},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1526996334550},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1526996334550},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1526954719103},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1526996334550},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1526996334550},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1526954719103},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1526996334550},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1526996334550},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1526954719103},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1526996334550},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1526954719103},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1526954719103},{"_id":"public/images/猴猴.png","hash":"99e91ec406a671b58b952fa44ee3b491027d147c","modified":1526954719103},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1526954719104},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1526996334550},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1526996334550},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1526954719737},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1526954719737},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1526954719742},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1526954719742},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1526954719742},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1526954719743},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1526996334550},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1526954719743},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1526954719743},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1526954719743},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1526954719743},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1526954719743},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1526954719743},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1526954719758},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1526954719758},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1526954719765},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1526954719766},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1526954719766},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1526954719766},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1526954719766},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1526954719766},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1526954719766},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1526954719766},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1526954719766},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1526954719766},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1526954719766},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1526954719766},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1526954719766},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1526954719767},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1526954719767},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1526954719767},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1526954719767},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1526954719767},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1526954719767},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1526954719768},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1526954719768},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1526954719768},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1526954719768},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1526954719768},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1526954719768},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1526954719768},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1526954719768},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1526954719768},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1526954719768},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1526954719769},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1526954719769},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1526954719769},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1526954719769},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1526954719769},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1526954719769},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1526954719769},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1526954719769},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1526954719769},{"_id":"public/css/main.css","hash":"044678f37b4238ba3dc7715494f9d42119b9900c","modified":1526996335068},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1526954719769},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1526954719769},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1526954719770},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1526954719770},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1526954719770},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1526954719770},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1526954719770},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1526954719771},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1526954719771},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1526954719771},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1526954719771},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1526954719777},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1526954719777},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1526954719777},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1526954719778},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1526954719778},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1526954719778},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1526954719778},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1526954719778},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1526954719778},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1526954719778},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1526954719778},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1526954719778},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1526954719778},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1526954719778},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1526954719778},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1526954719778},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1526954719778},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1526954719779},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1526954719779},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1526954719779},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1526954719779},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1526954719779},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1526954719780},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1526996335070},{"_id":"public/2018/05/21/妞妞照片/001.jpg","hash":"5e9c7e8d918739b3aaaa161d4bcaf32021f25a76","modified":1526954719822},{"_id":"source/_posts/markdown编辑器.md","hash":"7e865965162d19de9ca4a5c1e9e326fad0716d47","modified":1526959539964},{"_id":"public/categories/编辑器/index.html","hash":"5d64af2b203c605fd0a6aeaca37ede3f1fac3d49","modified":1526996334544},{"_id":"public/tags/markdown/index.html","hash":"afad25638dda9676878c199abf68a381120e896a","modified":1526996334544},{"_id":"public/2018/05/22/markdown编辑器/index.html","hash":"bccb48b3a3bb9466b421a8ed214de8dd439e8edc","modified":1526996334543},{"_id":"public/baidusitemap.xml","hash":"7345475a8577610190f352067f4a12aa4e08e78a","modified":1526996334532},{"_id":"source/schedules/index.md","hash":"9424e36a1955c3ae9a716e0ac3c28208a53bc2eb","modified":1526965383027},{"_id":"source/schedule/index.md","hash":"3cccca6c5146c8a762f1c6c3a5b79b22d3648f4d","modified":1526965636204},{"_id":"public/schedule/index.html","hash":"3ca26c5e6f951274e9f2e0bb64525bbbb6a08034","modified":1526996334543}],"Category":[{"name":"照片","_id":"cjhh1ew7c0007wgw5e9qq6d8d"},{"name":"java","_id":"cjhh1ew7o000dwgw55fncwh7z"},{"name":"通用","_id":"cjhh1ew7t000iwgw5ohu8dfgg"},{"name":"Android","_id":"cjhh1ew7v000nwgw528j6pnav"},{"name":"编辑器","_id":"cjhh2ltb00001dkw5fzycr4oz"}],"Data":[],"Page":[{"title":"所有分类","date":"2018-05-21T03:02:24.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 所有分类\ndate: 2018-05-21 11:02:24\ntype: \"categories\"\n---\n","updated":"2018-05-21T03:06:04.957Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjhh1ew750003wgw55gqfu3ef","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"所有标签","date":"2018-05-21T03:01:30.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 所有标签\ndate: 2018-05-21 11:01:30\ntype: \"tags\"\n---\n","updated":"2018-05-21T03:06:29.544Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjhh1ew780005wgw5wsng5pqz","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"所有备忘录","date":"2018-05-21T03:01:30.000Z","type":"schedule","_content":"","source":"schedule/index.md","raw":"---\ntitle: 所有备忘录\ndate: 2018-05-21 11:01:30\ntype: \"schedule\"\n---\n","updated":"2018-05-22T05:07:16.204Z","path":"schedule/index.html","comments":1,"layout":"page","_id":"cjhh7x3eh0000iww551gk5uje","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hello World","_content":"既然是程序员，第一个文章当然就是一个：HELLO WORLD!!!\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\n既然是程序员，第一个文章当然就是一个：HELLO WORLD!!!\n","slug":"hello-world","published":1,"date":"2018-05-22T13:29:40.880Z","updated":"2018-05-22T13:29:40.880Z","_id":"cjhh1ew6p0000wgw5zbxqsaxk","comments":1,"layout":"post","photos":[],"link":"","content":"<p>既然是程序员，第一个文章当然就是一个：HELLO WORLD!!!</p>\n","site":{"data":{}},"excerpt":"","more":"<p>既然是程序员，第一个文章当然就是一个：HELLO WORLD!!!</p>\n"},{"title":"draft","_content":"","source":"_drafts/draft.md","raw":"---\ntitle: draft\ntags:\n---\n","slug":"draft","published":0,"date":"2018-05-22T01:56:54.877Z","updated":"2018-05-21T03:11:30.586Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhh1ew730002wgw5z9rnpmoh","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"妞妞照片","date":"2018-05-21T07:08:38.000Z","_content":"{% asset_img 001.jpg 这个虎玩意就是妞妞 %}\n\n","source":"_posts/妞妞照片.md","raw":"---\ntitle: 妞妞照片\ndate: 2018-05-21 15:08:38\ntags: \"妞妞\"\ncategories: \"照片\"\n---\n{% asset_img 001.jpg 这个虎玩意就是妞妞 %}\n\n","slug":"妞妞照片","published":1,"updated":"2018-05-21T07:56:11.195Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhh1ew770004wgw5putvjkq8","content":"<img src=\"/2018/05/21/妞妞照片/001.jpg\" title=\"这个虎玩意就是妞妞\">\n","site":{"data":{}},"excerpt":"","more":"<img src=\"/2018/05/21/妞妞照片/001.jpg\" title=\"这个虎玩意就是妞妞\">\n"},{"title":"菜园子博客开始的地方","date":"2018-05-21T04:49:01.000Z","_content":"> 打今天开始打理自己菜园子，菜园子有三块地，笔记、生活照片、记事本\n没啥说的，希望能够坚持下去，早点给自己定个目标吧。","source":"_posts/post.md","raw":"---\ntitle: 菜园子博客开始的地方\ndate: 2018-05-21 12:49:01\ntags: \"给自己\"\n---\n> 打今天开始打理自己菜园子，菜园子有三块地，笔记、生活照片、记事本\n没啥说的，希望能够坚持下去，早点给自己定个目标吧。","slug":"post","published":1,"updated":"2018-05-22T13:29:40.880Z","_id":"cjhh1ew7a0006wgw55a1o4udb","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>打今天开始打理自己菜园子，菜园子有三块地，笔记、生活照片、记事本<br>没啥说的，希望能够坚持下去，早点给自己定个目标吧。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>打今天开始打理自己菜园子，菜园子有三块地，笔记、生活照片、记事本<br>没啥说的，希望能够坚持下去，早点给自己定个目标吧。</p>\n</blockquote>\n"},{"title":"我的妞妞","date":"2018-05-21T05:29:47.000Z","_content":"\t我的妞妞长的好看！！！美！！！\n","source":"_posts/我的妞妞.md","raw":"---\ntitle: 我的妞妞\ndate: 2018-05-21 13:29:47\ntags: \"妞妞\"\n---\n\t我的妞妞长的好看！！！美！！！\n","slug":"我的妞妞","published":1,"updated":"2018-05-21T06:56:51.939Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhh1ew7f0009wgw5zz9i7uj6","content":"<pre><code>我的妞妞长的好看！！！美！！！\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<pre><code>我的妞妞长的好看！！！美！！！\n</code></pre>"},{"title":"java反射","date":"2018-05-21T08:04:46.000Z","_content":"### java反射实现方式 ###\n1. 实例化要反射的Class对象\nClass.forName(类名全路径); //通过Class的静态方法； \n对象.getClass() //通过对象.getClass方法；\nint.class //基本数据类型及基本数据类型的封装了，例如Integer；\n2. 获取父类\n Class<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法\n        Class<?> superclass = clazz.getSuperclass();\n3. 获取实现接口\n Class<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法\n        Class<?>[] interfaces = clazz.getInterfaces()\n4. 获取指定参数构造函数及实例化\nClass<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法\n        Constructor<?> constructor = clazz.getConstructor(Class<?>  ... class);//获取公共的\n        Constructor<?> constructor = clazz.getDeclaredConstructor()//获取私有的\n        constructor.newInstance(Object args);\n5. 获取所有构造函数及构造参数的类型\n Class<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法\n        Constructor<?>[] constructors = clazz.getConstructors();//公共的\n        Constructor<?>[] constructors = clazz.getDeclaredConstructors()//包括私有的\n\n         for (int i = 0; i < constructors.length; i++) {\n            Class<?> clazzs[] = constructors[i].getParameterTypes();//获取类型\n            System.out.print(\"constructors[\" + i + \"] (\");\n            for (int j = 0; j < clazzs.length; j++) {\n                if (j == clazzs.length - 1)\n                    System.out.print(clazzs[j].getName());\n                else\n                    System.out.print(clazzs[j].getName() + \",\");\n            }\n            System.out.println(\")\");\n        }\n6. 通过无参实例化对象\n Class<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法          \n        class.newInstance();\n7. 获取字段，修改字段\n Class<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法          \n\n        Field field = clazz.getField(String name);//获取公共字段\n        Field field = clazz.getDeclaredField(String name);//获取私有公共字段\n        Field[] field = clazz.getFields();//获取所有公共字段\n        Field[] field = clazz.getDeclaredFields();//获取包括私有所有字段\n\n        Field field = clazz.getDeclaredField(\"heihei\");\n        field.setAccessible(true);//设置java取消访问检查，也就是说如果是私有的也可以访问,\n        field.set(obj, \"Java反射机制\");\n8. 获取方法,运行方法\nClass<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法          \n\n        clazz.getMethod(String name ,Class<?> ... parame);//获取公共指定方法\n        clazz.getDeclaredMethod(String name ,Class<?> ... parame)//获取私有指定方法\n        clazz.getMethods()//获取公共所有方法\n        clazz.getDeclaredMethods();//获取包括私有全部方法\n\n        Method method = clazz.getMethod(\"add\");\n        method.invoke(clazz.newInstance());\n\n        method = clazz.getMethod(\"getInfo\", int.class, String.class);\n        method.setAccessible(true)//设置java取消访问检查，也就是说如果是私有的也可以访问,\n        method.invoke(clazz.newInstance(), 20, \"张三\");\n9. 获取数组或者list中的类型,如果不是数组或集合返回null\nClass<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法  \n        Class<?> componentType = clazz.getComponentType();\n","source":"_posts/java反射.md","raw":"---\ntitle: java反射\ndate: 2018-05-21 16:04:46\ntags: \"反射\"\ncategories: \"java\"\n---\n### java反射实现方式 ###\n1. 实例化要反射的Class对象\nClass.forName(类名全路径); //通过Class的静态方法； \n对象.getClass() //通过对象.getClass方法；\nint.class //基本数据类型及基本数据类型的封装了，例如Integer；\n2. 获取父类\n Class<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法\n        Class<?> superclass = clazz.getSuperclass();\n3. 获取实现接口\n Class<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法\n        Class<?>[] interfaces = clazz.getInterfaces()\n4. 获取指定参数构造函数及实例化\nClass<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法\n        Constructor<?> constructor = clazz.getConstructor(Class<?>  ... class);//获取公共的\n        Constructor<?> constructor = clazz.getDeclaredConstructor()//获取私有的\n        constructor.newInstance(Object args);\n5. 获取所有构造函数及构造参数的类型\n Class<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法\n        Constructor<?>[] constructors = clazz.getConstructors();//公共的\n        Constructor<?>[] constructors = clazz.getDeclaredConstructors()//包括私有的\n\n         for (int i = 0; i < constructors.length; i++) {\n            Class<?> clazzs[] = constructors[i].getParameterTypes();//获取类型\n            System.out.print(\"constructors[\" + i + \"] (\");\n            for (int j = 0; j < clazzs.length; j++) {\n                if (j == clazzs.length - 1)\n                    System.out.print(clazzs[j].getName());\n                else\n                    System.out.print(clazzs[j].getName() + \",\");\n            }\n            System.out.println(\")\");\n        }\n6. 通过无参实例化对象\n Class<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法          \n        class.newInstance();\n7. 获取字段，修改字段\n Class<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法          \n\n        Field field = clazz.getField(String name);//获取公共字段\n        Field field = clazz.getDeclaredField(String name);//获取私有公共字段\n        Field[] field = clazz.getFields();//获取所有公共字段\n        Field[] field = clazz.getDeclaredFields();//获取包括私有所有字段\n\n        Field field = clazz.getDeclaredField(\"heihei\");\n        field.setAccessible(true);//设置java取消访问检查，也就是说如果是私有的也可以访问,\n        field.set(obj, \"Java反射机制\");\n8. 获取方法,运行方法\nClass<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法          \n\n        clazz.getMethod(String name ,Class<?> ... parame);//获取公共指定方法\n        clazz.getDeclaredMethod(String name ,Class<?> ... parame)//获取私有指定方法\n        clazz.getMethods()//获取公共所有方法\n        clazz.getDeclaredMethods();//获取包括私有全部方法\n\n        Method method = clazz.getMethod(\"add\");\n        method.invoke(clazz.newInstance());\n\n        method = clazz.getMethod(\"getInfo\", int.class, String.class);\n        method.setAccessible(true)//设置java取消访问检查，也就是说如果是私有的也可以访问,\n        method.invoke(clazz.newInstance(), 20, \"张三\");\n9. 获取数组或者list中的类型,如果不是数组或集合返回null\nClass<?> clazz  = Class.forName(类名全路径); //通过Class的静态方法  \n        Class<?> componentType = clazz.getComponentType();\n","slug":"java反射","published":1,"updated":"2018-05-22T13:29:40.880Z","_id":"cjhh1ew7k000awgw51evww2bq","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"java反射实现方式\"><a href=\"#java反射实现方式\" class=\"headerlink\" title=\"java反射实现方式\"></a>java反射实现方式</h3><ol>\n<li>实例化要反射的Class对象<br>Class.forName(类名全路径); //通过Class的静态方法；<br>对象.getClass() //通过对象.getClass方法；<br>int.class //基本数据类型及基本数据类型的封装了，例如Integer；</li>\n<li>获取父类<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法<pre><code>Class&lt;?&gt; superclass = clazz.getSuperclass();\n</code></pre></li>\n<li>获取实现接口<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法<pre><code>Class&lt;?&gt;[] interfaces = clazz.getInterfaces()\n</code></pre></li>\n<li>获取指定参数构造函数及实例化<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法<pre><code>Constructor&lt;?&gt; constructor = clazz.getConstructor(Class&lt;?&gt;  ... class);//获取公共的\nConstructor&lt;?&gt; constructor = clazz.getDeclaredConstructor()//获取私有的\nconstructor.newInstance(Object args);\n</code></pre></li>\n<li><p>获取所有构造函数及构造参数的类型<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法</p>\n<pre><code>Constructor&lt;?&gt;[] constructors = clazz.getConstructors();//公共的\nConstructor&lt;?&gt;[] constructors = clazz.getDeclaredConstructors()//包括私有的\n\n for (int i = 0; i &lt; constructors.length; i++) {\n    Class&lt;?&gt; clazzs[] = constructors[i].getParameterTypes();//获取类型\n    System.out.print(&quot;constructors[&quot; + i + &quot;] (&quot;);\n    for (int j = 0; j &lt; clazzs.length; j++) {\n        if (j == clazzs.length - 1)\n            System.out.print(clazzs[j].getName());\n        else\n            System.out.print(clazzs[j].getName() + &quot;,&quot;);\n    }\n    System.out.println(&quot;)&quot;);\n}\n</code></pre></li>\n<li>通过无参实例化对象<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法          <pre><code>class.newInstance();\n</code></pre></li>\n<li><p>获取字段，修改字段<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法          </p>\n<pre><code>Field field = clazz.getField(String name);//获取公共字段\nField field = clazz.getDeclaredField(String name);//获取私有公共字段\nField[] field = clazz.getFields();//获取所有公共字段\nField[] field = clazz.getDeclaredFields();//获取包括私有所有字段\n\nField field = clazz.getDeclaredField(&quot;heihei&quot;);\nfield.setAccessible(true);//设置java取消访问检查，也就是说如果是私有的也可以访问,\nfield.set(obj, &quot;Java反射机制&quot;);\n</code></pre></li>\n<li><p>获取方法,运行方法<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法          </p>\n<pre><code>clazz.getMethod(String name ,Class&lt;?&gt; ... parame);//获取公共指定方法\nclazz.getDeclaredMethod(String name ,Class&lt;?&gt; ... parame)//获取私有指定方法\nclazz.getMethods()//获取公共所有方法\nclazz.getDeclaredMethods();//获取包括私有全部方法\n\nMethod method = clazz.getMethod(&quot;add&quot;);\nmethod.invoke(clazz.newInstance());\n\nmethod = clazz.getMethod(&quot;getInfo&quot;, int.class, String.class);\nmethod.setAccessible(true)//设置java取消访问检查，也就是说如果是私有的也可以访问,\nmethod.invoke(clazz.newInstance(), 20, &quot;张三&quot;);\n</code></pre></li>\n<li>获取数组或者list中的类型,如果不是数组或集合返回null<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法  <pre><code>Class&lt;?&gt; componentType = clazz.getComponentType();\n</code></pre></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"java反射实现方式\"><a href=\"#java反射实现方式\" class=\"headerlink\" title=\"java反射实现方式\"></a>java反射实现方式</h3><ol>\n<li>实例化要反射的Class对象<br>Class.forName(类名全路径); //通过Class的静态方法；<br>对象.getClass() //通过对象.getClass方法；<br>int.class //基本数据类型及基本数据类型的封装了，例如Integer；</li>\n<li>获取父类<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法<pre><code>Class&lt;?&gt; superclass = clazz.getSuperclass();\n</code></pre></li>\n<li>获取实现接口<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法<pre><code>Class&lt;?&gt;[] interfaces = clazz.getInterfaces()\n</code></pre></li>\n<li>获取指定参数构造函数及实例化<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法<pre><code>Constructor&lt;?&gt; constructor = clazz.getConstructor(Class&lt;?&gt;  ... class);//获取公共的\nConstructor&lt;?&gt; constructor = clazz.getDeclaredConstructor()//获取私有的\nconstructor.newInstance(Object args);\n</code></pre></li>\n<li><p>获取所有构造函数及构造参数的类型<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法</p>\n<pre><code>Constructor&lt;?&gt;[] constructors = clazz.getConstructors();//公共的\nConstructor&lt;?&gt;[] constructors = clazz.getDeclaredConstructors()//包括私有的\n\n for (int i = 0; i &lt; constructors.length; i++) {\n    Class&lt;?&gt; clazzs[] = constructors[i].getParameterTypes();//获取类型\n    System.out.print(&quot;constructors[&quot; + i + &quot;] (&quot;);\n    for (int j = 0; j &lt; clazzs.length; j++) {\n        if (j == clazzs.length - 1)\n            System.out.print(clazzs[j].getName());\n        else\n            System.out.print(clazzs[j].getName() + &quot;,&quot;);\n    }\n    System.out.println(&quot;)&quot;);\n}\n</code></pre></li>\n<li>通过无参实例化对象<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法          <pre><code>class.newInstance();\n</code></pre></li>\n<li><p>获取字段，修改字段<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法          </p>\n<pre><code>Field field = clazz.getField(String name);//获取公共字段\nField field = clazz.getDeclaredField(String name);//获取私有公共字段\nField[] field = clazz.getFields();//获取所有公共字段\nField[] field = clazz.getDeclaredFields();//获取包括私有所有字段\n\nField field = clazz.getDeclaredField(&quot;heihei&quot;);\nfield.setAccessible(true);//设置java取消访问检查，也就是说如果是私有的也可以访问,\nfield.set(obj, &quot;Java反射机制&quot;);\n</code></pre></li>\n<li><p>获取方法,运行方法<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法          </p>\n<pre><code>clazz.getMethod(String name ,Class&lt;?&gt; ... parame);//获取公共指定方法\nclazz.getDeclaredMethod(String name ,Class&lt;?&gt; ... parame)//获取私有指定方法\nclazz.getMethods()//获取公共所有方法\nclazz.getDeclaredMethods();//获取包括私有全部方法\n\nMethod method = clazz.getMethod(&quot;add&quot;);\nmethod.invoke(clazz.newInstance());\n\nmethod = clazz.getMethod(&quot;getInfo&quot;, int.class, String.class);\nmethod.setAccessible(true)//设置java取消访问检查，也就是说如果是私有的也可以访问,\nmethod.invoke(clazz.newInstance(), 20, &quot;张三&quot;);\n</code></pre></li>\n<li>获取数组或者list中的类型,如果不是数组或集合返回null<br>Class&lt;?&gt; clazz  = Class.forName(类名全路径); //通过Class的静态方法  <pre><code>Class&lt;?&gt; componentType = clazz.getComponentType();\n</code></pre></li>\n</ol>\n"},{"title":"模块模式设计","date":"2018-05-21T08:22:13.000Z","_content":"## 什么是设计模式\n1. 定义\n基本定义：设计模式（Design pattern）是一套被反复使用的代码设计经验的总结。使用设计模式的目的是为了可重用代码、让代码更容易被他人理解。设计模式是是软件工程的基石脉络，如大厦的结构一样\nDesign pattern的四大要素：模式名称（Name），问题（Question），解决方案（Solution），效果（Efftive）。\nOO（面向对象）的六大原则：单一职责原则，开闭原则，里氏替换原则，依赖倒置原则，接口隔离原则，迪米特原则。\n\t\t\t单一职责原则：一个类中应该是一组相关性很高的函数，数据的封装。两个完全不一样的功能就不应该放在一个类中。\n\t\t\t开闭原则：对修改封闭，对扩展放开。\n\t\t\t里氏替换原则：抽象和继承；所有引用基类的地方必须能透明的使用其子类的对象。\n\t\t\t依赖倒置原则：抽象不应该依赖细节，细节应该依赖抽象。\n\t\t\t接口隔离原则：将大接口改成多个小接口。\n\t\t\t迪米特原则：也称为最少知识原则，一个对象应该对另一个对象有最少的了解。\n2. 分类\n设计模式分为三种类型：\n\t\t创建型模式5种：单例模式，抽象工厂模式，工厂模式，原型模式，建造者模式。（口诀：单原建造者，东西二厂）\n\t\t结构型模式7种：适配器模式，桥接模式，装饰模式，组合模式，外观模式，享元模式，代理模式。（口诀：一器一桥一元一代理；装饰组合外观）\n\t\t行为型模式11种：观察者模式，中介者模式，访问者模式，解释器模式，迭代器模式，备忘录模式，责任链模式，状态模式，策略模式，命令模式，模板模式。（口诀：三者两器、一录一链一模板，状态策略命令）\n## 功能模块设计原则 ##\n1. 单一职责原则（Single Responsibility Principle - SRP）\n\t\t原文：There should never be more than one reason for a class to change.\n\t\t译文：永远不应该有多于一个原因来改变某个类。\n\t\t理解：对于一个类而言，应该仅有一个引起它变化的原因。说白了就是，不同的类具备不同的职责，各施其责。这就好比一个团队，大家分工协作，互不影响，各做各的事情。\n\t\t应用：当我们做系统设计时，如果发现有一个类拥有了两种的职责，那就问自己一个问题：可以将这个类分成两个类吗？如果真的有必要，那就分吧。千万不要让一个类干的事情太多！\n2. 开放封闭原则（Open Closed Principle - OCP）\n\t\t原文：Software entities like classes, modules and functions should be open for extension but closed for modifications.\n\t\t译文：软件实体，如：类、模块与函数，对于扩展应该是开放的，但对于修改应该是封闭的。\n\t\t理解：简言之，对扩展开放，对修改封闭。换句话说，可以去扩展类，但不要去修改类。\n\t\t应用：当需求有改动，要修改代码了，此时您要做的是，尽量用继承或组合的方式来扩展类的功能，而不是直接修改类的代码。当然，如果能够确保对整体架构不会产生任何影响，那么也没必要搞得那么复杂了，直接改这个类吧。\n3. 里氏替换原则（Liskov Substitution Principle - LSP）\n\t\t原文：Functions that use pointers or references to base classes must be able to use objects of derived classes without knowing it.\n\t\t译文：使用基类的指针或引用的函数，必须是在不知情的情况下，能够使用派生类的对象。\n\t\t理解：父类能够替换子类，但子类不一定能替换父类。也就是说，在代码中可以将父类全部替换为子类，程序不会报错，也不会在运行时出现任何异常，但反过来却不一定成立。\n\t\t应用：在继承类时，务必重写（Override）父类中所有的方法，尤其需要注意父类的 protected 方法（它们往往是让您重写的），子类尽量不要暴露自己的 public 方法供外界调用。\n4. 最少知识原则（Least Knowledge Principle - LKP）\n\t\t原文：Only talk to you immediate friends.\n\t\t译文：只与你最直接的朋友交流。\n\t\t理解：尽量减少对象之间的交互，从而减小类之间的耦合。简言之，一定要做到：低耦合，高内聚。\n\t\t应用：在做系统设计时，不要让一个类依赖于太多的其他类，需尽量减小依赖关系，否则，您死都不知道自己怎么死的。\n5. 接口隔离原则（Interface Segregation Principle - ISP）\n\t\t原文：The dependency of one class to another one should depend on the smallest possible interface.\n\t\t译文：一个类与另一个类之间的依赖性，应该依赖于尽可能小的接口。、理解：不要对外暴露没有实际意义的接口。也就是说，接口是给别人调用的，那就不要去为难别人了，尽可能保证接口的实用性吧。她好，我也好。\n\t\t应用：当需要对外暴露接口时，需要再三斟酌，如果真的没有必要对外提供的，就删了吧。一旦您提供了，就意味着，您将来要多做一件事情，何苦要给自己找事做呢。\n6. 依赖倒置原则（Dependence Inversion Principle - DIP）\n\t\t原文：High level modules should not depends upon low level modules. Both should depend upon abstractions. Abstractions should not depend upon details. Details should depend upon abstractions.\n\t\t译文：高层模块不应该依赖于低层模块，它们应该依赖于抽象。抽象不应该依赖于细节，细节应该依赖于抽象。\n\t\t理解：应该面向接口编程，不应该面向实现类编程。面向实现类编程，相当于就是论事，那是正向依赖（正常人思维）；面向接口编程，相当于通过事物表象来看本质，那是反向依赖，即依赖倒置（程序员思维）。\n\t\t应用：并不是说，所有的类都要有一个对应的接口，而是说，如果有接口，那就尽量使用接口来编程吧。\n\t\t------>------>------>------>------>------>------>\n\t\t将以上六大原则的英文首字母拼在一起就是 SOLID（稳定的），所以也称之为 SOLID 原则。只有满足了这六大原则，才能设计出稳定的软件架构！但它们毕竟只是原则，只是四人帮给我们的建议，有些时候我们还是要学会灵活应变，千万不要生搬硬套，否则只会把简单问题复杂化\n补充设计原则\n\t1. 组合/聚合复用原则（Composition/Aggregation Reuse Principle - CARP）\n\t\t\t当要扩展类的功能时，优先考虑使用组合，而不是继承。这条原则在 23 种经典设计模式中频繁使用，如：代理模式、装饰模式、适配器模式等。可见江湖地位非常之高！\n\t2. 无环依赖原则（Acyclic Dependencies Principle - ADP）\n\t\t\t当 A 模块依赖于 B 模块，B 模块依赖于 C 模块，C 依赖于 A 模块，此时将出现循环依赖。在设计中应该避免这个问题，可通过引入“中介者模式”解决该问题。\n\t3. 共同封装原则（Common Closure Principle - CCP）\n\t\t\t应该将易变的类放在同一个包里，将变化隔离出来。该原则是“开放-封闭原则”的延生。\n\t4. 共同重用原则（Common Reuse Principle - CRP）\n\t\t\t如果重用了包中的一个类，那么也就相当于重用了包中的所有类，我们要尽可能减小包的大小。\n\t5. 好莱坞原则（Hollywood Principle - HP）\n\t\t\t好莱坞明星的经纪人一般都很忙，他们不想被打扰，往往会说：Don't call me, I'll call you. 翻译为：不要联系我，我会联系你。对应于软件设计而言，最著名的就是“控制反转”（或称为“依赖注入”），我们不需要在代码中主动的创建对象，而是由容器帮我们来创建并管理这些对象。\n\n其它设计原则\n1. 不要重复你自己（Don't repeat yourself - DRY）\n\t\t\t不要让重复的代码到处都是，要让它们足够的重用，所以要尽可能地封装。\n2. 保持它简单与傻瓜（Keep it simple and stupid - KISS）\n\t\t\t不要让系统变得复杂，界面简洁，功能实用，操作方便，要让它足够的简单，足够的傻瓜。\n3. 高内聚与低耦合（High Cohesion and Low Coupling - HCLC）\n\t\t\t模块内部需要做到内聚度高，模块之间需要做到耦合度低。\n4. 惯例优于配置（Convention over Configuration - COC）\n\t\t\t尽量让惯例来减少配置，这样才能提高开发效率，尽量做到“零配置”。很多开发框架都是这样做的。\n5. 命令查询分离（Command Query Separation - CQS）\n\t\t\t在定义接口时，要做到哪些是命令，哪些是查询，要将它们分离，而不要揉到一起。\n6. 关注点分离（Separation of Concerns - SOC）\n\t\t\t将一个复杂的问题分离为多个简单的问题，然后逐个解决这些简单的问题，那么这个复杂的问题就解决了。难就难在如何进行分离。\n7. 契约式设计（Design by Contract - DBC）\n\t\t\t模块或系统之间的交互，都是基于契约（接口或抽象）的，而不要依赖于具体实现。该原则建议我们要面向契约编程。\n8. 你不需要它（You aren't gonna need it - YAGNI）\n\t\t\t不要一开始就把系统设计得非常复杂，不要陷入“过度设计”的深渊。应该让系统足够的简单，而却又不失扩展性，这是其中的难点。","source":"_posts/模块模式设计.md","raw":"---\ntitle: 模块模式设计\ndate: 2018-05-21 16:22:13\ntags: \"设计模式\"\ncategories: \"通用\"\n---\n## 什么是设计模式\n1. 定义\n基本定义：设计模式（Design pattern）是一套被反复使用的代码设计经验的总结。使用设计模式的目的是为了可重用代码、让代码更容易被他人理解。设计模式是是软件工程的基石脉络，如大厦的结构一样\nDesign pattern的四大要素：模式名称（Name），问题（Question），解决方案（Solution），效果（Efftive）。\nOO（面向对象）的六大原则：单一职责原则，开闭原则，里氏替换原则，依赖倒置原则，接口隔离原则，迪米特原则。\n\t\t\t单一职责原则：一个类中应该是一组相关性很高的函数，数据的封装。两个完全不一样的功能就不应该放在一个类中。\n\t\t\t开闭原则：对修改封闭，对扩展放开。\n\t\t\t里氏替换原则：抽象和继承；所有引用基类的地方必须能透明的使用其子类的对象。\n\t\t\t依赖倒置原则：抽象不应该依赖细节，细节应该依赖抽象。\n\t\t\t接口隔离原则：将大接口改成多个小接口。\n\t\t\t迪米特原则：也称为最少知识原则，一个对象应该对另一个对象有最少的了解。\n2. 分类\n设计模式分为三种类型：\n\t\t创建型模式5种：单例模式，抽象工厂模式，工厂模式，原型模式，建造者模式。（口诀：单原建造者，东西二厂）\n\t\t结构型模式7种：适配器模式，桥接模式，装饰模式，组合模式，外观模式，享元模式，代理模式。（口诀：一器一桥一元一代理；装饰组合外观）\n\t\t行为型模式11种：观察者模式，中介者模式，访问者模式，解释器模式，迭代器模式，备忘录模式，责任链模式，状态模式，策略模式，命令模式，模板模式。（口诀：三者两器、一录一链一模板，状态策略命令）\n## 功能模块设计原则 ##\n1. 单一职责原则（Single Responsibility Principle - SRP）\n\t\t原文：There should never be more than one reason for a class to change.\n\t\t译文：永远不应该有多于一个原因来改变某个类。\n\t\t理解：对于一个类而言，应该仅有一个引起它变化的原因。说白了就是，不同的类具备不同的职责，各施其责。这就好比一个团队，大家分工协作，互不影响，各做各的事情。\n\t\t应用：当我们做系统设计时，如果发现有一个类拥有了两种的职责，那就问自己一个问题：可以将这个类分成两个类吗？如果真的有必要，那就分吧。千万不要让一个类干的事情太多！\n2. 开放封闭原则（Open Closed Principle - OCP）\n\t\t原文：Software entities like classes, modules and functions should be open for extension but closed for modifications.\n\t\t译文：软件实体，如：类、模块与函数，对于扩展应该是开放的，但对于修改应该是封闭的。\n\t\t理解：简言之，对扩展开放，对修改封闭。换句话说，可以去扩展类，但不要去修改类。\n\t\t应用：当需求有改动，要修改代码了，此时您要做的是，尽量用继承或组合的方式来扩展类的功能，而不是直接修改类的代码。当然，如果能够确保对整体架构不会产生任何影响，那么也没必要搞得那么复杂了，直接改这个类吧。\n3. 里氏替换原则（Liskov Substitution Principle - LSP）\n\t\t原文：Functions that use pointers or references to base classes must be able to use objects of derived classes without knowing it.\n\t\t译文：使用基类的指针或引用的函数，必须是在不知情的情况下，能够使用派生类的对象。\n\t\t理解：父类能够替换子类，但子类不一定能替换父类。也就是说，在代码中可以将父类全部替换为子类，程序不会报错，也不会在运行时出现任何异常，但反过来却不一定成立。\n\t\t应用：在继承类时，务必重写（Override）父类中所有的方法，尤其需要注意父类的 protected 方法（它们往往是让您重写的），子类尽量不要暴露自己的 public 方法供外界调用。\n4. 最少知识原则（Least Knowledge Principle - LKP）\n\t\t原文：Only talk to you immediate friends.\n\t\t译文：只与你最直接的朋友交流。\n\t\t理解：尽量减少对象之间的交互，从而减小类之间的耦合。简言之，一定要做到：低耦合，高内聚。\n\t\t应用：在做系统设计时，不要让一个类依赖于太多的其他类，需尽量减小依赖关系，否则，您死都不知道自己怎么死的。\n5. 接口隔离原则（Interface Segregation Principle - ISP）\n\t\t原文：The dependency of one class to another one should depend on the smallest possible interface.\n\t\t译文：一个类与另一个类之间的依赖性，应该依赖于尽可能小的接口。、理解：不要对外暴露没有实际意义的接口。也就是说，接口是给别人调用的，那就不要去为难别人了，尽可能保证接口的实用性吧。她好，我也好。\n\t\t应用：当需要对外暴露接口时，需要再三斟酌，如果真的没有必要对外提供的，就删了吧。一旦您提供了，就意味着，您将来要多做一件事情，何苦要给自己找事做呢。\n6. 依赖倒置原则（Dependence Inversion Principle - DIP）\n\t\t原文：High level modules should not depends upon low level modules. Both should depend upon abstractions. Abstractions should not depend upon details. Details should depend upon abstractions.\n\t\t译文：高层模块不应该依赖于低层模块，它们应该依赖于抽象。抽象不应该依赖于细节，细节应该依赖于抽象。\n\t\t理解：应该面向接口编程，不应该面向实现类编程。面向实现类编程，相当于就是论事，那是正向依赖（正常人思维）；面向接口编程，相当于通过事物表象来看本质，那是反向依赖，即依赖倒置（程序员思维）。\n\t\t应用：并不是说，所有的类都要有一个对应的接口，而是说，如果有接口，那就尽量使用接口来编程吧。\n\t\t------>------>------>------>------>------>------>\n\t\t将以上六大原则的英文首字母拼在一起就是 SOLID（稳定的），所以也称之为 SOLID 原则。只有满足了这六大原则，才能设计出稳定的软件架构！但它们毕竟只是原则，只是四人帮给我们的建议，有些时候我们还是要学会灵活应变，千万不要生搬硬套，否则只会把简单问题复杂化\n补充设计原则\n\t1. 组合/聚合复用原则（Composition/Aggregation Reuse Principle - CARP）\n\t\t\t当要扩展类的功能时，优先考虑使用组合，而不是继承。这条原则在 23 种经典设计模式中频繁使用，如：代理模式、装饰模式、适配器模式等。可见江湖地位非常之高！\n\t2. 无环依赖原则（Acyclic Dependencies Principle - ADP）\n\t\t\t当 A 模块依赖于 B 模块，B 模块依赖于 C 模块，C 依赖于 A 模块，此时将出现循环依赖。在设计中应该避免这个问题，可通过引入“中介者模式”解决该问题。\n\t3. 共同封装原则（Common Closure Principle - CCP）\n\t\t\t应该将易变的类放在同一个包里，将变化隔离出来。该原则是“开放-封闭原则”的延生。\n\t4. 共同重用原则（Common Reuse Principle - CRP）\n\t\t\t如果重用了包中的一个类，那么也就相当于重用了包中的所有类，我们要尽可能减小包的大小。\n\t5. 好莱坞原则（Hollywood Principle - HP）\n\t\t\t好莱坞明星的经纪人一般都很忙，他们不想被打扰，往往会说：Don't call me, I'll call you. 翻译为：不要联系我，我会联系你。对应于软件设计而言，最著名的就是“控制反转”（或称为“依赖注入”），我们不需要在代码中主动的创建对象，而是由容器帮我们来创建并管理这些对象。\n\n其它设计原则\n1. 不要重复你自己（Don't repeat yourself - DRY）\n\t\t\t不要让重复的代码到处都是，要让它们足够的重用，所以要尽可能地封装。\n2. 保持它简单与傻瓜（Keep it simple and stupid - KISS）\n\t\t\t不要让系统变得复杂，界面简洁，功能实用，操作方便，要让它足够的简单，足够的傻瓜。\n3. 高内聚与低耦合（High Cohesion and Low Coupling - HCLC）\n\t\t\t模块内部需要做到内聚度高，模块之间需要做到耦合度低。\n4. 惯例优于配置（Convention over Configuration - COC）\n\t\t\t尽量让惯例来减少配置，这样才能提高开发效率，尽量做到“零配置”。很多开发框架都是这样做的。\n5. 命令查询分离（Command Query Separation - CQS）\n\t\t\t在定义接口时，要做到哪些是命令，哪些是查询，要将它们分离，而不要揉到一起。\n6. 关注点分离（Separation of Concerns - SOC）\n\t\t\t将一个复杂的问题分离为多个简单的问题，然后逐个解决这些简单的问题，那么这个复杂的问题就解决了。难就难在如何进行分离。\n7. 契约式设计（Design by Contract - DBC）\n\t\t\t模块或系统之间的交互，都是基于契约（接口或抽象）的，而不要依赖于具体实现。该原则建议我们要面向契约编程。\n8. 你不需要它（You aren't gonna need it - YAGNI）\n\t\t\t不要一开始就把系统设计得非常复杂，不要陷入“过度设计”的深渊。应该让系统足够的简单，而却又不失扩展性，这是其中的难点。","slug":"模块模式设计","published":1,"updated":"2018-05-22T13:29:40.884Z","_id":"cjhh1ew7m000bwgw5hj2byyz2","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"什么是设计模式\"><a href=\"#什么是设计模式\" class=\"headerlink\" title=\"什么是设计模式\"></a>什么是设计模式</h2><ol>\n<li>定义<br>基本定义：设计模式（Design pattern）是一套被反复使用的代码设计经验的总结。使用设计模式的目的是为了可重用代码、让代码更容易被他人理解。设计模式是是软件工程的基石脉络，如大厦的结构一样<br>Design pattern的四大要素：模式名称（Name），问题（Question），解决方案（Solution），效果（Efftive）。<br>OO（面向对象）的六大原则：单一职责原则，开闭原则，里氏替换原则，依赖倒置原则，接口隔离原则，迪米特原则。<pre><code>单一职责原则：一个类中应该是一组相关性很高的函数，数据的封装。两个完全不一样的功能就不应该放在一个类中。\n开闭原则：对修改封闭，对扩展放开。\n里氏替换原则：抽象和继承；所有引用基类的地方必须能透明的使用其子类的对象。\n依赖倒置原则：抽象不应该依赖细节，细节应该依赖抽象。\n接口隔离原则：将大接口改成多个小接口。\n迪米特原则：也称为最少知识原则，一个对象应该对另一个对象有最少的了解。\n</code></pre></li>\n<li>分类<br>设计模式分为三种类型：<pre><code>创建型模式5种：单例模式，抽象工厂模式，工厂模式，原型模式，建造者模式。（口诀：单原建造者，东西二厂）\n结构型模式7种：适配器模式，桥接模式，装饰模式，组合模式，外观模式，享元模式，代理模式。（口诀：一器一桥一元一代理；装饰组合外观）\n行为型模式11种：观察者模式，中介者模式，访问者模式，解释器模式，迭代器模式，备忘录模式，责任链模式，状态模式，策略模式，命令模式，模板模式。（口诀：三者两器、一录一链一模板，状态策略命令）\n</code></pre><h2 id=\"功能模块设计原则\"><a href=\"#功能模块设计原则\" class=\"headerlink\" title=\"功能模块设计原则\"></a>功能模块设计原则</h2></li>\n<li>单一职责原则（Single Responsibility Principle - SRP）<pre><code>原文：There should never be more than one reason for a class to change.\n译文：永远不应该有多于一个原因来改变某个类。\n理解：对于一个类而言，应该仅有一个引起它变化的原因。说白了就是，不同的类具备不同的职责，各施其责。这就好比一个团队，大家分工协作，互不影响，各做各的事情。\n应用：当我们做系统设计时，如果发现有一个类拥有了两种的职责，那就问自己一个问题：可以将这个类分成两个类吗？如果真的有必要，那就分吧。千万不要让一个类干的事情太多！\n</code></pre></li>\n<li>开放封闭原则（Open Closed Principle - OCP）<pre><code>原文：Software entities like classes, modules and functions should be open for extension but closed for modifications.\n译文：软件实体，如：类、模块与函数，对于扩展应该是开放的，但对于修改应该是封闭的。\n理解：简言之，对扩展开放，对修改封闭。换句话说，可以去扩展类，但不要去修改类。\n应用：当需求有改动，要修改代码了，此时您要做的是，尽量用继承或组合的方式来扩展类的功能，而不是直接修改类的代码。当然，如果能够确保对整体架构不会产生任何影响，那么也没必要搞得那么复杂了，直接改这个类吧。\n</code></pre></li>\n<li>里氏替换原则（Liskov Substitution Principle - LSP）<pre><code>原文：Functions that use pointers or references to base classes must be able to use objects of derived classes without knowing it.\n译文：使用基类的指针或引用的函数，必须是在不知情的情况下，能够使用派生类的对象。\n理解：父类能够替换子类，但子类不一定能替换父类。也就是说，在代码中可以将父类全部替换为子类，程序不会报错，也不会在运行时出现任何异常，但反过来却不一定成立。\n应用：在继承类时，务必重写（Override）父类中所有的方法，尤其需要注意父类的 protected 方法（它们往往是让您重写的），子类尽量不要暴露自己的 public 方法供外界调用。\n</code></pre></li>\n<li>最少知识原则（Least Knowledge Principle - LKP）<pre><code>原文：Only talk to you immediate friends.\n译文：只与你最直接的朋友交流。\n理解：尽量减少对象之间的交互，从而减小类之间的耦合。简言之，一定要做到：低耦合，高内聚。\n应用：在做系统设计时，不要让一个类依赖于太多的其他类，需尽量减小依赖关系，否则，您死都不知道自己怎么死的。\n</code></pre></li>\n<li>接口隔离原则（Interface Segregation Principle - ISP）<pre><code>原文：The dependency of one class to another one should depend on the smallest possible interface.\n译文：一个类与另一个类之间的依赖性，应该依赖于尽可能小的接口。、理解：不要对外暴露没有实际意义的接口。也就是说，接口是给别人调用的，那就不要去为难别人了，尽可能保证接口的实用性吧。她好，我也好。\n应用：当需要对外暴露接口时，需要再三斟酌，如果真的没有必要对外提供的，就删了吧。一旦您提供了，就意味着，您将来要多做一件事情，何苦要给自己找事做呢。\n</code></pre></li>\n<li>依赖倒置原则（Dependence Inversion Principle - DIP）<pre><code>原文：High level modules should not depends upon low level modules. Both should depend upon abstractions. Abstractions should not depend upon details. Details should depend upon abstractions.\n译文：高层模块不应该依赖于低层模块，它们应该依赖于抽象。抽象不应该依赖于细节，细节应该依赖于抽象。\n理解：应该面向接口编程，不应该面向实现类编程。面向实现类编程，相当于就是论事，那是正向依赖（正常人思维）；面向接口编程，相当于通过事物表象来看本质，那是反向依赖，即依赖倒置（程序员思维）。\n应用：并不是说，所有的类都要有一个对应的接口，而是说，如果有接口，那就尽量使用接口来编程吧。\n------&gt;------&gt;------&gt;------&gt;------&gt;------&gt;------&gt;\n将以上六大原则的英文首字母拼在一起就是 SOLID（稳定的），所以也称之为 SOLID 原则。只有满足了这六大原则，才能设计出稳定的软件架构！但它们毕竟只是原则，只是四人帮给我们的建议，有些时候我们还是要学会灵活应变，千万不要生搬硬套，否则只会把简单问题复杂化\n</code></pre>补充设计原则<ol>\n<li>组合/聚合复用原则（Composition/Aggregation Reuse Principle - CARP）<pre><code>当要扩展类的功能时，优先考虑使用组合，而不是继承。这条原则在 23 种经典设计模式中频繁使用，如：代理模式、装饰模式、适配器模式等。可见江湖地位非常之高！\n</code></pre></li>\n<li>无环依赖原则（Acyclic Dependencies Principle - ADP）<pre><code>当 A 模块依赖于 B 模块，B 模块依赖于 C 模块，C 依赖于 A 模块，此时将出现循环依赖。在设计中应该避免这个问题，可通过引入“中介者模式”解决该问题。\n</code></pre></li>\n<li>共同封装原则（Common Closure Principle - CCP）<pre><code>应该将易变的类放在同一个包里，将变化隔离出来。该原则是“开放-封闭原则”的延生。\n</code></pre></li>\n<li>共同重用原则（Common Reuse Principle - CRP）<pre><code>如果重用了包中的一个类，那么也就相当于重用了包中的所有类，我们要尽可能减小包的大小。\n</code></pre></li>\n<li>好莱坞原则（Hollywood Principle - HP）<pre><code>好莱坞明星的经纪人一般都很忙，他们不想被打扰，往往会说：Don&apos;t call me, I&apos;ll call you. 翻译为：不要联系我，我会联系你。对应于软件设计而言，最著名的就是“控制反转”（或称为“依赖注入”），我们不需要在代码中主动的创建对象，而是由容器帮我们来创建并管理这些对象。\n</code></pre></li>\n</ol>\n</li>\n</ol>\n<p>其它设计原则</p>\n<ol>\n<li>不要重复你自己（Don’t repeat yourself - DRY）<pre><code>不要让重复的代码到处都是，要让它们足够的重用，所以要尽可能地封装。\n</code></pre></li>\n<li>保持它简单与傻瓜（Keep it simple and stupid - KISS）<pre><code>不要让系统变得复杂，界面简洁，功能实用，操作方便，要让它足够的简单，足够的傻瓜。\n</code></pre></li>\n<li>高内聚与低耦合（High Cohesion and Low Coupling - HCLC）<pre><code>模块内部需要做到内聚度高，模块之间需要做到耦合度低。\n</code></pre></li>\n<li>惯例优于配置（Convention over Configuration - COC）<pre><code>尽量让惯例来减少配置，这样才能提高开发效率，尽量做到“零配置”。很多开发框架都是这样做的。\n</code></pre></li>\n<li>命令查询分离（Command Query Separation - CQS）<pre><code>在定义接口时，要做到哪些是命令，哪些是查询，要将它们分离，而不要揉到一起。\n</code></pre></li>\n<li>关注点分离（Separation of Concerns - SOC）<pre><code>将一个复杂的问题分离为多个简单的问题，然后逐个解决这些简单的问题，那么这个复杂的问题就解决了。难就难在如何进行分离。\n</code></pre></li>\n<li>契约式设计（Design by Contract - DBC）<pre><code>模块或系统之间的交互，都是基于契约（接口或抽象）的，而不要依赖于具体实现。该原则建议我们要面向契约编程。\n</code></pre></li>\n<li>你不需要它（You aren’t gonna need it - YAGNI）<pre><code>不要一开始就把系统设计得非常复杂，不要陷入“过度设计”的深渊。应该让系统足够的简单，而却又不失扩展性，这是其中的难点。\n</code></pre></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"什么是设计模式\"><a href=\"#什么是设计模式\" class=\"headerlink\" title=\"什么是设计模式\"></a>什么是设计模式</h2><ol>\n<li>定义<br>基本定义：设计模式（Design pattern）是一套被反复使用的代码设计经验的总结。使用设计模式的目的是为了可重用代码、让代码更容易被他人理解。设计模式是是软件工程的基石脉络，如大厦的结构一样<br>Design pattern的四大要素：模式名称（Name），问题（Question），解决方案（Solution），效果（Efftive）。<br>OO（面向对象）的六大原则：单一职责原则，开闭原则，里氏替换原则，依赖倒置原则，接口隔离原则，迪米特原则。<pre><code>单一职责原则：一个类中应该是一组相关性很高的函数，数据的封装。两个完全不一样的功能就不应该放在一个类中。\n开闭原则：对修改封闭，对扩展放开。\n里氏替换原则：抽象和继承；所有引用基类的地方必须能透明的使用其子类的对象。\n依赖倒置原则：抽象不应该依赖细节，细节应该依赖抽象。\n接口隔离原则：将大接口改成多个小接口。\n迪米特原则：也称为最少知识原则，一个对象应该对另一个对象有最少的了解。\n</code></pre></li>\n<li>分类<br>设计模式分为三种类型：<pre><code>创建型模式5种：单例模式，抽象工厂模式，工厂模式，原型模式，建造者模式。（口诀：单原建造者，东西二厂）\n结构型模式7种：适配器模式，桥接模式，装饰模式，组合模式，外观模式，享元模式，代理模式。（口诀：一器一桥一元一代理；装饰组合外观）\n行为型模式11种：观察者模式，中介者模式，访问者模式，解释器模式，迭代器模式，备忘录模式，责任链模式，状态模式，策略模式，命令模式，模板模式。（口诀：三者两器、一录一链一模板，状态策略命令）\n</code></pre><h2 id=\"功能模块设计原则\"><a href=\"#功能模块设计原则\" class=\"headerlink\" title=\"功能模块设计原则\"></a>功能模块设计原则</h2></li>\n<li>单一职责原则（Single Responsibility Principle - SRP）<pre><code>原文：There should never be more than one reason for a class to change.\n译文：永远不应该有多于一个原因来改变某个类。\n理解：对于一个类而言，应该仅有一个引起它变化的原因。说白了就是，不同的类具备不同的职责，各施其责。这就好比一个团队，大家分工协作，互不影响，各做各的事情。\n应用：当我们做系统设计时，如果发现有一个类拥有了两种的职责，那就问自己一个问题：可以将这个类分成两个类吗？如果真的有必要，那就分吧。千万不要让一个类干的事情太多！\n</code></pre></li>\n<li>开放封闭原则（Open Closed Principle - OCP）<pre><code>原文：Software entities like classes, modules and functions should be open for extension but closed for modifications.\n译文：软件实体，如：类、模块与函数，对于扩展应该是开放的，但对于修改应该是封闭的。\n理解：简言之，对扩展开放，对修改封闭。换句话说，可以去扩展类，但不要去修改类。\n应用：当需求有改动，要修改代码了，此时您要做的是，尽量用继承或组合的方式来扩展类的功能，而不是直接修改类的代码。当然，如果能够确保对整体架构不会产生任何影响，那么也没必要搞得那么复杂了，直接改这个类吧。\n</code></pre></li>\n<li>里氏替换原则（Liskov Substitution Principle - LSP）<pre><code>原文：Functions that use pointers or references to base classes must be able to use objects of derived classes without knowing it.\n译文：使用基类的指针或引用的函数，必须是在不知情的情况下，能够使用派生类的对象。\n理解：父类能够替换子类，但子类不一定能替换父类。也就是说，在代码中可以将父类全部替换为子类，程序不会报错，也不会在运行时出现任何异常，但反过来却不一定成立。\n应用：在继承类时，务必重写（Override）父类中所有的方法，尤其需要注意父类的 protected 方法（它们往往是让您重写的），子类尽量不要暴露自己的 public 方法供外界调用。\n</code></pre></li>\n<li>最少知识原则（Least Knowledge Principle - LKP）<pre><code>原文：Only talk to you immediate friends.\n译文：只与你最直接的朋友交流。\n理解：尽量减少对象之间的交互，从而减小类之间的耦合。简言之，一定要做到：低耦合，高内聚。\n应用：在做系统设计时，不要让一个类依赖于太多的其他类，需尽量减小依赖关系，否则，您死都不知道自己怎么死的。\n</code></pre></li>\n<li>接口隔离原则（Interface Segregation Principle - ISP）<pre><code>原文：The dependency of one class to another one should depend on the smallest possible interface.\n译文：一个类与另一个类之间的依赖性，应该依赖于尽可能小的接口。、理解：不要对外暴露没有实际意义的接口。也就是说，接口是给别人调用的，那就不要去为难别人了，尽可能保证接口的实用性吧。她好，我也好。\n应用：当需要对外暴露接口时，需要再三斟酌，如果真的没有必要对外提供的，就删了吧。一旦您提供了，就意味着，您将来要多做一件事情，何苦要给自己找事做呢。\n</code></pre></li>\n<li>依赖倒置原则（Dependence Inversion Principle - DIP）<pre><code>原文：High level modules should not depends upon low level modules. Both should depend upon abstractions. Abstractions should not depend upon details. Details should depend upon abstractions.\n译文：高层模块不应该依赖于低层模块，它们应该依赖于抽象。抽象不应该依赖于细节，细节应该依赖于抽象。\n理解：应该面向接口编程，不应该面向实现类编程。面向实现类编程，相当于就是论事，那是正向依赖（正常人思维）；面向接口编程，相当于通过事物表象来看本质，那是反向依赖，即依赖倒置（程序员思维）。\n应用：并不是说，所有的类都要有一个对应的接口，而是说，如果有接口，那就尽量使用接口来编程吧。\n------&gt;------&gt;------&gt;------&gt;------&gt;------&gt;------&gt;\n将以上六大原则的英文首字母拼在一起就是 SOLID（稳定的），所以也称之为 SOLID 原则。只有满足了这六大原则，才能设计出稳定的软件架构！但它们毕竟只是原则，只是四人帮给我们的建议，有些时候我们还是要学会灵活应变，千万不要生搬硬套，否则只会把简单问题复杂化\n</code></pre>补充设计原则<ol>\n<li>组合/聚合复用原则（Composition/Aggregation Reuse Principle - CARP）<pre><code>当要扩展类的功能时，优先考虑使用组合，而不是继承。这条原则在 23 种经典设计模式中频繁使用，如：代理模式、装饰模式、适配器模式等。可见江湖地位非常之高！\n</code></pre></li>\n<li>无环依赖原则（Acyclic Dependencies Principle - ADP）<pre><code>当 A 模块依赖于 B 模块，B 模块依赖于 C 模块，C 依赖于 A 模块，此时将出现循环依赖。在设计中应该避免这个问题，可通过引入“中介者模式”解决该问题。\n</code></pre></li>\n<li>共同封装原则（Common Closure Principle - CCP）<pre><code>应该将易变的类放在同一个包里，将变化隔离出来。该原则是“开放-封闭原则”的延生。\n</code></pre></li>\n<li>共同重用原则（Common Reuse Principle - CRP）<pre><code>如果重用了包中的一个类，那么也就相当于重用了包中的所有类，我们要尽可能减小包的大小。\n</code></pre></li>\n<li>好莱坞原则（Hollywood Principle - HP）<pre><code>好莱坞明星的经纪人一般都很忙，他们不想被打扰，往往会说：Don&apos;t call me, I&apos;ll call you. 翻译为：不要联系我，我会联系你。对应于软件设计而言，最著名的就是“控制反转”（或称为“依赖注入”），我们不需要在代码中主动的创建对象，而是由容器帮我们来创建并管理这些对象。\n</code></pre></li>\n</ol>\n</li>\n</ol>\n<p>其它设计原则</p>\n<ol>\n<li>不要重复你自己（Don’t repeat yourself - DRY）<pre><code>不要让重复的代码到处都是，要让它们足够的重用，所以要尽可能地封装。\n</code></pre></li>\n<li>保持它简单与傻瓜（Keep it simple and stupid - KISS）<pre><code>不要让系统变得复杂，界面简洁，功能实用，操作方便，要让它足够的简单，足够的傻瓜。\n</code></pre></li>\n<li>高内聚与低耦合（High Cohesion and Low Coupling - HCLC）<pre><code>模块内部需要做到内聚度高，模块之间需要做到耦合度低。\n</code></pre></li>\n<li>惯例优于配置（Convention over Configuration - COC）<pre><code>尽量让惯例来减少配置，这样才能提高开发效率，尽量做到“零配置”。很多开发框架都是这样做的。\n</code></pre></li>\n<li>命令查询分离（Command Query Separation - CQS）<pre><code>在定义接口时，要做到哪些是命令，哪些是查询，要将它们分离，而不要揉到一起。\n</code></pre></li>\n<li>关注点分离（Separation of Concerns - SOC）<pre><code>将一个复杂的问题分离为多个简单的问题，然后逐个解决这些简单的问题，那么这个复杂的问题就解决了。难就难在如何进行分离。\n</code></pre></li>\n<li>契约式设计（Design by Contract - DBC）<pre><code>模块或系统之间的交互，都是基于契约（接口或抽象）的，而不要依赖于具体实现。该原则建议我们要面向契约编程。\n</code></pre></li>\n<li>你不需要它（You aren’t gonna need it - YAGNI）<pre><code>不要一开始就把系统设计得非常复杂，不要陷入“过度设计”的深渊。应该让系统足够的简单，而却又不失扩展性，这是其中的难点。\n</code></pre></li>\n</ol>\n"},{"title":"Android中的设计模式","date":"2018-05-21T08:54:16.000Z","_content":"（1）单例模式：\n\t\t\t简介：保证一个类仅有一个实例，并提供一个访问它的全局访问点。\n\t\t\t示例：Android中的系统级服务都是通过容器的单例模式实现方式，以单例形式存在，减少了资源消耗。\n\t\t\t比如LayoutInflater Service，将这些服务以键值对的形式存储在一个HashMap容器中，用户使用时只需要根据key来获取到对应的ServiceFetcher，然后通过ServcieFetcher对象的getService函数来获取到具体的服务对象，第一次获取时会调用ServcieFetcher的createService函数创建服务对象，然后将该对象缓存到一个列表中，下次再取时直接从缓存中获取，避免重复创建对象，从而达到单例的效果。\n（2）抽象工厂模式：\n\t\t\t简介：提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。\n\t\t\t示例：Android底层对MediaPlayer的创建。MediaPlayerFactory是Android底层为了创建不同的MediaPlayer所定义的一个类。\n（3）工厂模式：\n\t\t\t简介：定义一个用于创建对象的接口，让子类决定将哪一个类实例化。\n\t\t\t示例：BitmapFactory位图工厂，专门用来将指定的图片转换为指定的位图Bitmap。\n（4）原型模式：\n\t\t\t简介：用原型实例指定创建对象的种类，并且通过拷贝这个原型来创建新的对象。\n\t\t\t示例：比如我们需要一张Bitmap的几种不同格式：ARGB_8888、RGB_565、ARGB_4444、ALAPHA_8等。那我们就可以先创建一个ARGB_8888的Bitmap作为原型，在它的基础上，通过调用Bitmap.copy(Config)来创建出其它几种格式的Bitmap。另外一个例子就是Java中所有对象都有的一个名字叫clone的方法，已经原型模式的代名词了。在系统中要创建大量的对象，这些对象之间具有几乎完全相同的功能，只是在细节上有一点儿差别。\n（5）建造者模式：\n\t\t\t简介：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。\n\t\t\t示例：AlertDialog.Builder   ImageLoader的初始配置。\n（6）适配器模式：\n\t\t\t简介：将一个类的接口转换成客户希望的另外一个接口。\n\t\t\t示例：不同的数据提供者使用一个适配器来向一个相同的客户提供服务。\n\t\t\tListView或GridView的Adapter。\n（7）桥接模式：\n\t\t\t简介：将抽象部分与它的实现部分分离，使它们都可以独立地变化。\n\t\t\t示例：Window和WindowManager之间的关系。\n\t\t\t在FrameWork中Window和PhoneWindow构成窗口的抽象部分，其中Window类为该抽象部分的抽象接口，PhoneWindow为抽象部分具体的实现及扩展。而WindowManager则为实现部分的基类，WindowManagerImpl则为实现部分具体的逻辑实现。\n（8）装饰模式：\n\t\t\t简介：动态地给一个对象添加一些额外的职责。就扩展功能而言， 它比生成子类方式更为灵活。\n\t\t\t示例：Activity继承自ContextThemeWrapper，ContextThemeWrapper继承自ContextWrapper，ContextWrapper才是继承自Context。ContextWrapper就是我们找的装饰者。\n（9）组合模式：\n\t\t\t简介：将对象组合成树形结构以表示“部分-整体”的层次结构。\n\t\t\t示例：View和ViewGroup的组合\n（10）外观模式\n\t\t\t简介：为子系统中的一组接口提供一个一致的界面，Facade模式定义了一个高层接口，统一编程接口。\n\t\t\t示例：ContextImpl\n（11）享元模式：\n\t\t\t简介：运用共享技术有效地支持大量细粒度的对象。\n\t\t\t示例：Message.obtainMessage通过重用Message对象来避免大量的Message对象被频繁的创建和销毁。\n（12）代理模式：\n\t\t\t简介：为其他对象提供一个代理以控制对这个对象的访问。\n\t\t\t示例：所有的AIDL都一个代理模式的例子。假设一个Activity A去绑定一个Service S，那么A调用S中的每一个方法其实都是通过系统的Binder机制的中转，然后调用S中的对应方法来做到的。Binder机制就起到了代理的作用。\n（13）观察者模式：\n\t\t\t简介：一个对象发生改变时，所有信赖于它的对象自动做相应改变。\n\t\t\t示例：我们可以通过BaseAdapter.registerDataSetObserver和BaseAdapter.unregisterDataSetObserver两方法来向BaseAdater注册、注销一个DataSetObserver。这个过程中，DataSetObserver就是一个观察者，它一旦发现BaseAdapter内部数据有变量，就会通过回调方法DataSetObserver.onChanged和DataSetObserver.onInvalidated来通知DataSetObserver的实现类。事件通知也是观察者模式。\n（14）中介者模式：\n\t\t\t简介：用一个中介对象来封装一系列的对象交互。中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。\n\t\t\t示例：Binder机制。\n(15)访问者模式:\n\t\t\t简介：表示一个作用于某对象结构中的各元素的操作。它使你可以在不改变各元素的类的前提下定义作用于这些元素的新操作。\n\t\t\t示例：编译时注解中的ElementVisitor中定义多个Visit接口，每个接口处理一种数据类型，这就是典型的访问者模式，访问者模式正好解决了数据结构和数据操作分离的问题，避免某些操作污染了数据对象类。\n（16） 解释器模式：\n\t\t\t简介：给定一个语言，定义它的文法的一种表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子。\n\t\t\t示例：PackageParser这个类对AndroidManifest.xml这个配置文件的解析过程，\n（17）迭代器模式\n\t\t\t简介：提供一种方法顺序访问一个聚合对象中各个元素, 而又不需暴露该对象的内部表示。\n\t\t\t示例：在Android中除了各种数据结构体，如List，Map，等包含的迭代器以外，Android源码中也提供了迭代器遍历模式，比如数据库查询使用Cursor，当我们使用SQLiteDataBase的query方法查询数据库时，会返回一个Cursor游标对象，该游标对象实际上就是一个具体的迭代器。\n（18）备忘录模式\n\t\t\t简介：不需要了解对象的内部结构的情况下备份对象的状态，方便以后恢复。\n\t\t\t示例：Activity的onSaveInstanceState和onRestoreInstanceState就是通过Bundle这种序列化的数据结构来存储Activity的状态，至于其中存储的数据结构，这两个方法不用关心。\n（19）责任链模式\n\t\t\t简介：有多个的对象可以处理一个请求，哪个对象处理该请求运行时刻自动确定。\n\t\t\t示例:  责任链模式在Android源码中比较类似的实现莫过于对事件的分发处理，每当用户接触屏幕时候，Android都会将对应的事件包装成一个事件对象从ViewTree的顶部至上而下的分发传递。ViewGroup事件投递的递归调用就类似一条责任链，一旦寻找到责任者，那么就由责任者持有并消费该次事件，具体的体现在View的onTouchEvent方法中的返回值，如果OnTouchEvent返回false，那么意味着当前View不会是该次事件的责任人，将不会对该事件持有。\n（20）状态模式：\n\t\t\t简介：状态发生改变时，行为改变。\n\t\t\t示例：View.onVisibilityChanged方法，就是提供了一个状态模式的实现，允许在View的visibility发生改变时，引发执行onVisibilityChanged方法中的动作。\n（21）策略模式\n\t\t\t简介：定义了一系列封装了算法、行为的对象，他们可以相互替换。\n\t\t\t示例：Java.util.List就是定义了一个增（add）、删（remove）、改（set）、查（indexOf）策略，至于实现这个策略的ArrayList、LinkedList等类，只是在具体实现时采用了不同的算法。但因为它们策略一样，不考虑速度的情况下，使用时完全可以互相替换使用。\n（22）命令模式\n\t\t\t简介：把请求封装成一个对象发送出去，方便定制、排队、取消。\n\t\t\t示例：Handler.post后Handler.handleMessage。\n（23）享元模式\n\t\t\t简介：运用共享技术有效地支持大量细粒度的对象。\n\t\t\t示例：Message.obtainMessage通过重用Message对象来避免大量的Message对象被频繁的创建和销毁。","source":"_posts/Android中的设计模式.md","raw":"---\ntitle: Android中的设计模式\ndate: 2018-05-21 16:54:16\ntags: \"设计模式\"\ncategories: \"Android\"\n---\n（1）单例模式：\n\t\t\t简介：保证一个类仅有一个实例，并提供一个访问它的全局访问点。\n\t\t\t示例：Android中的系统级服务都是通过容器的单例模式实现方式，以单例形式存在，减少了资源消耗。\n\t\t\t比如LayoutInflater Service，将这些服务以键值对的形式存储在一个HashMap容器中，用户使用时只需要根据key来获取到对应的ServiceFetcher，然后通过ServcieFetcher对象的getService函数来获取到具体的服务对象，第一次获取时会调用ServcieFetcher的createService函数创建服务对象，然后将该对象缓存到一个列表中，下次再取时直接从缓存中获取，避免重复创建对象，从而达到单例的效果。\n（2）抽象工厂模式：\n\t\t\t简介：提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。\n\t\t\t示例：Android底层对MediaPlayer的创建。MediaPlayerFactory是Android底层为了创建不同的MediaPlayer所定义的一个类。\n（3）工厂模式：\n\t\t\t简介：定义一个用于创建对象的接口，让子类决定将哪一个类实例化。\n\t\t\t示例：BitmapFactory位图工厂，专门用来将指定的图片转换为指定的位图Bitmap。\n（4）原型模式：\n\t\t\t简介：用原型实例指定创建对象的种类，并且通过拷贝这个原型来创建新的对象。\n\t\t\t示例：比如我们需要一张Bitmap的几种不同格式：ARGB_8888、RGB_565、ARGB_4444、ALAPHA_8等。那我们就可以先创建一个ARGB_8888的Bitmap作为原型，在它的基础上，通过调用Bitmap.copy(Config)来创建出其它几种格式的Bitmap。另外一个例子就是Java中所有对象都有的一个名字叫clone的方法，已经原型模式的代名词了。在系统中要创建大量的对象，这些对象之间具有几乎完全相同的功能，只是在细节上有一点儿差别。\n（5）建造者模式：\n\t\t\t简介：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。\n\t\t\t示例：AlertDialog.Builder   ImageLoader的初始配置。\n（6）适配器模式：\n\t\t\t简介：将一个类的接口转换成客户希望的另外一个接口。\n\t\t\t示例：不同的数据提供者使用一个适配器来向一个相同的客户提供服务。\n\t\t\tListView或GridView的Adapter。\n（7）桥接模式：\n\t\t\t简介：将抽象部分与它的实现部分分离，使它们都可以独立地变化。\n\t\t\t示例：Window和WindowManager之间的关系。\n\t\t\t在FrameWork中Window和PhoneWindow构成窗口的抽象部分，其中Window类为该抽象部分的抽象接口，PhoneWindow为抽象部分具体的实现及扩展。而WindowManager则为实现部分的基类，WindowManagerImpl则为实现部分具体的逻辑实现。\n（8）装饰模式：\n\t\t\t简介：动态地给一个对象添加一些额外的职责。就扩展功能而言， 它比生成子类方式更为灵活。\n\t\t\t示例：Activity继承自ContextThemeWrapper，ContextThemeWrapper继承自ContextWrapper，ContextWrapper才是继承自Context。ContextWrapper就是我们找的装饰者。\n（9）组合模式：\n\t\t\t简介：将对象组合成树形结构以表示“部分-整体”的层次结构。\n\t\t\t示例：View和ViewGroup的组合\n（10）外观模式\n\t\t\t简介：为子系统中的一组接口提供一个一致的界面，Facade模式定义了一个高层接口，统一编程接口。\n\t\t\t示例：ContextImpl\n（11）享元模式：\n\t\t\t简介：运用共享技术有效地支持大量细粒度的对象。\n\t\t\t示例：Message.obtainMessage通过重用Message对象来避免大量的Message对象被频繁的创建和销毁。\n（12）代理模式：\n\t\t\t简介：为其他对象提供一个代理以控制对这个对象的访问。\n\t\t\t示例：所有的AIDL都一个代理模式的例子。假设一个Activity A去绑定一个Service S，那么A调用S中的每一个方法其实都是通过系统的Binder机制的中转，然后调用S中的对应方法来做到的。Binder机制就起到了代理的作用。\n（13）观察者模式：\n\t\t\t简介：一个对象发生改变时，所有信赖于它的对象自动做相应改变。\n\t\t\t示例：我们可以通过BaseAdapter.registerDataSetObserver和BaseAdapter.unregisterDataSetObserver两方法来向BaseAdater注册、注销一个DataSetObserver。这个过程中，DataSetObserver就是一个观察者，它一旦发现BaseAdapter内部数据有变量，就会通过回调方法DataSetObserver.onChanged和DataSetObserver.onInvalidated来通知DataSetObserver的实现类。事件通知也是观察者模式。\n（14）中介者模式：\n\t\t\t简介：用一个中介对象来封装一系列的对象交互。中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。\n\t\t\t示例：Binder机制。\n(15)访问者模式:\n\t\t\t简介：表示一个作用于某对象结构中的各元素的操作。它使你可以在不改变各元素的类的前提下定义作用于这些元素的新操作。\n\t\t\t示例：编译时注解中的ElementVisitor中定义多个Visit接口，每个接口处理一种数据类型，这就是典型的访问者模式，访问者模式正好解决了数据结构和数据操作分离的问题，避免某些操作污染了数据对象类。\n（16） 解释器模式：\n\t\t\t简介：给定一个语言，定义它的文法的一种表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子。\n\t\t\t示例：PackageParser这个类对AndroidManifest.xml这个配置文件的解析过程，\n（17）迭代器模式\n\t\t\t简介：提供一种方法顺序访问一个聚合对象中各个元素, 而又不需暴露该对象的内部表示。\n\t\t\t示例：在Android中除了各种数据结构体，如List，Map，等包含的迭代器以外，Android源码中也提供了迭代器遍历模式，比如数据库查询使用Cursor，当我们使用SQLiteDataBase的query方法查询数据库时，会返回一个Cursor游标对象，该游标对象实际上就是一个具体的迭代器。\n（18）备忘录模式\n\t\t\t简介：不需要了解对象的内部结构的情况下备份对象的状态，方便以后恢复。\n\t\t\t示例：Activity的onSaveInstanceState和onRestoreInstanceState就是通过Bundle这种序列化的数据结构来存储Activity的状态，至于其中存储的数据结构，这两个方法不用关心。\n（19）责任链模式\n\t\t\t简介：有多个的对象可以处理一个请求，哪个对象处理该请求运行时刻自动确定。\n\t\t\t示例:  责任链模式在Android源码中比较类似的实现莫过于对事件的分发处理，每当用户接触屏幕时候，Android都会将对应的事件包装成一个事件对象从ViewTree的顶部至上而下的分发传递。ViewGroup事件投递的递归调用就类似一条责任链，一旦寻找到责任者，那么就由责任者持有并消费该次事件，具体的体现在View的onTouchEvent方法中的返回值，如果OnTouchEvent返回false，那么意味着当前View不会是该次事件的责任人，将不会对该事件持有。\n（20）状态模式：\n\t\t\t简介：状态发生改变时，行为改变。\n\t\t\t示例：View.onVisibilityChanged方法，就是提供了一个状态模式的实现，允许在View的visibility发生改变时，引发执行onVisibilityChanged方法中的动作。\n（21）策略模式\n\t\t\t简介：定义了一系列封装了算法、行为的对象，他们可以相互替换。\n\t\t\t示例：Java.util.List就是定义了一个增（add）、删（remove）、改（set）、查（indexOf）策略，至于实现这个策略的ArrayList、LinkedList等类，只是在具体实现时采用了不同的算法。但因为它们策略一样，不考虑速度的情况下，使用时完全可以互相替换使用。\n（22）命令模式\n\t\t\t简介：把请求封装成一个对象发送出去，方便定制、排队、取消。\n\t\t\t示例：Handler.post后Handler.handleMessage。\n（23）享元模式\n\t\t\t简介：运用共享技术有效地支持大量细粒度的对象。\n\t\t\t示例：Message.obtainMessage通过重用Message对象来避免大量的Message对象被频繁的创建和销毁。","slug":"Android中的设计模式","published":1,"updated":"2018-05-21T08:56:26.770Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhh1ew7o000fwgw5thcdhwuk","content":"<p>（1）单例模式：<br>            简介：保证一个类仅有一个实例，并提供一个访问它的全局访问点。<br>            示例：Android中的系统级服务都是通过容器的单例模式实现方式，以单例形式存在，减少了资源消耗。<br>            比如LayoutInflater Service，将这些服务以键值对的形式存储在一个HashMap容器中，用户使用时只需要根据key来获取到对应的ServiceFetcher，然后通过ServcieFetcher对象的getService函数来获取到具体的服务对象，第一次获取时会调用ServcieFetcher的createService函数创建服务对象，然后将该对象缓存到一个列表中，下次再取时直接从缓存中获取，避免重复创建对象，从而达到单例的效果。<br>（2）抽象工厂模式：<br>            简介：提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。<br>            示例：Android底层对MediaPlayer的创建。MediaPlayerFactory是Android底层为了创建不同的MediaPlayer所定义的一个类。<br>（3）工厂模式：<br>            简介：定义一个用于创建对象的接口，让子类决定将哪一个类实例化。<br>            示例：BitmapFactory位图工厂，专门用来将指定的图片转换为指定的位图Bitmap。<br>（4）原型模式：<br>            简介：用原型实例指定创建对象的种类，并且通过拷贝这个原型来创建新的对象。<br>            示例：比如我们需要一张Bitmap的几种不同格式：ARGB_8888、RGB_565、ARGB_4444、ALAPHA_8等。那我们就可以先创建一个ARGB_8888的Bitmap作为原型，在它的基础上，通过调用Bitmap.copy(Config)来创建出其它几种格式的Bitmap。另外一个例子就是Java中所有对象都有的一个名字叫clone的方法，已经原型模式的代名词了。在系统中要创建大量的对象，这些对象之间具有几乎完全相同的功能，只是在细节上有一点儿差别。<br>（5）建造者模式：<br>            简介：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。<br>            示例：AlertDialog.Builder   ImageLoader的初始配置。<br>（6）适配器模式：<br>            简介：将一个类的接口转换成客户希望的另外一个接口。<br>            示例：不同的数据提供者使用一个适配器来向一个相同的客户提供服务。<br>            ListView或GridView的Adapter。<br>（7）桥接模式：<br>            简介：将抽象部分与它的实现部分分离，使它们都可以独立地变化。<br>            示例：Window和WindowManager之间的关系。<br>            在FrameWork中Window和PhoneWindow构成窗口的抽象部分，其中Window类为该抽象部分的抽象接口，PhoneWindow为抽象部分具体的实现及扩展。而WindowManager则为实现部分的基类，WindowManagerImpl则为实现部分具体的逻辑实现。<br>（8）装饰模式：<br>            简介：动态地给一个对象添加一些额外的职责。就扩展功能而言， 它比生成子类方式更为灵活。<br>            示例：Activity继承自ContextThemeWrapper，ContextThemeWrapper继承自ContextWrapper，ContextWrapper才是继承自Context。ContextWrapper就是我们找的装饰者。<br>（9）组合模式：<br>            简介：将对象组合成树形结构以表示“部分-整体”的层次结构。<br>            示例：View和ViewGroup的组合<br>（10）外观模式<br>            简介：为子系统中的一组接口提供一个一致的界面，Facade模式定义了一个高层接口，统一编程接口。<br>            示例：ContextImpl<br>（11）享元模式：<br>            简介：运用共享技术有效地支持大量细粒度的对象。<br>            示例：Message.obtainMessage通过重用Message对象来避免大量的Message对象被频繁的创建和销毁。<br>（12）代理模式：<br>            简介：为其他对象提供一个代理以控制对这个对象的访问。<br>            示例：所有的AIDL都一个代理模式的例子。假设一个Activity A去绑定一个Service S，那么A调用S中的每一个方法其实都是通过系统的Binder机制的中转，然后调用S中的对应方法来做到的。Binder机制就起到了代理的作用。<br>（13）观察者模式：<br>            简介：一个对象发生改变时，所有信赖于它的对象自动做相应改变。<br>            示例：我们可以通过BaseAdapter.registerDataSetObserver和BaseAdapter.unregisterDataSetObserver两方法来向BaseAdater注册、注销一个DataSetObserver。这个过程中，DataSetObserver就是一个观察者，它一旦发现BaseAdapter内部数据有变量，就会通过回调方法DataSetObserver.onChanged和DataSetObserver.onInvalidated来通知DataSetObserver的实现类。事件通知也是观察者模式。<br>（14）中介者模式：<br>            简介：用一个中介对象来封装一系列的对象交互。中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。<br>            示例：Binder机制。<br>(15)访问者模式:<br>            简介：表示一个作用于某对象结构中的各元素的操作。它使你可以在不改变各元素的类的前提下定义作用于这些元素的新操作。<br>            示例：编译时注解中的ElementVisitor中定义多个Visit接口，每个接口处理一种数据类型，这就是典型的访问者模式，访问者模式正好解决了数据结构和数据操作分离的问题，避免某些操作污染了数据对象类。<br>（16） 解释器模式：<br>            简介：给定一个语言，定义它的文法的一种表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子。<br>            示例：PackageParser这个类对AndroidManifest.xml这个配置文件的解析过程，<br>（17）迭代器模式<br>            简介：提供一种方法顺序访问一个聚合对象中各个元素, 而又不需暴露该对象的内部表示。<br>            示例：在Android中除了各种数据结构体，如List，Map，等包含的迭代器以外，Android源码中也提供了迭代器遍历模式，比如数据库查询使用Cursor，当我们使用SQLiteDataBase的query方法查询数据库时，会返回一个Cursor游标对象，该游标对象实际上就是一个具体的迭代器。<br>（18）备忘录模式<br>            简介：不需要了解对象的内部结构的情况下备份对象的状态，方便以后恢复。<br>            示例：Activity的onSaveInstanceState和onRestoreInstanceState就是通过Bundle这种序列化的数据结构来存储Activity的状态，至于其中存储的数据结构，这两个方法不用关心。<br>（19）责任链模式<br>            简介：有多个的对象可以处理一个请求，哪个对象处理该请求运行时刻自动确定。<br>            示例:  责任链模式在Android源码中比较类似的实现莫过于对事件的分发处理，每当用户接触屏幕时候，Android都会将对应的事件包装成一个事件对象从ViewTree的顶部至上而下的分发传递。ViewGroup事件投递的递归调用就类似一条责任链，一旦寻找到责任者，那么就由责任者持有并消费该次事件，具体的体现在View的onTouchEvent方法中的返回值，如果OnTouchEvent返回false，那么意味着当前View不会是该次事件的责任人，将不会对该事件持有。<br>（20）状态模式：<br>            简介：状态发生改变时，行为改变。<br>            示例：View.onVisibilityChanged方法，就是提供了一个状态模式的实现，允许在View的visibility发生改变时，引发执行onVisibilityChanged方法中的动作。<br>（21）策略模式<br>            简介：定义了一系列封装了算法、行为的对象，他们可以相互替换。<br>            示例：Java.util.List就是定义了一个增（add）、删（remove）、改（set）、查（indexOf）策略，至于实现这个策略的ArrayList、LinkedList等类，只是在具体实现时采用了不同的算法。但因为它们策略一样，不考虑速度的情况下，使用时完全可以互相替换使用。<br>（22）命令模式<br>            简介：把请求封装成一个对象发送出去，方便定制、排队、取消。<br>            示例：Handler.post后Handler.handleMessage。<br>（23）享元模式<br>            简介：运用共享技术有效地支持大量细粒度的对象。<br>            示例：Message.obtainMessage通过重用Message对象来避免大量的Message对象被频繁的创建和销毁。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>（1）单例模式：<br>            简介：保证一个类仅有一个实例，并提供一个访问它的全局访问点。<br>            示例：Android中的系统级服务都是通过容器的单例模式实现方式，以单例形式存在，减少了资源消耗。<br>            比如LayoutInflater Service，将这些服务以键值对的形式存储在一个HashMap容器中，用户使用时只需要根据key来获取到对应的ServiceFetcher，然后通过ServcieFetcher对象的getService函数来获取到具体的服务对象，第一次获取时会调用ServcieFetcher的createService函数创建服务对象，然后将该对象缓存到一个列表中，下次再取时直接从缓存中获取，避免重复创建对象，从而达到单例的效果。<br>（2）抽象工厂模式：<br>            简介：提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。<br>            示例：Android底层对MediaPlayer的创建。MediaPlayerFactory是Android底层为了创建不同的MediaPlayer所定义的一个类。<br>（3）工厂模式：<br>            简介：定义一个用于创建对象的接口，让子类决定将哪一个类实例化。<br>            示例：BitmapFactory位图工厂，专门用来将指定的图片转换为指定的位图Bitmap。<br>（4）原型模式：<br>            简介：用原型实例指定创建对象的种类，并且通过拷贝这个原型来创建新的对象。<br>            示例：比如我们需要一张Bitmap的几种不同格式：ARGB_8888、RGB_565、ARGB_4444、ALAPHA_8等。那我们就可以先创建一个ARGB_8888的Bitmap作为原型，在它的基础上，通过调用Bitmap.copy(Config)来创建出其它几种格式的Bitmap。另外一个例子就是Java中所有对象都有的一个名字叫clone的方法，已经原型模式的代名词了。在系统中要创建大量的对象，这些对象之间具有几乎完全相同的功能，只是在细节上有一点儿差别。<br>（5）建造者模式：<br>            简介：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。<br>            示例：AlertDialog.Builder   ImageLoader的初始配置。<br>（6）适配器模式：<br>            简介：将一个类的接口转换成客户希望的另外一个接口。<br>            示例：不同的数据提供者使用一个适配器来向一个相同的客户提供服务。<br>            ListView或GridView的Adapter。<br>（7）桥接模式：<br>            简介：将抽象部分与它的实现部分分离，使它们都可以独立地变化。<br>            示例：Window和WindowManager之间的关系。<br>            在FrameWork中Window和PhoneWindow构成窗口的抽象部分，其中Window类为该抽象部分的抽象接口，PhoneWindow为抽象部分具体的实现及扩展。而WindowManager则为实现部分的基类，WindowManagerImpl则为实现部分具体的逻辑实现。<br>（8）装饰模式：<br>            简介：动态地给一个对象添加一些额外的职责。就扩展功能而言， 它比生成子类方式更为灵活。<br>            示例：Activity继承自ContextThemeWrapper，ContextThemeWrapper继承自ContextWrapper，ContextWrapper才是继承自Context。ContextWrapper就是我们找的装饰者。<br>（9）组合模式：<br>            简介：将对象组合成树形结构以表示“部分-整体”的层次结构。<br>            示例：View和ViewGroup的组合<br>（10）外观模式<br>            简介：为子系统中的一组接口提供一个一致的界面，Facade模式定义了一个高层接口，统一编程接口。<br>            示例：ContextImpl<br>（11）享元模式：<br>            简介：运用共享技术有效地支持大量细粒度的对象。<br>            示例：Message.obtainMessage通过重用Message对象来避免大量的Message对象被频繁的创建和销毁。<br>（12）代理模式：<br>            简介：为其他对象提供一个代理以控制对这个对象的访问。<br>            示例：所有的AIDL都一个代理模式的例子。假设一个Activity A去绑定一个Service S，那么A调用S中的每一个方法其实都是通过系统的Binder机制的中转，然后调用S中的对应方法来做到的。Binder机制就起到了代理的作用。<br>（13）观察者模式：<br>            简介：一个对象发生改变时，所有信赖于它的对象自动做相应改变。<br>            示例：我们可以通过BaseAdapter.registerDataSetObserver和BaseAdapter.unregisterDataSetObserver两方法来向BaseAdater注册、注销一个DataSetObserver。这个过程中，DataSetObserver就是一个观察者，它一旦发现BaseAdapter内部数据有变量，就会通过回调方法DataSetObserver.onChanged和DataSetObserver.onInvalidated来通知DataSetObserver的实现类。事件通知也是观察者模式。<br>（14）中介者模式：<br>            简介：用一个中介对象来封装一系列的对象交互。中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。<br>            示例：Binder机制。<br>(15)访问者模式:<br>            简介：表示一个作用于某对象结构中的各元素的操作。它使你可以在不改变各元素的类的前提下定义作用于这些元素的新操作。<br>            示例：编译时注解中的ElementVisitor中定义多个Visit接口，每个接口处理一种数据类型，这就是典型的访问者模式，访问者模式正好解决了数据结构和数据操作分离的问题，避免某些操作污染了数据对象类。<br>（16） 解释器模式：<br>            简介：给定一个语言，定义它的文法的一种表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子。<br>            示例：PackageParser这个类对AndroidManifest.xml这个配置文件的解析过程，<br>（17）迭代器模式<br>            简介：提供一种方法顺序访问一个聚合对象中各个元素, 而又不需暴露该对象的内部表示。<br>            示例：在Android中除了各种数据结构体，如List，Map，等包含的迭代器以外，Android源码中也提供了迭代器遍历模式，比如数据库查询使用Cursor，当我们使用SQLiteDataBase的query方法查询数据库时，会返回一个Cursor游标对象，该游标对象实际上就是一个具体的迭代器。<br>（18）备忘录模式<br>            简介：不需要了解对象的内部结构的情况下备份对象的状态，方便以后恢复。<br>            示例：Activity的onSaveInstanceState和onRestoreInstanceState就是通过Bundle这种序列化的数据结构来存储Activity的状态，至于其中存储的数据结构，这两个方法不用关心。<br>（19）责任链模式<br>            简介：有多个的对象可以处理一个请求，哪个对象处理该请求运行时刻自动确定。<br>            示例:  责任链模式在Android源码中比较类似的实现莫过于对事件的分发处理，每当用户接触屏幕时候，Android都会将对应的事件包装成一个事件对象从ViewTree的顶部至上而下的分发传递。ViewGroup事件投递的递归调用就类似一条责任链，一旦寻找到责任者，那么就由责任者持有并消费该次事件，具体的体现在View的onTouchEvent方法中的返回值，如果OnTouchEvent返回false，那么意味着当前View不会是该次事件的责任人，将不会对该事件持有。<br>（20）状态模式：<br>            简介：状态发生改变时，行为改变。<br>            示例：View.onVisibilityChanged方法，就是提供了一个状态模式的实现，允许在View的visibility发生改变时，引发执行onVisibilityChanged方法中的动作。<br>（21）策略模式<br>            简介：定义了一系列封装了算法、行为的对象，他们可以相互替换。<br>            示例：Java.util.List就是定义了一个增（add）、删（remove）、改（set）、查（indexOf）策略，至于实现这个策略的ArrayList、LinkedList等类，只是在具体实现时采用了不同的算法。但因为它们策略一样，不考虑速度的情况下，使用时完全可以互相替换使用。<br>（22）命令模式<br>            简介：把请求封装成一个对象发送出去，方便定制、排队、取消。<br>            示例：Handler.post后Handler.handleMessage。<br>（23）享元模式<br>            简介：运用共享技术有效地支持大量细粒度的对象。<br>            示例：Message.obtainMessage通过重用Message对象来避免大量的Message对象被频繁的创建和销毁。</p>\n"},{"title":"markdown编辑器","date":"2018-05-22T02:23:08.000Z","_content":"小书匠 [下载地址](http://soft.xiaoshujiang.com/download.html)\n能够将数据保存到github、云存贮等；\n","source":"_posts/markdown编辑器.md","raw":"---\ntitle: markdown编辑器\ndate: 2018-05-22 10:23:08\ntags: \n- markdown\ncategories:\n- 编辑器\n---\n小书匠 [下载地址](http://soft.xiaoshujiang.com/download.html)\n能够将数据保存到github、云存贮等；\n","slug":"markdown编辑器","published":1,"updated":"2018-05-22T03:25:39.964Z","_id":"cjhh21vbk0000dkw51jvfkx5q","comments":1,"layout":"post","photos":[],"link":"","content":"<p>小书匠 <a href=\"http://soft.xiaoshujiang.com/download.html\" target=\"_blank\" rel=\"noopener\">下载地址</a><br>能够将数据保存到github、云存贮等；</p>\n","site":{"data":{}},"excerpt":"","more":"<p>小书匠 <a href=\"http://soft.xiaoshujiang.com/download.html\" target=\"_blank\" rel=\"noopener\">下载地址</a><br>能够将数据保存到github、云存贮等；</p>\n"}],"PostAsset":[{"_id":"source/_posts/妞妞照片/001.jpg","slug":"001.jpg","post":"cjhh1ew770004wgw5putvjkq8","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cjhh1ew770004wgw5putvjkq8","category_id":"cjhh1ew7c0007wgw5e9qq6d8d","_id":"cjhh1ew7r000gwgw5qgslseco"},{"post_id":"cjhh1ew7k000awgw51evww2bq","category_id":"cjhh1ew7o000dwgw55fncwh7z","_id":"cjhh1ew7v000lwgw53e813l6w"},{"post_id":"cjhh1ew7m000bwgw5hj2byyz2","category_id":"cjhh1ew7t000iwgw5ohu8dfgg","_id":"cjhh1ew7w000pwgw51ugww4af"},{"post_id":"cjhh1ew7o000fwgw5thcdhwuk","category_id":"cjhh1ew7v000nwgw528j6pnav","_id":"cjhh1ew7z000swgw5q52286v1"},{"post_id":"cjhh21vbk0000dkw51jvfkx5q","category_id":"cjhh2ltb00001dkw5fzycr4oz","_id":"cjhh2ltb10004dkw5antw9wd1"}],"PostTag":[{"post_id":"cjhh1ew770004wgw5putvjkq8","tag_id":"cjhh1ew7e0008wgw51l8j5ur1","_id":"cjhh1ew7o000ewgw5cyzunvda"},{"post_id":"cjhh1ew7a0006wgw55a1o4udb","tag_id":"cjhh1ew7n000cwgw5zdzktgwv","_id":"cjhh1ew7t000jwgw5imuh5aio"},{"post_id":"cjhh1ew7f0009wgw5zz9i7uj6","tag_id":"cjhh1ew7e0008wgw51l8j5ur1","_id":"cjhh1ew7v000mwgw54ehu6c7i"},{"post_id":"cjhh1ew7k000awgw51evww2bq","tag_id":"cjhh1ew7u000kwgw5qgppcvt7","_id":"cjhh1ew7w000qwgw5a1a89ai5"},{"post_id":"cjhh1ew7m000bwgw5hj2byyz2","tag_id":"cjhh1ew7w000owgw5ejvsrwsk","_id":"cjhh1ew7z000twgw5l7ug4xap"},{"post_id":"cjhh1ew7o000fwgw5thcdhwuk","tag_id":"cjhh1ew7w000owgw5ejvsrwsk","_id":"cjhh1ew80000uwgw58mzk7tiq"},{"post_id":"cjhh21vbk0000dkw51jvfkx5q","tag_id":"cjhh2ltb00002dkw51w74ccpu","_id":"cjhh2ltb10003dkw5yr2nh1hm"}],"Tag":[{"name":"妞妞","_id":"cjhh1ew7e0008wgw51l8j5ur1"},{"name":"给自己","_id":"cjhh1ew7n000cwgw5zdzktgwv"},{"name":"反射","_id":"cjhh1ew7u000kwgw5qgppcvt7"},{"name":"设计模式","_id":"cjhh1ew7w000owgw5ejvsrwsk"},{"name":"markdown","_id":"cjhh2ltb00002dkw51w74ccpu"}]}}